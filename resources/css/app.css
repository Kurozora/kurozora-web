/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 */
@tailwind base;

html, body {
  @apply h-full
  w-full
  scroll-smooth;
}

code {
  @apply tracking-normal;
}

::selection {
  @apply btn-text-tinted
  bg-tint;
}

:focus:not(:focus-visible) {
  @apply outline-none
  ring-0
  ring-offset-0;
}

:focus-visible {
  @apply outline-none
  ring-2
  ring-offset-2
  ring-tint
  rounded;
}

/* clears the ‘x’ from Internet Explorer */
input[type=search]::-ms-clear { display: none; width : 0; height: 0; }
input[type=search]::-ms-reveal { display: none; width : 0; height: 0; }
/* clears the ‘x’ from Chrome */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration { display: none; }

/**
 * Remove the default box-shadow for invalid elements to prevent
 * inputs in Livewire components showing with a
 * red border by default in Firefox.
 */
input:invalid, textarea:invalid, select:invalid {
  box-shadow: none;
}

/**
 * This injects any component classes registered by plugins.
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 */

/* Global styles */
ul, ol {
  margin: 1em 0 1em 1.1em;
}

body {
  @apply flex
  flex-col
  leading-snug
  tracking-tight;

  quotes: "“" "”";
}

main {
  @apply flex-grow;
}

img {
  @apply select-none;
}

picture::before {
  @apply absolute
  block
  bg-transparent
  h-full
  w-full;

  content: "";
}

/* Hide reCAPTCHA */
.grecaptcha-badge {
  @apply invisible;
}

/**
 * This injects all of Tailwind's utility classes, generated based on the
 * config file.
 */
@tailwind utilities;
@layer utilities {
  /* Chrome, Safari and Opera */
  .no-scrollbar::-webkit-scrollbar {
    @apply hidden;
  }

  .no-scrollbar {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }

  .text-unset {
    text-align: unset;
  }

  .natural-shadow {
    filter: url('data:image/svg+xml,\
    <svg xmlns="http://www.w3.org/2000/svg">\
      <filter id="naturalShadow" x="-5" y="-5" width="10" height="10">\
        <feOffset in="SourceGraphic" dx="0" dy="4" />\
        <feGaussianBlur stdDeviation="10" result="blur" />\
        <feMerge>\
          <feMergeNode in="blur"/>\
          <feMergeNode in="SourceGraphic"/>\
        </feMerge>\
      </filter>\
    </svg>#naturalShadow');
  }

  .natural-shadow-lg {
    filter: url('data:image/svg+xml,\
    <svg xmlns="http://www.w3.org/2000/svg">\
      <filter id="naturalShadow" x="-10" y="-10" width="20" height="20">\
        <feOffset in="SourceGraphic" dx="0" dy="4" />\
        <feGaussianBlur stdDeviation="20" result="blur" />\
        <feMerge>\
          <feMergeNode in="blur"/>\
          <feMergeNode in="SourceGraphic"/>\
        </feMerge>\
      </filter>\
    </svg>#naturalShadow');
  }

  /**
   * Theme utilities
   */
  .bg-primary {
    background-color: var(--bg-primary-color);
  }
  .bg-secondary {
    background-color: var(--bg-secondary-color);
  }
  .bg-tertiary {
    background-color: var(--bg-tertiary-color);
  }
  .bg-inverse-primary {
    background-color: var(--primary-text-color);
  }
  .bg-inverse-secondary {
    background-color: var(--secondary-text-color);
  }
  .bg-tinted {
    background-color: var(--bg-tint-color);
  }
  .bg-blur {
    background-color: var(--bg-blur-color);
  }
  .bg-tint {
    background-color: var(--tint-color);
  }
  .bg-tint-800 {
    background-color: color-mix(in srgb, var(--tint-color), #444 20%);
  }

  .border-tint {
    border-color: var(--tint-color);
  }
  .border-primary {
    border-color: var(--border-color);
  }
  .ring-tint {
    --tw-ring-color: var(--tint-color);
  }
  .outline-tint {
    outline-color: var(--tint-color);
  }

  .text-primary {
    color: var(--primary-text-color);
  }
  .text-secondary {
    color: var(--secondary-text-color);
  }
  .text-tint {
    color: var(--tint-color);
  }
  .text-tint-800 {
    color: color-mix(in srgb, var(--tint-color), #444 20%);
  }
  .btn-text-tinted {
    color: var(--btn-tinted-text-color);
  }

  .primary-separator {
    background-color: var(--primary-separator-color);
  }
  .secondary-separator-color {
    background-color: var(--secondary-separator-color);
  }

  .shadow-primary {
    --tw-shadow-color: var(--primary-separator-color);
    --tw-shadow: var(--tw-shadow-colored);
  }
}

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 */

img:not([src]):not([srcset]) {
  visibility: hidden;
}

:root {
  --tint-color: #FF9300;
}

.app-theme {
  --bg-primary-color: #353A50;
  --bg-secondary-color: #454F63;
  --bg-tertiary-color: #667286;
  --border-color: #AFAFAF;
  --bg-blur-color: #353A50BF;
  --bg-tint-color: #50577D;
  --btn-tinted-text-color: #EEEEEE;
  --primary-text-color: #EEEEEE;
  --secondary-text-color: #AFAFAF;
  --primary-separator-color: #C6C5C5;
  --secondary-separator-color: #5A5D6D;
}

a[href*="#"]:not([href="#"]):not(.no-external-icon) {
  color: inherit;
  text-decoration: none;
}

a[href*="#"]:not([href="#"]):not(.no-external-icon):hover::after,
a[href*="#"]:not([href="#"]):not(.no-external-icon):focus::after {
  content: "\0020\1F517";
  white-space: nowrap;
}

[x-cloak] {
  display: none !important;
}

[target="_blank"]:not(.no-external-icon)::after {
  content: "\0020\2197";
  white-space: nowrap;
}

[disabled] {
  cursor: default;
  pointer-events: none;
  opacity: 25%;
}

/**
 * This injects all of Tailwind's screen classes, generated based on the
 * config file.
 */
@tailwind variants;
