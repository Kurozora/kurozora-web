{"version":3,"file":"/js/listen.js","mappings":"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","sources":["webpack:///./resources/js/helpers/music.js","webpack:///./resources/js/listen.js"],"sourcesContent":["export default class MusicManager {\n    // MARK: - Properties\n    /**\n     * The shared MusicKit instance.\n     *\n     * @type {MusicKit} shared\n     */\n    shared = null\n\n    /**\n     * Whether a music is playing.\n     *\n     * @type {boolean} isPlaying\n     */\n    isPlaying = false\n\n    /**\n     * Current music id.\n     *\n     * @type {string} currentMusicID\n     */\n    currentMusicID = ''\n\n    /**\n     * The audio player's current progress.\n     *\n     * @type {number} progress\n     */\n    progress = 0\n\n    /**\n     * The current playback duration.\n     *\n     * @type {string} currentPlaybackDuration\n     */\n    currentPlaybackDuration = \"00:30\"\n\n    /**\n     * The options used to initialize MusicKit.\n     *\n     * @type {{app: {build: string, icon: string, name: string, version: string}, developerToken: string}} options\n     */\n    options = {\n        developerToken: '',\n        app: {\n            build: '',\n            icon: '',\n            name: '',\n            version: ''\n        }\n    }\n\n    /**\n     * Whether the events have been initialized.\n     *\n     * @type {boolean} hasInitEvents\n     */\n    hasInitEvents = false\n\n    // MARK: - Initializers\n    /**\n     * Create a new instance of Kurozora Player.\n     *\n     * @constructor\n     *\n     * @param {{app: {build: string, icon: string, name: string, version: string}, developerToken: string}} options - options\n     */\n    constructor(options) {\n        MusicKit.configure(options)\n        this.shared = MusicKit.getInstance()\n    }\n\n    // MARK: - Functions\n    /**\n     * Bind events to the audio player.\n     */\n    initEvents() {\n        if (this.hasInitEvents) {\n            return\n        }\n        this.hasInitEvents = true\n\n        let audioElement = this.shared.player._currentPlayer.audio\n\n        audioElement.addEventListener('play', (event) => {\n            this.progress = audioElement.currentTime\n        })\n        audioElement.addEventListener('timeupdate', (event) => {\n            this.progress = audioElement.currentTime\n            this.currentPlaybackDuration = this.getTime(this.shared.player.currentPlaybackTimeRemaining * 1000)\n        })\n        audioElement.addEventListener('ended', (event) => {\n            this.isPlaying = false\n        })\n    }\n\n    /**\n     * Create a media item from the given song object.\n     *\n     * @param {MusicKit.Song} song - a MusicKit song object.\n     *\n     * @returns {*&{container: {id}}}\n     */\n    createMediaItem(song) {\n        return {\n            ...song,\n            container: {\n                id: song.id\n            }\n        }\n    }\n\n    /**\n     * Returns the url of the artwork for the given song.\n     *\n     * @param {MusicKit.Song} song - the song object\n     * @param {number} width - the width of the artwork\n     * @param {number} height - the height of the artwork\n     *\n     * @returns {string}\n     */\n    getArtworkURL(song, width = 500, height = 500) {\n        return MusicKit.formatArtworkURL(song.attributes.artwork, width, height)\n    }\n\n    /**\n     * Get time from milliseconds.\n     *\n     * @param {number} milliseconds\n     *\n     * @returns {string}\n     */\n    getTime(milliseconds) {\n        if (!milliseconds || isNaN(milliseconds)) {\n            milliseconds = 0\n        }\n\n        const seconds = 1000 * Math.round(milliseconds / 1000)\n        const date = new Date(seconds)\n\n        return `${String(`0${date.getUTCMinutes()}`).slice(-2)}:${String(`0${date.getUTCSeconds()}`).slice(-2)}`\n    }\n\n    /**\n     * Set audio player's current time to the given value.\n     *\n     * @param {number} value\n     */\n    seekTo(value) {\n        this.shared.player.seekToTime(value)\n    }\n\n    /**\n     * Create a queue with the given items.\n     *\n     * @param {MusicKit.Song[]} items - an array of songs.\n     * @returns {Promise<void>}\n     */\n    async setQueueItems(items) {\n        const filteredItems = items.filter(item => item)\n\n        if (filteredItems.length === 0) {\n            return\n        }\n\n        await this.shared.setQueue({\n            items: filteredItems.map(item => this.createMediaItem(item))\n        })\n    }\n\n    /**\n     * Toggle song.\n     *\n     * @param song\n     * @returns {Promise<void>}\n     */\n    async playSong(song) {\n        if (!!song) {\n            if (this.currentMusicID === song.id && this.shared.player.isPlaying) {\n                this.shared.player.pause()\n                this.isPlaying = false\n            } else if (this.currentMusicID === song.id) {\n                this.shared.player.play()\n                this.isPlaying = true\n            } else {\n                await this.setQueueItems([song]).then(() => {\n                    this.shared.player.play()\n                })\n                this.isPlaying = true\n                this.initEvents()\n            }\n\n            this.currentMusicID = song.id\n        }\n    }\n\n    /**\n     * Fetch song with the given ID.\n     *\n     * @param {string} id - id of the song\n     *\n     * @returns {Promise<{songName, albumName, isExplicit: *, artworkURL: *, artistName, artwork: *, songUrl: *}>}\n     */\n    async fetchSong(id) {\n        return await this.shared.api.song(id)\n    }\n}\n","import MusicManager from './helpers/music'\n\nwindow.addEventListener('musickitloaded', function ($event) {\n    window.musicManager = new MusicManager({\n        developerToken: process.env.MIX_APPLE_CLIENT_SECRET,\n        app: {\n            build: '1.17.0-alpha.1',\n            icon: '/images/static/icon/app_icon.webp',\n            name: 'Kurozora',\n            version: '1.17.0-alpha.1'\n        }\n    })\n    window.dispatchEvent(new Event('musicmanagerloaded'))\n})\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","Number","_toPrimitive","MusicManager","options","_classCallCheck","developerToken","app","build","icon","name","version","MusicKit","configure","this","shared","getInstance","_this","hasInitEvents","audioElement","player","_currentPlayer","audio","addEventListener","event","progress","currentTime","currentPlaybackDuration","getTime","currentPlaybackTimeRemaining","isPlaying","song","container","id","width","undefined","height","formatArtworkURL","attributes","artwork","milliseconds","isNaN","seconds","Math","round","date","Date","concat","getUTCMinutes","slice","getUTCSeconds","seekToTime","_setQueueItems","_callee","items","filteredItems","_this2","_context","item","setQueue","map","createMediaItem","_x","_playSong","_callee2","_this3","_context2","currentMusicID","pause","play","setQueueItems","initEvents","_x2","_fetchSong","_callee3","_context3","api","_x3","window","$event","musicManager","process","dispatchEvent","Event"],"sourceRoot":""}