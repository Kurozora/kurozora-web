{"version":3,"file":"/js/gif.js","mappings":"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","sources":["webpack:///./resources/js/helpers/gif.js","webpack:///./resources/js/gif.js"],"sourcesContent":["import {decompressFrames, ParsedFrame, parseGIF} from 'gifuct-js'\n\n/**\n * GIF Player class to handle loading and rendering GIFs on a canvas.\n */\nexport class GIF {\n    /**\n     * Canvas element where the GIF will be rendered.\n     *\n     * @type {HTMLCanvasElement}\n     */\n    canvas\n\n    /**\n     * URL of the GIF to load.\n     *\n     * @type {string}\n     */\n    gifUrl\n\n    /**\n     * Playback speed multiplier for the GIF.\n     *\n     * @type {number}\n     */\n    speed\n\n    /**\n     * Indicates if the GIF is currently playing.\n     *\n     * @type {boolean}\n     */\n    isPlaying\n\n    /**\n     * Total number of frames in the GIF.\n     *\n     * @type {number}\n     */\n    frameCount\n\n    /**\n     * Total duration of the GIF in milliseconds.\n     *\n     * @type {number}\n     */\n    totalDuration\n\n    /**\n     * Elapsed time since the GIF started playing, in milliseconds.\n     *\n     * @type {number}\n     */\n    elapsedTime\n\n    /**\n     * Rendering context for the canvas.\n     *\n     * @type {RenderingContext | null}\n     */\n    ctx\n\n    /**\n     * Array of parsed frames from the GIF.\n     *\n     * @type {ParsedFrame[]}\n     */\n    frames\n\n    /**\n     * The current index of the frame being rendered.\n     *\n     * @type {number}\n     */\n    frameIndex\n\n    /**\n     * Timestamp of the last frame rendered, used for timing.\n     *\n     * @type {number}\n     */\n    lastRender\n\n    /**\n     * Creates a new GIF player instance.\n     *\n     * @param canvas {HTMLCanvasElement} Canvas element to render the GIF on.\n     * @param gifUrl {string} URL of the GIF to load.\n     * @param speed {number} Playback speed multiplier (default is 1.0).\n     */\n    constructor({canvas, gifUrl, speed = 1.0}) {\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n        this.gifUrl = gifUrl\n        this.speed = speed\n\n        this.frames = []\n        this.frameCount = 0\n        this.frameIndex = 0\n        this.isPlaying = false\n        this.lastRender = 0\n        this.totalDuration = 0\n        this.elapsedTime = 0\n    }\n\n    async init() {\n        await this.loadGIF()\n        this.frameCount = this.frames.length\n        this.totalDuration = this.frames.map(frame => frame.delay)\n            .reduce(function (sum, delay) {\n                return sum + delay\n            }, 0)\n\n        const isReduced = window.matchMedia(`(prefers-reduced-motion: reduce)`) === true || window.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true;\n        if (!isReduced) {\n            this.play()\n        }\n    }\n\n    /**\n     * Loads the GIF from the specified URL and parses its frames.\n     *\n     * @returns {Promise<void>}\n     */\n    async loadGIF() {\n        const response = await fetch(this.gifUrl)\n        const buffer = await response.arrayBuffer()\n        const parsedGif = parseGIF(buffer)\n        this.frames = decompressFrames(parsedGif, true)\n    }\n\n    /**\n     * Starts the rendering loop for the GIF.\n     */\n    startRenderLoop() {\n        const render = (timestamp) => {\n            if (!this.isPlaying) {\n                return\n            }\n\n            const frame = this.frames[this.frameIndex]\n            const delay = (frame.delay || 10) / this.speed // delay is in hundredths of sec\n\n            if (timestamp - this.lastRender > delay) {\n                this.frameIndex = (this.frameIndex + 1) % this.frames.length\n                this.renderFrame(frame)\n                this.lastRender = timestamp\n            }\n\n            requestAnimationFrame(render)\n        }\n        requestAnimationFrame(render)\n    }\n\n    /**\n     * Renders a specific frame on the canvas.\n     *\n     * @param frame {ParsedFrame} The frame to render.\n     */\n    renderFrame(frame) {\n        const imgData = new ImageData(new Uint8ClampedArray(frame.patch), frame.dims.width, frame.dims.height)\n        this.canvas.width = frame.dims.width\n        this.canvas.height = frame.dims.height\n        this.ctx.putImageData(imgData, frame.dims.left, frame.dims.top)\n\n        this.elapsedTime = this.frames\n            .slice(0, this.frameIndex)\n            .map(frame => frame.delay)\n            .reduce((sum, delay) => sum + delay, 0)\n    }\n\n    /**\n     * Starts playing the GIF.\n     */\n    play() {\n        this.isPlaying = true\n        this.startRenderLoop()\n    }\n\n    /**\n     * Pauses the GIF playback.\n     */\n    pause() {\n        this.isPlaying = false\n    }\n\n    /**\n     * Toggles the playback state of the GIF.\n     */\n    toggle() {\n        if(this.isPlaying) {\n            this.pause()\n        } else {\n            this.play()\n        }\n    }\n\n    /**\n     * Scrubs to a specific frame in the GIF.\n     *\n     * @param frameIndex\n     */\n    scrubTo(frameIndex) {\n        this.pause()\n        this.frameIndex = frameIndex\n        this.renderFrame(this.frames[frameIndex])\n    }\n\n    /**\n     * Sets the playback speed of the GIF.\n     *\n     * @param speed\n     */\n    setSpeed(speed) {\n        this.speed = speed\n    }\n\n    formatTime(ms) {\n        const totalSeconds = Math.floor(ms / 1000);\n        const minutes = Math.floor(totalSeconds / 60);\n        const seconds = totalSeconds % 60;\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    }\n\n    get currentTimeFormatted() {\n        return this.formatTime(this.elapsedTime);\n    }\n\n    get totalTimeFormatted() {\n        return this.formatTime(this.totalDuration);\n    }\n}\n","import {GIF} from './helpers/gif'\n\nwindow.gifPlayer = (url) => ({\n    manager: null,\n    currentFrame: 0,\n    speed: '1.00',\n    isTouch: false,\n    showControls: false,\n    hideControlsTimeout: null,\n    isCustomSpeed: null,\n    playbackSpeeds: [0.5, 1.0, 1.50, 1.75, 2.00],\n    minPlaybackSpeed: 0.25,\n    maxPlaybackSpeed: 4.00,\n\n    async init() {\n        this.$watch('speed', (value) => this.changeSpeed(value))\n\n        this.manager = new GIF({\n            canvas: this.$refs.canvas,\n            gifUrl: url,\n            speed: this.speed\n        })\n        this.manager.init()\n    },\n\n    scrub() {\n        this.manager.scrubTo(parseInt(this.currentFrame))\n    },\n\n    changeSpeed() {\n        let speed = parseFloat(this.speed)\n        if (isNaN(speed) || speed < this.minPlaybackSpeed) {\n            speed = this.minPlaybackSpeed\n        } else if (speed > this.maxPlaybackSpeed) {\n            speed = this.maxPlaybackSpeed\n        }\n        this.speed = speed.toFixed(2).toString()\n        this.isCustomSpeed = !this.playbackSpeeds.includes(speed)\n        this.manager.setSpeed(speed)\n    },\n\n    showControlsTemporarily() {\n        this.showControls = true\n        clearTimeout(this.hideControlsTimeout)\n        this.hideControlsTimeout = setTimeout(() => {\n            if (!this.isTouch) this.showControls = false\n        }, 2000)\n    },\n\n    toggleControls() {\n        this.showControls = !this.showControls\n    },\n\n    onPointerDown(event) {\n        this.isTouch = event.pointerType !== 'mouse';\n        console.log('onPointerDown:', 'pointerType:', event.pointerType)\n    },\n\n    onPointerUp(event) {\n        console.log('onPointerUp:', this.isTouch ? 'touch' : event.pointerType);\n        if (this.isTouch) {\n            this.toggleControls()\n        }\n    },\n\n    onPointerEnter(event) {\n        console.log('onPointerEnter:', this.isTouch ? 'touch' : event.pointerType);\n        if (!this.isTouch) {\n            this.showControls = true\n        }\n    },\n\n    onPointerLeave(event) {\n        console.log('onPointerLeave:', this.isTouch ? 'touch' : event.pointerType);\n        if (!this.isTouch) {\n            this.showControls = false\n        }\n    }\n})\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_defineProperty","_typeof","toPrimitive","String","Number","_toPrimitive","GIF","_ref","canvas","gifUrl","_ref$speed","speed","_classCallCheck","this","ctx","getContext","frames","frameCount","frameIndex","isPlaying","lastRender","totalDuration","elapsedTime","_init","_callee","_context","loadGIF","map","frame","delay","reduce","sum","window","matchMedia","matches","play","_loadGIF","_callee2","response","buffer","parsedGif","_context2","fetch","arrayBuffer","parseGIF","decompressFrames","_this","render","timestamp","renderFrame","requestAnimationFrame","imgData","ImageData","Uint8ClampedArray","patch","dims","width","height","putImageData","left","top","slice","startRenderLoop","pause","ms","totalSeconds","Math","floor","minutes","seconds","concat","toString","padStart","get","formatTime","gifPlayer","url","manager","currentFrame","isTouch","showControls","hideControlsTimeout","isCustomSpeed","playbackSpeeds","minPlaybackSpeed","maxPlaybackSpeed","init","$watch","changeSpeed","$refs","scrub","scrubTo","parseInt","parseFloat","isNaN","toFixed","includes","setSpeed","showControlsTemporarily","_this2","clearTimeout","setTimeout","toggleControls","onPointerDown","event","pointerType","console","log","onPointerUp","onPointerEnter","onPointerLeave"],"sourceRoot":""}