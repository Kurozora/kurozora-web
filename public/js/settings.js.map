{"version":3,"file":"/js/settings.js","mappings":"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","sources":["webpack:///./resources/js/helpers/settings/ThemeManager.js","webpack:///./resources/js/helpers/settings/AppIconManager.js","webpack:///./resources/js/helpers/settings.js","webpack:///./resources/js/settings.js"],"sourcesContent":["export default class ThemeManager {\n    localStorageKey = 'theme'\n\n    apply(theme) {\n        let styleTag = document.getElementById('kurozora-theme-style')\n        let themeHeader = document.querySelector('[name=\"theme-color\"]')\n        let lightThemeHeader = document.querySelector('[media*=\"prefers-color-scheme: light\"]')\n        let darkThemeHeader = document.querySelector('[media*=\"prefers-color-scheme: dark\"]')\n\n        if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.id = 'kurozora-theme-style'\n            document.head.appendChild(styleTag)\n        }\n\n        styleTag.innerHTML = theme.css\n\n        let backgroundColor = window.getComputedStyle(document.body).getPropertyValue('--bg-primary-color');\n        themeHeader.content = backgroundColor\n        lightThemeHeader.content = backgroundColor\n        darkThemeHeader.content = backgroundColor\n    }\n}\n","export default class AppIconManager {\n    localStorageKey = 'appIcon'\n\n    apply(appIcon) {\n        let appIconElements = document.querySelectorAll('#app-icon')\n        appIconElements.forEach(function (appIconElement) {\n            appIconElement.style.backgroundImage = `url('${appIcon.url}')`\n        })\n\n        let faviconElement = document.querySelector('[rel=\"shortcut icon\"]')\n        faviconElement.href = appIcon.url\n    }\n}\n","import ThemeManager from './settings/ThemeManager.js'\nimport AppIconManager from './settings/AppIconManager.js'\n\nexport default class KSettings {\n    #localStorageKey\n    #themeManager\n    #appIconManager\n    #settingsData\n\n    selectedAppIcon\n\n    constructor() {\n        this.#localStorageKey = 'settings'\n        this.#themeManager = new ThemeManager()\n        this.#appIconManager = new AppIconManager()\n        this.#settingsData = this.#loadSettings()\n\n        // Listen for relevant events\n        document.addEventListener('livewire:init', () => {\n            Livewire.on('app-icon-changed', (event) => {\n                this.#applyAppIcon(event.appIcon)\n                this.save(this.#appIconManager.localStorageKey, event.appIcon)\n            });\n\n            Livewire.on('theme-download', (event) => {\n                this.#applyTheme(event.theme)\n                this.save(this.#themeManager.localStorageKey, event.theme)\n            });\n        });\n\n        // Apply stored settings\n        if (this.#settingsData.theme) {\n            this.#applyTheme(this.#settingsData.theme)\n        }\n        if (this.#settingsData.appIcon) {\n            this.#applyAppIcon(this.#settingsData.appIcon)\n        }\n    }\n\n    // MARK: - Encryption/Decryption\n    #encryptData(data) {\n        return btoa(JSON.stringify(data))\n    }\n\n    #decryptData(data) {\n        try {\n            return JSON.parse(atob(data))\n        } catch {\n            return {}\n        }\n    }\n\n    // MARK: - Storage\n    #defaultSettingsData() {\n        let defaultSettings = {}\n        defaultSettings[this.#appIconManager.localStorageKey] = {\n            name: 'Kurozora',\n            url: null\n        }\n        return defaultSettings\n    }\n\n    #loadSettings() {\n        const storedSettings = localStorage.getItem(this.#localStorageKey)\n        return storedSettings ? this.#decryptData(storedSettings) : this.#defaultSettingsData()\n    }\n\n    save(key, value) {\n        this.#settingsData[key] = value\n        localStorage.setItem(this.#localStorageKey, this.#encryptData(this.#settingsData))\n    }\n\n    // MARK: - Apply Settings\n    #applyTheme(theme) {\n        this.#themeManager.apply(theme)\n    }\n\n    #applyAppIcon(appIcon) {\n        this.selectedAppIcon = appIcon\n        this.#appIconManager.apply(appIcon)\n    }\n}\n","import KSettings from './helpers/settings'\n\nwindow.settings = new KSettings()\n"],"names":["ThemeManager","_classCallCheck","key","value","theme","styleTag","document","getElementById","themeHeader","querySelector","lightThemeHeader","darkThemeHeader","createElement","id","head","appendChild","innerHTML","css","backgroundColor","window","getComputedStyle","body","getPropertyValue","content","AppIconManager","appIcon","querySelectorAll","forEach","appIconElement","style","backgroundImage","concat","url","href","_localStorageKey","WeakMap","_themeManager","_appIconManager","_settingsData","_KSettings_brand","WeakSet","KSettings","_this","_classPrivateFieldInitSpec","_defineProperty","_classPrivateFieldSet","this","_assertClassBrand","_loadSettings","call","addEventListener","Livewire","on","event","_applyAppIcon","save","_classPrivateFieldGet","localStorageKey","_applyTheme","localStorage","setItem","_encryptData","data","btoa","JSON","stringify","_decryptData","parse","atob","_unused","_defaultSettingsData","defaultSettings","name","storedSettings","getItem","apply","selectedAppIcon","settings"],"sourceRoot":""}