{"version":3,"file":"/js/watch.js","mappings":"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","sources":["webpack:///./resources/js/helpers/utilities/is.js","webpack:///./resources/js/helpers/plyr/screenshot.js","webpack:///./resources/js/helpers/utilities/object.js","webpack:///./resources/js/helpers/plyr/storage.js","webpack:///./resources/js/helpers/utilities/element.js","webpack:///./resources/js/helpers/utilities/controls.js","webpack:///./resources/js/helpers/plyr/amplify.js","webpack:///./resources/js/helpers/plyr/audio.js","webpack:///./resources/js/helpers/plyr.js","webpack:///./resources/js/watch.js"],"sourcesContent":["class Is {\n    /**\n     * List of available YouTube urls.\n     *\n     * @type {string[]}\n     */\n    static #youtubeUrls = [\n        'youtube.com',\n        'youtu.be',\n        'youtube-nocookie.com',\n    ]\n\n    /**\n     * Get the constructor of a value.\n     *\n     * @param e\n     * @returns {Function|null}\n     */\n    static getConstructor = function (e) {\n        return null != e ? e.constructor : null\n    }\n    /**\n     * Check if value is an instance of given object.\n     *\n     * @param e\n     * @param t\n     * @returns {boolean}\n     */\n    static instanceOf = function (e, t) {\n        return !!(e && t && e instanceof t)\n    }\n    /**\n     * Check if value is null or undefined.\n     * @param e\n     * @returns {boolean}\n     */\n    static isNullOrUndefined = function (e) {\n        return null == e\n    }\n    /**\n     * Check if value is an object.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isObject = function (e) {\n        return Is.getConstructor(e) === Object\n    }\n    /**\n     * Check if value is a number.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isNumber = function (e) {\n        return Is.getConstructor(e) === Number && !Number.isNaN(e)\n    }\n    /**\n     * Check if value is a string.\n     * @param e\n     * @returns {boolean}\n     */\n    static isString = function (e) {\n        return Is.getConstructor(e) === String\n    }\n    /**\n     * Check if the value is a boolean.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isBoolean = function (e) {\n        return Is.getConstructor(e) === Boolean\n    }\n    /**\n     * Check if value is a function.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isFunction = function (e) {\n        return Is.getConstructor(e) === Function\n    }\n    /**\n     * Check if value is array.\n     *\n     * @param e\n     * @returns {arg is any[]}\n     */\n    static isArray = function (e) {\n        return Array.isArray(e)\n    }\n    /**\n     * Check if value is a NodeList.\n     *\n     * @param e\n     * @returns {*}\n     */\n    static isNodeList = function (e) {\n        return Is.instanceOf(e, NodeList)\n    }\n    /**\n     * Check if value is element.\n     *\n     * @param e\n     * @returns {*}\n     */\n    static isElement = function (e) {\n        return Is.instanceOf(e, Element)\n    }\n    /**\n     * Check if value is event.\n     *\n     * @param e\n     * @returns {*}\n     */\n    static isEvent = function (e) {\n        return Is.instanceOf(e, Event)\n    }\n    /**\n     * Check if value is empty.\n     *\n     * @param e\n     * @returns {boolean|arg is any[]|*}\n     */\n    static isEmpty = function (e) {\n        return Is.isNullOrUndefined(e) || (Is.isString(e) || Is.isArray(e) || Is.isNodeList(e)) && !e.length || Is.isObject(e) && !Object.keys(e).length\n    }\n\n    /**\n     * Whether the video is Mp4.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isMp4 = function (e) {\n        return e.includes('.mp4')\n    }\n\n    /**\n     * Whether the video is Hls.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isHls = function (e) {\n        return e.includes('.m3u8')\n    }\n\n    /**\n     * Whether the video is YouTube.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isYouTube = function (e) {\n        return Is.#youtubeUrls.some(youtubeUrl => e.includes(youtubeUrl))\n    }\n\n    /**\n     * Whether the video is iframe.\n     *\n     * @param e\n     * @returns {boolean}\n     */\n    static isIframe = function (e) {\n        return e.querySelector('iframe') != null\n    }\n}\n\nexport default {\n    nullOrUndefined: Is.isNullOrUndefined,\n    object: Is.isObject,\n    number: Is.isNumber,\n    string: Is.isString,\n    boolean: Is.isBoolean,\n    function: Is.isFunction,\n    array: Is.isArray,\n    nodeList: Is.isNodeList,\n    element: Is.isElement,\n    event: Is.isEvent,\n    empty: Is.isEmpty,\n    mp4: Is.isMp4,\n    hls: Is.isHls,\n    youTube: Is.isYouTube,\n    iframe: Is.isIframe\n}\n","import is from '../utilities/is'\n\nexport default class Screenshot {\n    /**\n     * The Plyr instance.\n     *\n     * @param {Plyr} player - player\n     */\n    #player\n\n    /**\n     * Create a new instance of Kurozora Player.\n     *\n     * @constructor\n     *\n     * @param {Plyr} player - player\n     */\n    constructor(player) {\n        this.#player = player\n        const { config } = this.#player\n\n        if (is.array(config.controls) && config.controls.includes('screenshot')) {\n            const screenshotLabel = config.i18n.screenshot || 'Screenshot (S)'\n\n            const menu = document.querySelector('button[data-plyr=\"captions\"]')\n            const buttonHTML = `\n                <button class=\"plyr__controls__item plyr__control\" type=\"button\" data-plyr=\"screenshot\">\n                    <svg aria-hidden=\"true\" focusable=\"false\">\n                        <path d=\"M9.098,7.566c0.758,0,1.408,0.27,1.946,0.809c0.539,0.538,0.809,1.188,0.809,1.946c0,0.758-0.27,1.406-0.809,1.946\n                        c-0.538,0.539-1.188,0.81-1.946,0.81c-0.759,0-1.408-0.271-1.947-0.81c-0.539-0.54-0.808-1.188-0.808-1.946\n                        c0-0.759,0.27-1.408,0.808-1.946C7.689,7.835,8.339,7.566,9.098,7.566z M14.862,3.471c0.59,0,1.093,0.241,1.511,0.723\n                        C16.79,4.676,17,5.258,17,5.939v8.646c0,0.682-0.21,1.264-0.627,1.747c-0.418,0.481-0.921,0.724-1.511,0.724H3.107\n                        c-0.59,0-1.095-0.242-1.511-0.724c-0.417-0.483-0.627-1.065-0.627-1.747V5.939c0-0.682,0.21-1.264,0.627-1.746\n                        c0.417-0.482,0.921-0.723,1.511-0.723h1.87l0.426-1.313c0.105-0.315,0.299-0.587,0.58-0.815C6.264,1.114,6.552,1,6.846,1h4.274\n                        c0.297,0,0.584,0.114,0.866,0.342c0.28,0.228,0.475,0.5,0.58,0.815l0.424,1.313H14.862L14.862,3.471z M9.098,14.606\n                        c1.179,0,2.188-0.419,3.026-1.258c0.84-0.839,1.258-1.847,1.258-3.027c0-1.18-0.418-2.188-1.258-3.027\n                        c-0.839-0.839-1.848-1.259-3.026-1.259c-1.18,0-2.189,0.42-3.028,1.259c-0.838,0.839-1.258,1.847-1.258,3.027\n                        c0,1.181,0.42,2.188,1.258,3.027C6.909,14.188,7.917,14.606,9.098,14.606z\"/>\n                    </svg>\n                    <span class=\"plyr__tooltip\">${screenshotLabel}</span>\n                </button>\n            `\n            menu.insertAdjacentHTML('beforebegin', buttonHTML)\n\n            const buttonElement = document.querySelector('button[data-plyr=\"screenshot\"]')\n            buttonElement.addEventListener('click', () => {\n                this.#screenshot(screenshotLabel)\n            })\n\n            window.addEventListener('keydown', (event) => {\n                const {\n                    key,\n                    type,\n                    altKey,\n                    ctrlKey,\n                    metaKey,\n                    shiftKey\n                } = event;\n                const pressed = type === 'keydown';\n\n                if (altKey || ctrlKey || metaKey || shiftKey) {\n                    return;\n                }\n\n                if (!key) {\n                    return;\n                }\n\n                if (pressed) {\n                    // Check focused element\n                    // and if the focused element is not editable (e.g. text input)\n                    // and any that accept key input http://webaim.org/techniques/keyboard/\n                    const focused = document.activeElement;\n\n                    if (is.element(focused)) {\n                        function matches(element, selector) {\n                            const {\n                                prototype\n                            } = Element;\n\n                            function match() {\n                                return Array.from(document.querySelectorAll(selector)).includes(this);\n                            }\n\n                            const method = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n                            return method.call(element, selector);\n                        }\n\n                        const {\n                            editable\n                        } = this.#player.config.selectors;\n\n                        if (matches(focused, editable)) {\n                            return;\n                        }\n\n                        if (event.key === 'Space' && matches(focused, 'button, [role^=\"menuitem\"]')) {\n                            return;\n                        }\n                    }\n                }\n\n                if (key.toLowerCase() === 's') {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this.#screenshot()\n                }\n            })\n        }\n    }\n\n    /**\n     * Save the file to disk.\n     *\n     * @param {string} url - image url\n     * @param filename - file name\n     */\n    #save(url, filename) {\n        const saveLink = document.createElement('a')\n        saveLink.href = url\n        saveLink.download = filename\n        const event = document.createEvent('MouseEvents')\n        event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n        saveLink.dispatchEvent(event)\n    }\n\n    /**\n     * Take a screenshot of the current video frame.\n     */\n    #screenshot() {\n        const label = this.#player.config.mediaMetadata.title ?? 'screenshot'\n        const width = this.#player.media.videoWidth\n        const height = this.#player.media.videoHeight\n\n        const canvas = Object.assign(document.createElement('canvas'), { width, height })\n        const canvasCtx = canvas.getContext('2d')\n        canvasCtx.drawImage(this.#player.media, 0, 0, canvas.width, canvas.height)\n\n        const dataURL = canvas.toDataURL('image/png')\n        this.#save(dataURL, `${label}.png`)\n    }\n}\n","import is from \"./is\";\n\n/**\n * Extend an object with the given keys.\n *\n * @param {{}} target - target\n * @param {*} sources - sources\n *\n * @returns {{}|*}\n */\nfunction extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target\n    }\n\n    const source = sources.shift()\n\n    if (!is.object(source)) {\n        return target\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, {\n                    [key]: {}\n                })\n            }\n\n            extend(target[key], source[key])\n        } else {\n            Object.assign(target, {\n                [key]: source[key]\n            })\n        }\n    })\n    return extend(target, ...sources)\n}\n\nexport default {\n    extend: extend\n}\n","import is from '../utilities/is'\nimport object from '../utilities/object'\n\nexport default class Storage {\n    /**\n     * @constructor\n     *\n     * @param {Plyr} player - player\n     */\n    constructor(player) {\n        this.enabled = player.config.storage.enabled\n        this.key = player.config.storage.key\n    }\n\n    /**\n     * Get an item.\n     *\n     * @param key - key\n     *\n     * @returns {*|null}\n     */\n    get(key) {\n        if (!Storage.#supported || !this.enabled) {\n            return null\n        }\n\n        const store = window.localStorage.getItem(this.key)\n\n        if (is.empty(store)) {\n            return null\n        }\n\n        const json = JSON.parse(store)\n        return is.string(key) && key.length ? json[key] : json\n    }\n\n    /**\n     * Set an value.\n     *\n     * @param {*|null} value - value\n     */\n    set(value) {\n        // Bail if we don't have localStorage support, or if it's disabled\n        if (!Storage.#supported || !this.enabled) {\n            return\n        }\n\n        // Can only store object\n        if (!is.object(value)) {\n            return\n        }\n\n        // Get current storage\n        let storage = this.get(null)\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {}\n        }\n\n        // Update the working copy of the values\n        object.extend(storage, value)\n\n        // Update storage\n        try {\n            window.localStorage.setItem(this.key, JSON.stringify(storage))\n        } catch (_) {\n            // Do nothing\n        }\n    }\n\n    /**\n     * Check for actual support (see if we can use it)\n     *\n     * @returns {boolean}\n     */\n    static get #supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false\n            }\n\n            const test = '___test'\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            window.localStorage.setItem(test, test)\n            window.localStorage.removeItem(test)\n            return true\n        } catch (_) {\n            return false\n        }\n    }\n}\n","import is from './is'\nimport object from './object'\n\n/**\n * Set the given attributes on the specified HTML element.\n *\n * @param {HTMLElement} element - element\n * @param {{}} attributes - attributes\n */\nfunction setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value))\n}\n\n/**\n * Create a new element with the specified type.\n *\n * @param {string} type - type\n * @param {{}} attributes - attributes\n * @param {string|null} text - text\n *\n * @returns {*}\n */\nfunction create(type, attributes, text = null) {\n    // Create a new <element>\n    const element = document.createElement(type)\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes)\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text\n    }\n\n    // Return built element\n    return element\n}\n\n/**\n * Remove element(s).\n *\n * @param {Element|Node|NodeList} element - element\n */\nfunction remove(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(remove)\n        return\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return\n    }\n\n    element.parentNode.removeChild(element)\n}\n\n/**\n * Get an attribute object from a string selector\n *\n * ```\n * For example:\n *     '.test' to { class: 'test' }\n *     '#test' to { id: 'test' }\n *     '[data-test=\"test\"]' to { 'data-test': 'test' }\n *```\n *\n * @param {string} selector - selector\n * @param {{}} existingAttributes - existing attributes\n *\n * @returns {{}|{}|*}\n */\nfunction getAttributesFromSelector(selector, existingAttributes = {}) {\n    if (!is.string(selector) || is.empty(selector)) {\n        return {}\n    }\n\n    const attributes = {}\n    const existing = object.extend({}, existingAttributes)\n\n    selector.split(',').forEach((s) => {\n        // Remove whitespace\n        const selector = s.trim()\n        const className = selector.replace('.', '')\n        const stripped = selector.replace(/[[\\]]/g, '')\n        // Get the parts and value\n        const parts = stripped.split('=')\n        const [key] = parts\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : ''\n        // Get the first character\n        const start = selector.charAt(0)\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.string(existing.class)) {\n                    attributes.class = `${existing.class} ${className}`\n                } else {\n                    attributes.class = className\n                }\n                break\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '')\n                break\n            case '[':\n                // Attribute selector\n                attributes[key] = value\n                break\n            default:\n                break\n        }\n    })\n\n    return object.extend(existing, attributes)\n}\n\n/**\n * Whether the given element matches the selector.\n *\n * @param {Element} element - element\n * @param {string} selector - selector\n *\n * @returns {boolean}\n */\nfunction matches(element, selector) {\n    const { prototype } = Element\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this)\n    }\n\n    const method =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match\n\n    return method.call(element, selector)\n}\n\n/**\n * Toggle hidden element.\n *\n * @param {Element} element - element\n * @param {boolean} hidden - hidden\n */\nfunction toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return\n    }\n\n    let hide = hidden\n\n    if (!is.boolean(hide)) {\n        hide = !element.hidden\n    }\n\n    element.hidden = hide\n}\n\n/**\n * Set focus and tab focus class.\n *\n * @param {Element} element - element\n * @param {boolean} tabFocus - tab focus\n */\nfunction setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus({ preventScroll: true });\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nfunction toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map((e) => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\nexport default {\n    create: create,\n    remove: remove,\n    setAttributes: setAttributes,\n    getAttributesFromSelector: getAttributesFromSelector,\n    matches: matches,\n    toggleHidden: toggleHidden,\n}\n","import is from './is'\nimport element from './element'\n\n// Bind keyboard shortcuts for a menu item\n// We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\nfunction bindMenuItemShortcuts(menuItem, type) {\n    // Navigate through menus via arrow keys and space\n    menuItem.addEventListener('keydown keyup', (event) => {\n        // We only care about space and ⬆️ ⬇️️ ➡️\n        if (!['Space', 'ArrowUp', 'ArrowDown', 'ArrowRight'].includes(event.key)) {\n            return\n        }\n\n        // Prevent play / seek\n        event.preventDefault()\n        event.stopPropagation()\n\n        // We're just here to prevent the keydown bubbling\n        if (event.type === 'keydown') {\n            return\n        }\n\n        const isRadioButton = element.matches(menuItem, '[role=\"menuitemradio\"]')\n\n        // Show the respective menu\n        if (!isRadioButton && ['Space', 'ArrowRight'].includes(event.key)) {\n            showMenuPanel(type, true)\n        } else {\n            let target\n\n            if (event.key !== 'Space') {\n                if (event.key === 'ArrowDown' || (isRadioButton && event.key === 'ArrowRight')) {\n                    target = menuItem.nextElementSibling\n\n                    if (!is.element(target)) {\n                        target = menuItem.parentNode.firstElementChild\n                    }\n                } else {\n                    target = menuItem.previousElementSibling\n\n                    if (!is.element(target)) {\n                        target = menuItem.parentNode.lastElementChild\n                    }\n                }\n\n                element.setFocus(target, true)\n            }\n        }\n    })\n\n    // Enter will fire a `click` event, but we still need to manage focus\n    // So we bind to keyup which fires after and set focus here\n    menuItem.addEventListener('keyup', (event) => {\n        if (event.key !== 'Return') return\n\n        controls.focusFirstMenuItem.call(this, null, true)\n    })\n}\n\n/**\n * Show a panel in the menu.\n *\n * @param {string} settingsMenu - settingsMenu\n * @param {boolean} tabFocus - tab focused\n */\nfunction showMenuPanel(settingsMenu = '', tabFocus = false) {\n    const target = document.querySelector(settingsMenu)\n\n    // Nothing to show, bail\n    if (!is.element(target)) {\n        return\n    }\n\n    // Hide all other panels\n    const container = target.parentNode\n    const current = Array.from(container.children).find((node) => !node.hidden)\n\n    // Set the current width as a base\n    container.style.width = `${current.scrollWidth}px`\n    container.style.height = `${current.scrollHeight}px`\n\n    // Get potential sizes\n    const size = getMenuSize(target)\n\n    // Restore auto height/width\n    const restore = (event) => {\n        // We're only bothered about height and width on the container\n        if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n            return\n        }\n\n        // Revert to auto\n        container.style.width = ''\n        container.style.height = ''\n\n        // Only listen once\n        container.removeEventListener(transitionEndEvent(), restore)\n    }\n\n    // Listen for the transition finishing and restore auto height/width\n    container.addEventListener(transitionEndEvent(), restore)\n\n    // Set dimensions to target\n    container.style.width = `${size.width}px`\n    container.style.height = `${size.height}px`\n\n    // Set attributes on current tab\n    element.toggleHidden(current, true)\n\n    // Set attributes on target\n    element.toggleHidden(target, false)\n\n    // Focus the first item\n    // controls.focusFirstMenuItem.call(this, target, tabFocus)\n}\n\n/**\n * Get event of transition end.\n *\n * @returns {string|boolean}\n */\nfunction transitionEndEvent() {\n    const element = document.createElement('span')\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    }\n    const type = Object.keys(events).find((event) => element.style[event] !== undefined)\n\n    return is.string(type) ? events[type] : false\n}\n\n/**\n * Get the natural size of a menu panel\n *\n * @param {Element} tab\n * @returns {{width: (*|number), height: (*|number)}}\n */\nfunction getMenuSize(tab) {\n    const clone = tab.cloneNode(true)\n    clone.style.position = 'absolute'\n    clone.style.opacity = 0\n    clone.removeAttribute('hidden')\n\n    // Append to parent, so we get the \"real\" size\n    tab.parentNode.appendChild(clone)\n\n    // Get the sizes before we remove\n    const width = clone.scrollWidth\n    const height = clone.scrollHeight\n\n    // Remove from the DOM\n    element.remove(clone)\n\n    return {\n        width,\n        height,\n    }\n}\n\nexport default  {\n    showMenuPanel\n}\n","import controls from '../utilities/controls'\n\nexport default class Amplify {\n    /**\n     * The Plyr instance.\n     *\n     * @param {Plyr} player - player\n     */\n    #player\n\n    /**\n     * The Storage instance.\n     *\n     * @param {Storage} storage - storage\n     */\n    #storage\n\n    /**\n     * The audio context responsible for audio amplification.\n     *\n     * @param {{getAmpLevel: (function(): number), context: *, source: MediaElementAudioSourceNode, media, amplify: (function(multiplier: number)), gain: GainNode}} audioContext - audio context\n     */\n    #audioContext\n\n    /**\n     * The minimum amplification value.\n     *\n     * @type {number}\n     */\n    #minimumAmplification = -2\n\n    /**\n     * The maximum amplification value.\n     *\n     * @type {number}\n     */\n    #maximumAmplification = 3.0\n\n    /**\n     * Create a new instance of Kurozora Player.\n     *\n     * @constructor\n     *\n     * @param {Plyr} player - player\n     * @param {Storage} storage - storage\n     */\n    constructor(player, storage) {\n        this.#player = player\n        this.#storage = storage\n\n        const { config } = this.#player\n\n        if (config.amplify === undefined) {\n            // Amplify default and options to display\n            this.#player.config.amplify = {\n                selected: 1.0,\n                options: [0, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.5, 3.0, 4.0],\n            }\n        } else {\n            this.#player.config.amplify.options = config.amplify.options.filter((option) => option >= this.#minimumAmplification && option <= this.#maximumAmplification)\n        }\n\n        this.#configureAudioContext()\n        this.#setupAmplify()\n    }\n\n    /**\n     * Configure the amplify list in the player.\n     */\n    #setupAmplify() {\n        const { config } = this.#player\n        let settingID = document.querySelector('.plyr__menu__container').getAttribute('id').replace('plyr-settings-', '')\n        let amplifyMenu = 'plyr-settings-' + settingID + '-amplify'\n        let amplifyButtons = ''\n        let amplifyDefault = ''\n        let amplifySelected = this.#storage.get('amplification') || config.amplify.selected\n        let amplifyChecked = 'false'\n        let homeMenu = 'plyr-settings-' + settingID + '-home'\n        let homeSetting = document.querySelector('#' + homeMenu)\n\n        // Create button for each amplify track.\n        config.amplify.options.forEach(function (value, index) {\n            let buttonTitle = value === 1 ? config.i18n.normal : value + '×'\n\n            if (value === amplifySelected || (value.default && !config.amplify.options.find((value) => value === amplifySelected))) {\n                amplifyDefault = buttonTitle\n                amplifyChecked = 'true'\n                this.#audioContext.amplify(value)\n            } else {\n                amplifyChecked = 'false'\n            }\n\n            amplifyButtons += '<button data-plyr=\"amplify\" type=\"button\" role=\"menuitemradio\" class=\"plyr__control\" aria-checked=\"' + amplifyChecked + '\" value=\"' + index + '\"><span>' + buttonTitle + '</span></button>'\n        }.bind(this))\n\n        // Add amplify menu button\n        const menuButton = document.createElement('button')\n        menuButton.setAttribute('data-plyr', 'amplify-settings')\n        menuButton.setAttribute('type', 'button')\n        menuButton.setAttribute('class', 'plyr__control plyr__control--forward')\n        menuButton.setAttribute('aria-haspopup', 'true')\n        menuButton.innerHTML = '<span>' + config.i18n.amplify + '<span class=\"plyr__menu__value\">' + amplifyDefault + '</span></span>'\n        homeSetting.querySelector('div[role=menu]').prepend(menuButton)\n\n        // Add amplify menu options\n        homeSetting.insertAdjacentHTML('afterend', '<div id=\"' + amplifyMenu + '\" hidden><button type=\"button\" class=\"plyr__control plyr__control--back\"><span aria-hidden=\"true\">' + config.i18n.amplify + '</span><span class=\"plyr__sr-only\">' + config.i18n.menuBack + '</span></button><div role=\"menu\">' + amplifyButtons + '</div></div>')\n\n        // Make amplify menu button clickable\n        document.querySelector('button[data-plyr=\"amplify-settings\"]').addEventListener('click', function () {\n            controls.showMenuPanel('#' + amplifyMenu, true)\n        })\n\n        // Make amplify menu back button clickable\n        document.querySelector('#' + amplifyMenu + ' .plyr__control--back').addEventListener('click', function () {\n            controls.showMenuPanel('#' + homeMenu, true)\n        })\n\n        // Make amplify menu options clickable\n        document.querySelectorAll('button[data-plyr=\"amplify\"]')\n            .forEach(function (amplifyButton) {\n                amplifyButton.addEventListener('click', function () {\n                    let amplifyValue = config.amplify.options[amplifyButton.value]\n                    // Apply settings\n                    this.#audioContext.amplify(amplifyValue)\n\n                    // Save amplify settings\n                    config.amplify.selected = amplifyValue\n                    this.#storage.set({\n                        'amplification': amplifyValue\n                    })\n\n                    // Update amplify option selection\n                    document.querySelectorAll('button[data-plyr=\"amplify\"]').forEach(function (button) {\n                        button.setAttribute('aria-checked', 'false')\n                    })\n                    amplifyButton.setAttribute('aria-checked', 'true')\n\n                    // Update main menu amplify label\n                    let amplifySettings = document.querySelector('button[data-plyr=\"amplify-settings\"]').querySelector('.plyr__menu__value')\n                    amplifySettings.textContent = config.amplify.selected === 1 ? config.i18n.normal : amplifyButton.textContent.trim()\n\n                    // Send back to main menu\n                    controls.showMenuPanel('#' + homeMenu, true)\n                }.bind(this))\n            }.bind(this))\n    }\n\n    /**\n     * Configure the audio context responsible for amplifying the audio.\n     */\n    #configureAudioContext() {\n        let context = new (window.AudioContext || window.webkitAudioContext)\n        let audioContext = {\n            context: context,\n            source: context.createMediaElementSource(this.#player.media),\n            gain: context.createGain(),\n            media: this.#player.media,\n            amplify: function(multiplier) {\n                audioContext.gain.gain.value = multiplier\n            },\n            getAmpLevel: function() {\n                return audioContext.gain.gain.value\n            }\n        }\n        audioContext.source.connect(audioContext.gain)\n        audioContext.gain.connect(context.destination)\n\n        this.#audioContext = audioContext\n    }\n}\n","import controls from '../utilities/controls'\n\nexport default class Audio {\n    /**\n     * The Plyr instance.\n     *\n     * @param {Plyr} player - player\n     */\n    #player\n\n    /**\n     * The Hls instance.\n     *\n     * @param {Hls} hls - hls\n     */\n    #hls\n\n    /**\n     * The Storage instance.\n     *\n     * @param {Storage} storage - storage\n     */\n    #storage\n\n    /**\n     * Create a new instance of Kurozora Player.\n     *\n     * @constructor\n     *\n     * @param {Plyr} player - player\n     * @param {Hls} hls - hls\n     * @param {Storage} storage - storage\n     */\n    constructor(player, hls, storage) {\n        this.#player = player\n        this.#hls = hls\n        this.#storage = storage\n\n        this.#setupAudio()\n    }\n\n    /**\n     * Configure the audio list in the player.\n     */\n    #setupAudio() {\n        const { config } = this.#player\n        let audioTracks = this.#hls.audioTrackController.audioTracks.filter((value, index, self) =>\n                index === self.findIndex((t) => (\n                    t.name === value.name\n                ))\n        )\n        let settingID = document.querySelector('.plyr__menu__container').getAttribute('id').replace('plyr-settings-', '')\n        let audioMenu = 'plyr-settings-' + settingID + '-audio'\n        let audioButtons = ''\n        let audioDefault = ''\n        let audioSelected = this.#storage.get('audio_language')\n        let audioChecked = 'false'\n        let homeMenu = 'plyr-settings-' + settingID + '-home'\n        let homeSetting = document.querySelector('#' + homeMenu)\n\n        if (audioTracks.length > 1) {\n            // Create button for each audio track.\n            audioTracks.forEach(function (value, index) {\n                if (value.lang === audioSelected || (value.default && !this.#hls.audioTrackController.audioTracks.find((track) => track.lang === audioSelected))) {\n                    audioDefault = value.name\n                    audioChecked = 'true'\n                    this.#hls.audioTrack = value.id\n                } else {\n                    audioChecked = 'false'\n                }\n\n                audioButtons += '<button data-plyr=\"audio\" type=\"button\" role=\"menuitemradio\" class=\"plyr__control\" aria-checked=\"' + audioChecked + '\" value=\"' + value.id + '\" lang=\"' + value.lang + '\"><span>' + value.name + '<span class=\"plyr__menu__value\"><span class=\"plyr__badge\">' + (typeof value.lang !== 'undefined' ? value.lang.toUpperCase() : '') + '</span></span></span></button>'\n            }.bind(this))\n\n            // Add audio menu button\n            const menuButton = document.createElement('button')\n            menuButton.setAttribute('data-plyr', 'audio-settings')\n            menuButton.setAttribute('type', 'button')\n            menuButton.setAttribute('class', 'plyr__control plyr__control--forward')\n            menuButton.setAttribute('aria-haspopup', 'true')\n            menuButton.innerHTML = '<span>' + config.i18n.audio + '<span class=\"plyr__menu__value\">' + audioDefault + '</span></span>'\n            homeSetting.querySelector('div[role=menu]').prepend(menuButton)\n\n            // Add audio menu options\n            homeSetting.insertAdjacentHTML('afterend', '<div id=\"' + audioMenu + '\" hidden><button type=\"button\" class=\"plyr__control plyr__control--back\"><span aria-hidden=\"true\">' + config.i18n.audio + '</span><span class=\"plyr__sr-only\">' + config.i18n.menuBack + '</span></button><div role=\"menu\">' + audioButtons + '</div></div>')\n\n            // Make audio menu button clickable\n            document.querySelector('button[data-plyr=\"audio-settings\"]').addEventListener('click', function () {\n                controls.showMenuPanel('#' + audioMenu, true)\n            })\n\n            // Make audio menu back button clickable\n            document.querySelector('#' + audioMenu + ' .plyr__control--back').addEventListener('click', function () {\n                controls.showMenuPanel('#' + homeMenu, true)\n            })\n\n            // Make audio menu options clickable\n            document.querySelectorAll('button[data-plyr=\"audio\"]')\n                .forEach(function (audioButton) {\n                    audioButton.addEventListener('click', function () {\n                        // Set Hls audio track\n                        this.#hls.audioTrack = audioButton.value\n                        this.#storage.set({\n                            'audio_language': audioButton.getAttribute('lang')\n                        })\n\n                        // Update audio option selection\n                        document.querySelectorAll('button[data-plyr=\"audio\"]').forEach(function (button) {\n                            button.setAttribute('aria-checked', 'false')\n                        })\n                        audioButton.setAttribute('aria-checked', 'true')\n\n                        // Update main menu audio label\n                        let audioSettings = document.querySelector('button[data-plyr=\"audio-settings\"]').querySelector('.plyr__menu__value')\n                        audioSettings.textContent = audioButton.textContent.replace(audioButton.querySelector('.plyr__badge').textContent, '').trim()\n\n                        // Send back to main menu\n                        controls.showMenuPanel('#' + homeMenu, true)\n                    }.bind(this))\n                }.bind(this))\n        }\n    }\n}\n","/**\n * Plyr is a simple, lightweight, accessible and customizable HTML5, YouTube\n * and Vimeo media player that supports modern browsers.\n */\nimport Plyr from 'plyr'\nimport Screenshot from './plyr/screenshot'\nimport Storage from './plyr/storage'\nimport Amplify from './plyr/amplify'\nimport Audio from './plyr/audio'\nimport is from './utilities/is'\nimport element from './utilities/element'\n/**\n * HLS.js is a JavaScript library that implements an HTTP Live Streaming client.\n * It relies on HTML5 video and MediaSource Extensions for playback.\n */\nimport Hls from 'hls.js'\n\nexport default class PlyrManager {\n    // MARK: - Properties\n    /**\n     * The video element.\n     *\n     * @param {Element|HTMLElement} videoElement - videoElement\n     */\n    #videoElement\n\n    /**\n     * The Plyr instance.\n     *\n     * @param {Plyr} player - player\n     */\n    #player\n\n    /**\n     * The player's storage.\n     *\n     * @param {Storage} storage - storage\n     */\n    #storage\n\n    /**\n     * A configured instance of Hls.\n     *\n     * @param {Hls} hls - hls\n     */\n    #hls\n\n    /**\n     * The url of the video.\n     *\n     * @param {string} url - url\n     */\n    #url\n\n    /**\n     * Whether the video was checked for errors.\n     *\n     * @param {boolean} videoCheckedForError - video checked for error\n     */\n    #videoCheckedForError = false\n\n    /**\n     * Whether the video has expired.\n     *\n     * @param {boolean} videoHasExpired - video has expired\n     */\n    #videoHasExpired = false\n\n    /**\n     * The number of times the request was retried.\n     *\n     * @param {number} retryCount - retry count\n     */\n    #retryCount = 0\n\n    /**\n     * Plyr options.\n     *\n     * @param {Plyr.Options} playerOptions - default options\n     */\n    playerOptions = {\n        controls: [\n            'play-large', // The large play button in the center\n            'restart', // Restart playback\n            'rewind', // Rewind by the seek time (default 10 seconds)\n            'play', // Play/pause playback\n            'fast-forward', // Fast-forward by the seek time (default 10 seconds)\n            'progress', // The progress bar and scrubber for playback and buffering\n            'current-time', // The current time of playback\n            'duration', // The full duration of the media\n            'mute', // Toggle mute\n            'volume', // Volume control\n            'download', // Show a download button with a link to either the current source or a custom URL you specify in your options\n            'screenshot', // Show a screenshot button that downloads the current frame as image\n            'captions', // Toggle captions\n            'settings', // Settings menu\n            'pip', // Picture-in-picture (currently Safari only)\n            'airplay', // Airplay (currently Safari only)\n            'fullscreen' // Toggle fullscreen\n        ],\n        blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n        caption: {\n            active: true,\n            language: 'en',\n            update: true\n        },\n        fullscreen: {\n            enabled: true,\n            fallback: true,\n            iosNative: true,\n        },\n        loadSprite: true,\n        iconUrl: 'https://cdn.plyr.io/3.7.2/plyr.svg',\n        i18n: {\n            enterFullscreen: 'Enter fullscreen (F)',\n            exitFullscreen: 'Exit fullscreen (F)',\n            enableCaptions: 'Enable captions (C)',\n            disableCaptions: 'Disable captions (C)',\n            mute: 'Mute (M)',\n            loop: 'Loop (L)',\n            play: 'Play (K)',\n            pause: 'Pause (K)',\n            qualityLabel: {\n                0: 'Auto',\n            },\n            restart: 'Restart (R)',\n            screenshot: 'Screenshot (S)',\n            unmute: 'Unmute (M)',\n            audio: 'Audio',\n            amplify: 'Amplify',\n        },\n        invertTime: true,\n        mediaMetadata: {\n            title: 'Anime on Kurozora',\n            artist: 'Kurozora',\n            album: 'Anime',\n            artwork: [\n                { src: 'https://dummyimage.com/96x96',   sizes: '96x96',   type: 'image/png' },\n                { src: 'https://dummyimage.com/128x128', sizes: '128x128', type: 'image/png' },\n                { src: 'https://dummyimage.com/192x192', sizes: '192x192', type: 'image/png' },\n                { src: 'https://dummyimage.com/256x256', sizes: '256x256', type: 'image/png' },\n                { src: 'https://dummyimage.com/384x384', sizes: '384x384', type: 'image/png' },\n                { src: 'https://dummyimage.com/512x512', sizes: '512x512', type: 'image/png' },\n            ]\n        },\n        toggleInvert: true,\n        keyboard: {\n            focused: true,\n            global: true\n        },\n        ratio: '16:9',\n        storage: {\n            enabled: true,\n            key: '_x_plyr'\n        },\n        thumbnail: {\n            enabled: true,\n            src: ''\n        },\n        tooltips: {\n            controls: true,\n            seek: true\n        },\n        youtube: {\n            noCookie: true,\n            autoplay: 1,\n            iv_load_policy: 3,\n            rel: 0,\n            showinfo: 0,\n            start: 0,\n            modestbranding: 1,\n            playsinline: 1,\n            origin: ''\n        },\n        currentTime: 0\n    }\n\n    // MARK: - Initializers\n    /**\n     * Create a new instance of Kurozora Player.\n     *\n     * @constructor\n     *\n     * @param {HTMLElement|string} targets - targets\n     * @param {Plyr.Options} options - options\n     */\n    constructor(targets, options) {\n        // Get video element.\n        let videoElement = typeof targets === 'string' ? document.querySelector(targets) : targets\n        this.#videoElement = videoElement\n\n        // Get url and cleanup.\n        this.#url = videoElement.getAttribute('player-src').repeat(1)\n        videoElement.removeAttribute('player-src')\n\n        // Merge options.\n        this.playerOptions = {\n            ...this.playerOptions,\n            ...options,\n        }\n\n        // For more options see: https://github.com/sampotts/plyr/#options\n        if (is.youTube(this.#url) || is.iframe(this.#videoElement)) {\n            this.#videoElement.querySelector('iframe').setAttribute('src', this.#url)\n\n            if (is.youTube(this.#url)) {\n                this.playerOptions.controls = this.playerOptions.controls.filter(control => {\n                    return control !== 'screenshot'\n                })\n            }\n\n            this.#player = new Plyr(videoElement, this.playerOptions)\n            this.#setupPlayer()\n        } else if (is.hls(this.#url)) {\n            if (this.#videoElement.canPlayType('application/vnd.apple.mpegurl')) {\n                this.#videoElement.src = this.#url\n\n                // Default options with no quality update in case Hls is not supported.\n                this.#player = new Plyr(videoElement, this.playerOptions)\n                this.#setupPlayer()\n                // this.#setupHTMLVideo()\n            } else if (Hls.isSupported) {\n                this.#hls = new Hls()\n                this.#hls.loadSource(this.#url)\n\n                // From the m3u8 playlist, hls parses the manifest and returns\n                // all available video qualities. This is important, in this approach,\n                // we will have one source on the Plyr player.\n                this.#hls.on(Hls.Events.MANIFEST_PARSED, this.#handleHlsManifestParsed.bind(this))\n\n                // Handle switching video quality.\n                this.#hls.on(Hls.Events.LEVEL_SWITCHED, this.#handleHlsLevelSwitched.bind(this))\n\n                // // Handle errors.\n                // this.#hls.on(Hls.Events.ERROR, this.#handleHlsError.bind(this))\n\n                // Save hls.\n                this.#hls.attachMedia(this.#videoElement)\n            }\n        } else if (is.mp4(this.#url)) {\n            this.#videoElement.setAttribute('src', this.#url)\n\n            // Default options with no quality update in case Hls is not supported.\n            this.#player = new Plyr(videoElement, this.playerOptions)\n            this.#setupPlayer()\n        } else {\n            // Default options with no quality update in case Hls is not supported.\n            this.#player = new Plyr(videoElement, this.playerOptions)\n            this.#setupPlayer()\n        }\n    }\n\n    // MARK: - Functions\n    /**\n     * Set up the player with the preconfigured options.\n     */\n    #setupPlayer() {\n        this.#player.on('ready', (event) => {\n            this.#storage = new Storage(this.#player)\n\n            // Add audio settings\n            if (is.hls(this.#url)) {\n                this.#player.audio = new Audio(this.#player, this.#hls, this.#storage)\n            }\n\n            // Add amplification settings\n            this.#player.amplify = new Amplify(this.#player, this.#storage)\n\n            // Add screenshot capability\n            this.#player.screenshot = new Screenshot(this.#player)\n\n            window.addEventListener('keydown', (event) => {\n                const {\n                    key,\n                    type,\n                    altKey,\n                    ctrlKey,\n                    metaKey,\n                    shiftKey\n                } = event\n                const pressed = type === 'keydown'\n\n                if (altKey || ctrlKey || metaKey || shiftKey) {\n                    return\n                }\n\n                if (!key) {\n                    return\n                }\n\n                if (pressed) {\n                    // Check focused element\n                    // and if the focused element is not editable (e.g. text input)\n                    // and any that accept key input http://webaim.org/techniques/keyboard/\n                    const focused = document.activeElement\n\n                    if (is.element(focused)) {\n                        const { editable } = this.#player.config.selectors\n\n                        if (element.matches(focused, editable)) {\n                            return\n                        }\n\n                        if (event.key === 'Space' && element.matches(focused, 'button, [role^=\"menuitem\"]')) {\n                            return\n                        }\n                    }\n                }\n\n                if (event.key.toLowerCase() === 'r') {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    this.#player.restart()\n                }\n            })\n        })\n\n        // Handle can play event\n        this.#player.once('canplay', (event) => {\n            // Set current time\n            let progress = this.playerOptions.currentTime === 0\n                ? (localStorage.getItem('_x_progress' + window.location.pathname.replaceAll('/', '_')) ?? 0)\n                : this.playerOptions.currentTime\n            this.#player.currentTime = parseFloat(progress)\n        })\n\n        // Handle changing captions\n        this.#player.on('languagechange', () => {\n            if (is.hls(this.#url)) {\n                setTimeout(() => this.#hls.subtitleTrack = this.#player.currentTrack, 50)\n            }\n        })\n\n        // Keep track of time updates\n        this.#player.on('timeupdate', (currentTime) => {\n            localStorage.setItem('_x_progress' + window.location.pathname.replaceAll('/', '_'), this.#player.currentTime)\n        })\n    }\n\n    /**\n     * Check video url for errors.\n     *\n     * @param {string} videoUrl - video url\n     */\n    #checkVideo(videoUrl) {\n        if (!this.#videoCheckedForError && void this.#player && navigator.onLine) {\n            this.#videoCheckedForError = true\n\n            let xmlHttpRequest = new XMLHttpRequest()\n            xmlHttpRequest.open('GET', videoUrl)\n            xmlHttpRequest.timeout = 15e3\n            xmlHttpRequest.onloadend = function () {\n                this.#videoHasExpired = xmlHttpRequest.status !== 200\n            }.bind(this)\n            xmlHttpRequest.send()\n        }\n    }\n\n    /**\n     * Select new video quality.\n     *\n     * @param newQuality - new quality\n     */\n    #newQuality(newQuality) {\n        if (newQuality === 0) {\n            this.#hls.currentLevel = -1 // Enable AUTO quality if option.value = 0\n        } else {\n            this.#hls.levels.forEach((level, levelIndex) => {\n                if (level.height === newQuality) {\n                    this.#hls.currentLevel = levelIndex\n                }\n            })\n        }\n    }\n\n    /**\n     * Handle the Hls manifest parsed event.\n     *\n     * @param {MANIFEST_PARSED} manifestParsed - manifest parsed\n     * @param {ManifestParsedData} manifestParsedData - manifest parsed data\n     */\n    #handleHlsManifestParsed(manifestParsed, manifestParsedData) {\n        // Transform available levels into an array of integers (height values).\n        let availableQualities = this.#hls.levels.map((level) => level.height)\n        availableQualities.push(0) // Append 0 (Auto) to quality array\n        availableQualities = availableQualities.reverse()\n\n        // Add new qualities to option\n        this.playerOptions.quality = {\n            default: availableQualities[0],\n            options: availableQualities,\n            forced: true, // This ensures Plyr to use Hls to update quality level\n            onChange: (newQuality) => this.#newQuality(newQuality),\n        }\n\n        // Initialize here\n        this.#player = new Plyr(this.#videoElement, this.playerOptions)\n        this.#setupPlayer()\n    }\n\n    /**\n     * Handles the level switching in Hls.\n     *\n     * @param {LEVEL_SWITCHED} levelSwitched - level switched\n     * @param {LevelSwitchedData} levelSwitchedData - level switched data\n     */\n    #handleHlsLevelSwitched(levelSwitched, levelSwitchedData) {\n        let autoQualityOption = document.querySelector('.plyr__menu__container [data-plyr=\\'quality\\'][value=\\'0\\'] span')\n\n        if (this.#hls.autoLevelEnabled) {\n            autoQualityOption.innerHTML = `AUTO (${this.#hls.levels[levelSwitchedData.level].height}p)`\n        } else {\n            autoQualityOption.innerHTML = `AUTO`\n        }\n    }\n\n    /**\n     * Handles errors in Hls.\n     *\n     * @param {ERROR} error - error\n     * @param {ErrorData} errorData - error data\n     */\n    #handleHlsError(error, errorData) {\n        if (errorData.fatal) {\n            switch (errorData.type) {\n                case Hls.ErrorTypes.NETWORK_ERROR:\n                    console.log('Network error on Hls load, retrying...')\n\n                    if (++this.#retryCount < 11) {\n                        setTimeout(function () {\n                            this.#checkVideo(this.#url)\n                        }.bind(this), 500)\n\n                        let currentLevel = this.#hls.currentLevel\n                        this.#hls.loadLevel = -1\n                        this.#hls.startLoad()\n\n                        setTimeout(() => {\n                            this.#hls.loadLevel = currentLevel\n                        }, 1e3)\n                    }\n                    break\n                case Hls.ErrorTypes.MEDIA_ERROR:\n                    console.log('Media error, recovering...')\n                    this.#hls.recoverMediaError()\n                    this.#player.play()\n                    break\n            }\n        } else if (errorData.details === Hls.ErrorDetails.FRAG_LOAD_ERROR) {\n            if (typeof errorData.frag.relurl == 'string' && !this.#hls.autoLevelEnabled) {\n                let currentLevel = this.#hls.currentLevel\n                this.#hls.stopLoad()\n                this.#hls.loadLevel = -1\n                this.#hls.startLoad()\n\n                setTimeout(() => {\n                    this.#hls.loadLevel = currentLevel\n                }, 1e3)\n            }\n        }\n    }\n}\n","import PlyrManager from './helpers/plyr'\n\nwindow.PlyrManager = PlyrManager\n"],"names":["Is","_createClass","_classCallCheck","_Is","_youtubeUrls","_","_defineProperty","e","constructor","t","getConstructor","Object","Number","isNaN","String","Boolean","Function","Array","isArray","instanceOf","NodeList","Element","Event","isNullOrUndefined","isString","isNodeList","length","isObject","keys","includes","some","youtubeUrl","querySelector","nullOrUndefined","object","number","isNumber","string","boolean","isBoolean","function","isFunction","array","nodeList","element","isElement","event","isEvent","empty","isEmpty","mp4","isMp4","hls","isHls","youTube","isYouTube","iframe","isIframe","_player","WeakMap","_Screenshot_brand","WeakSet","Screenshot","player","_this","_classPrivateFieldInitSpec","this","config","_classPrivateFieldGet","is","controls","screenshotLabel","i18n","screenshot","menu","document","buttonHTML","concat","insertAdjacentHTML","addEventListener","_assertClassBrand","_screenshot","call","window","key","type","altKey","ctrlKey","metaKey","shiftKey","focused","activeElement","matches","selector","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","from","querySelectorAll","selectors","editable","toLowerCase","preventDefault","stopPropagation","_save","url","filename","saveLink","createElement","href","download","createEvent","initMouseEvent","dispatchEvent","_classPrivateFieldGet3","label","mediaMetadata","title","width","media","videoWidth","height","videoHeight","canvas","assign","getContext","drawImage","dataURL","toDataURL","extend","target","arguments","undefined","_len","sources","_key","source","shift","forEach","apply","Storage","enabled","storage","value","_get_supported","store","localStorage","getItem","json","JSON","parse","get","setItem","stringify","test","removeItem","setAttributes","attributes","entries","filter","_ref","_slicedToArray","_ref3","_ref4","setAttribute","create","text","innerText","remove","parentNode","removeChild","getAttributesFromSelector","existingAttributes","existing","split","s","trim","className","replace","parts","charAt","id","toggleHidden","hidden","hide","showMenuPanel","settingsMenu","container","current","children","find","node","style","scrollWidth","scrollHeight","size","tab","clone","cloneNode","position","opacity","removeAttribute","appendChild","getMenuSize","transitionEndEvent","restore","propertyName","removeEventListener","events","WebkitTransition","MozTransition","OTransition","transition","_storage","_audioContext","_minimumAmplification","_maximumAmplification","_Amplify_brand","Amplify","_classPrivateFieldSet","amplify","selected","options","option","_configureAudioContext","_setupAmplify","settingID","getAttribute","amplifyMenu","amplifyButtons","amplifyDefault","amplifySelected","amplifyChecked","homeMenu","homeSetting","index","buttonTitle","normal","bind","menuButton","innerHTML","prepend","menuBack","amplifyButton","amplifyValue","set","button","textContent","context","AudioContext","webkitAudioContext","audioContext","createMediaElementSource","gain","createGain","multiplier","getAmpLevel","connect","destination","_hls","_Audio_brand","Audio","_setupAudio","audioTracks","audioTrackController","self","findIndex","name","audioMenu","audioButtons","audioDefault","audioSelected","audioChecked","lang","track","audioTrack","toUpperCase","audio","audioButton","_videoElement","_url","_videoCheckedForError","_videoHasExpired","_retryCount","_PlyrManager_brand","PlyrManager","targets","blankVideo","caption","active","language","update","fullscreen","fallback","iosNative","loadSprite","iconUrl","enterFullscreen","exitFullscreen","enableCaptions","disableCaptions","mute","loop","play","pause","qualityLabel","restart","unmute","invertTime","artist","album","artwork","src","sizes","toggleInvert","keyboard","global","ratio","thumbnail","tooltips","seek","youtube","noCookie","autoplay","iv_load_policy","rel","showinfo","start","modestbranding","playsinline","origin","currentTime","videoElement","repeat","playerOptions","_objectSpread","control","Plyr","_setupPlayer","canPlayType","Hls","loadSource","on","MANIFEST_PARSED","_handleHlsManifestParsed","LEVEL_SWITCHED","_handleHlsLevelSwitched","attachMedia","once","_localStorage$getItem","progress","location","pathname","replaceAll","parseFloat","setTimeout","subtitleTrack","currentTrack","_newQuality","newQuality","_this2","currentLevel","levels","level","levelIndex","manifestParsed","manifestParsedData","_this3","availableQualities","map","push","reverse","quality","default","forced","onChange","levelSwitched","levelSwitchedData","autoQualityOption","autoLevelEnabled"],"sourceRoot":""}