/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/chat.js":
/*!******************************!*\
  !*** ./resources/js/chat.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _picmo_popup_picker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @picmo/popup-picker */ \"./node_modules/@picmo/popup-picker/dist/index.js\");\n/**\n * PicMo is a plain JavaScript emoji picker widget. It can be used in two ways:\n *\n * - As a standalone emoji picker inline in the page. The picker is rendered immediately on the page.\n * - As a popup emoji picker. The popup is triggered by a button or other interactive element.\n *\n * PicMo's emoji data comes from the Emojibase project. The data is cached locally in an IndexedDB database.\n */\n\nvar emojiButton = document.querySelector('.emoji-button');\nwindow.picmo = (0,_picmo_popup_picker__WEBPACK_IMPORTED_MODULE_0__.createPopup)({}, {\n  // The element that triggers the popup\n  triggerElement: emojiButton,\n  // The element to position the picker relative to - often this is also the trigger element,\n  referenceElement: emojiButton,\n  // specify how to position the popup\n  position: 'bottom-start'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY2hhdC5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQUlDLFdBQVcsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLGVBQXZCLENBQWxCO0FBQ0FDLE1BQU0sQ0FBQ0MsS0FBUCxHQUFlTCxnRUFBVyxDQUFDLEVBQUQsRUFBSztFQUMzQjtFQUNBTSxjQUFjLEVBQUVMLFdBRlc7RUFJM0I7RUFDQU0sZ0JBQWdCLEVBQUVOLFdBTFM7RUFPM0I7RUFDQU8sUUFBUSxFQUFFO0FBUmlCLENBQUwsQ0FBMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY2hhdC5qcz81MzAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGljTW8gaXMgYSBwbGFpbiBKYXZhU2NyaXB0IGVtb2ppIHBpY2tlciB3aWRnZXQuIEl0IGNhbiBiZSB1c2VkIGluIHR3byB3YXlzOlxuICpcbiAqIC0gQXMgYSBzdGFuZGFsb25lIGVtb2ppIHBpY2tlciBpbmxpbmUgaW4gdGhlIHBhZ2UuIFRoZSBwaWNrZXIgaXMgcmVuZGVyZWQgaW1tZWRpYXRlbHkgb24gdGhlIHBhZ2UuXG4gKiAtIEFzIGEgcG9wdXAgZW1vamkgcGlja2VyLiBUaGUgcG9wdXAgaXMgdHJpZ2dlcmVkIGJ5IGEgYnV0dG9uIG9yIG90aGVyIGludGVyYWN0aXZlIGVsZW1lbnQuXG4gKlxuICogUGljTW8ncyBlbW9qaSBkYXRhIGNvbWVzIGZyb20gdGhlIEVtb2ppYmFzZSBwcm9qZWN0LiBUaGUgZGF0YSBpcyBjYWNoZWQgbG9jYWxseSBpbiBhbiBJbmRleGVkREIgZGF0YWJhc2UuXG4gKi9cbmltcG9ydCB7Y3JlYXRlUG9wdXB9IGZyb20gXCJAcGljbW8vcG9wdXAtcGlja2VyXCJcblxubGV0IGVtb2ppQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVtb2ppLWJ1dHRvbicpXG53aW5kb3cucGljbW8gPSBjcmVhdGVQb3B1cCh7fSwge1xuICAgIC8vIFRoZSBlbGVtZW50IHRoYXQgdHJpZ2dlcnMgdGhlIHBvcHVwXG4gICAgdHJpZ2dlckVsZW1lbnQ6IGVtb2ppQnV0dG9uLFxuXG4gICAgLy8gVGhlIGVsZW1lbnQgdG8gcG9zaXRpb24gdGhlIHBpY2tlciByZWxhdGl2ZSB0byAtIG9mdGVuIHRoaXMgaXMgYWxzbyB0aGUgdHJpZ2dlciBlbGVtZW50LFxuICAgIHJlZmVyZW5jZUVsZW1lbnQ6IGVtb2ppQnV0dG9uLFxuXG4gICAgLy8gc3BlY2lmeSBob3cgdG8gcG9zaXRpb24gdGhlIHBvcHVwXG4gICAgcG9zaXRpb246ICdib3R0b20tc3RhcnQnXG59KVxuIl0sIm5hbWVzIjpbImNyZWF0ZVBvcHVwIiwiZW1vamlCdXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJwaWNtbyIsInRyaWdnZXJFbGVtZW50IiwicmVmZXJlbmNlRWxlbWVudCIsInBvc2l0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/chat.js\n");

/***/ }),

/***/ "./node_modules/@picmo/popup-picker/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@picmo/popup-picker/dist/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PopupPickerController\": () => (/* binding */ ce),\n/* harmony export */   \"createPopup\": () => (/* binding */ ue)\n/* harmony export */ });\n/* harmony import */ var picmo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! picmo */ \"./node_modules/picmo/dist/index.js\");\n\nfunction V(t) {\n  return t.split(\"-\")[0];\n}\nfunction N(t) {\n  return t.split(\"-\")[1];\n}\nfunction K(t) {\n  return [\"top\", \"bottom\"].includes(V(t)) ? \"x\" : \"y\";\n}\nfunction at(t) {\n  return t === \"y\" ? \"height\" : \"width\";\n}\nfunction tt(t, e, n) {\n  let {\n    reference: o,\n    floating: i\n  } = t;\n  const r = o.x + o.width / 2 - i.width / 2, c = o.y + o.height / 2 - i.height / 2, s = K(e), l = at(s), a = o[l] / 2 - i[l] / 2, p = V(e), f = s === \"x\";\n  let u;\n  switch (p) {\n    case \"top\":\n      u = {\n        x: r,\n        y: o.y - i.height\n      };\n      break;\n    case \"bottom\":\n      u = {\n        x: r,\n        y: o.y + o.height\n      };\n      break;\n    case \"right\":\n      u = {\n        x: o.x + o.width,\n        y: c\n      };\n      break;\n    case \"left\":\n      u = {\n        x: o.x - i.width,\n        y: c\n      };\n      break;\n    default:\n      u = {\n        x: o.x,\n        y: o.y\n      };\n  }\n  switch (N(e)) {\n    case \"start\":\n      u[s] -= a * (n && f ? -1 : 1);\n      break;\n    case \"end\":\n      u[s] += a * (n && f ? -1 : 1);\n      break;\n  }\n  return u;\n}\nconst At = async (t, e, n) => {\n  const {\n    placement: o = \"bottom\",\n    strategy: i = \"absolute\",\n    middleware: r = [],\n    platform: c\n  } = n, s = await (c.isRTL == null ? void 0 : c.isRTL(e));\n  let l = await c.getElementRects({\n    reference: t,\n    floating: e,\n    strategy: i\n  }), {\n    x: a,\n    y: p\n  } = tt(l, o, s), f = o, u = {}, h = 0;\n  for (let m = 0; m < r.length; m++) {\n    const {\n      name: d,\n      fn: w\n    } = r[m], {\n      x: y,\n      y: g,\n      data: v,\n      reset: x\n    } = await w({\n      x: a,\n      y: p,\n      initialPlacement: o,\n      placement: f,\n      strategy: i,\n      middlewareData: u,\n      rects: l,\n      platform: c,\n      elements: {\n        reference: t,\n        floating: e\n      }\n    });\n    if (a = y != null ? y : a, p = g != null ? g : p, u = {\n      ...u,\n      [d]: {\n        ...u[d],\n        ...v\n      }\n    }, x && h <= 50) {\n      h++, typeof x == \"object\" && (x.placement && (f = x.placement), x.rects && (l = x.rects === !0 ? await c.getElementRects({\n        reference: t,\n        floating: e,\n        strategy: i\n      }) : x.rects), {\n        x: a,\n        y: p\n      } = tt(l, f, s)), m = -1;\n      continue;\n    }\n  }\n  return {\n    x: a,\n    y: p,\n    placement: f,\n    strategy: i,\n    middlewareData: u\n  };\n};\nfunction Pt(t) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...t\n  };\n}\nfunction Ot(t) {\n  return typeof t != \"number\" ? Pt(t) : {\n    top: t,\n    right: t,\n    bottom: t,\n    left: t\n  };\n}\nfunction I(t) {\n  return {\n    ...t,\n    top: t.y,\n    left: t.x,\n    right: t.x + t.width,\n    bottom: t.y + t.height\n  };\n}\nasync function Q(t, e) {\n  var n;\n  e === void 0 && (e = {});\n  const {\n    x: o,\n    y: i,\n    platform: r,\n    rects: c,\n    elements: s,\n    strategy: l\n  } = t, {\n    boundary: a = \"clippingAncestors\",\n    rootBoundary: p = \"viewport\",\n    elementContext: f = \"floating\",\n    altBoundary: u = !1,\n    padding: h = 0\n  } = e, m = Ot(h), w = s[u ? f === \"floating\" ? \"reference\" : \"floating\" : f], y = I(await r.getClippingRect({\n    element: (n = await (r.isElement == null ? void 0 : r.isElement(w))) == null || n ? w : w.contextElement || await (r.getDocumentElement == null ? void 0 : r.getDocumentElement(s.floating)),\n    boundary: a,\n    rootBoundary: p,\n    strategy: l\n  })), g = I(r.convertOffsetParentRelativeRectToViewportRelativeRect ? await r.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: f === \"floating\" ? {\n      ...c.floating,\n      x: o,\n      y: i\n    } : c.reference,\n    offsetParent: await (r.getOffsetParent == null ? void 0 : r.getOffsetParent(s.floating)),\n    strategy: l\n  }) : c[f]);\n  return {\n    top: y.top - g.top + m.top,\n    bottom: g.bottom - y.bottom + m.bottom,\n    left: y.left - g.left + m.left,\n    right: g.right - y.right + m.right\n  };\n}\nconst Lt = Math.min, Rt = Math.max;\nfunction et(t, e, n) {\n  return Rt(t, Lt(e, n));\n}\nconst kt = {\n  left: \"right\",\n  right: \"left\",\n  bottom: \"top\",\n  top: \"bottom\"\n};\nfunction z(t) {\n  return t.replace(/left|right|bottom|top/g, (e) => kt[e]);\n}\nfunction ft(t, e, n) {\n  n === void 0 && (n = !1);\n  const o = N(t), i = K(t), r = at(i);\n  let c = i === \"x\" ? o === (n ? \"end\" : \"start\") ? \"right\" : \"left\" : o === \"start\" ? \"bottom\" : \"top\";\n  return e.reference[r] > e.floating[r] && (c = z(c)), {\n    main: c,\n    cross: z(c)\n  };\n}\nconst Tt = {\n  start: \"end\",\n  end: \"start\"\n};\nfunction G(t) {\n  return t.replace(/start|end/g, (e) => Tt[e]);\n}\nconst Bt = [\"top\", \"right\", \"bottom\", \"left\"], St = /* @__PURE__ */ Bt.reduce((t, e) => t.concat(e, e + \"-start\", e + \"-end\"), []);\nfunction Dt(t, e, n) {\n  return (t ? [...n.filter((i) => N(i) === t), ...n.filter((i) => N(i) !== t)] : n.filter((i) => V(i) === i)).filter((i) => t ? N(i) === t || (e ? G(i) !== i : !1) : !0);\n}\nconst Vt = function(t) {\n  return t === void 0 && (t = {}), {\n    name: \"autoPlacement\",\n    options: t,\n    async fn(e) {\n      var n, o, i, r, c;\n      const {\n        x: s,\n        y: l,\n        rects: a,\n        middlewareData: p,\n        placement: f,\n        platform: u,\n        elements: h\n      } = e, {\n        alignment: m = null,\n        allowedPlacements: d = St,\n        autoAlignment: w = !0,\n        ...y\n      } = t, g = Dt(m, w, d), v = await Q(e, y), x = (n = (o = p.autoPlacement) == null ? void 0 : o.index) != null ? n : 0, b = g[x];\n      if (b == null)\n        return {};\n      const {\n        main: H,\n        cross: j\n      } = ft(b, a, await (u.isRTL == null ? void 0 : u.isRTL(h.floating)));\n      if (f !== b)\n        return {\n          x: s,\n          y: l,\n          reset: {\n            placement: g[0]\n          }\n        };\n      const _ = [v[V(b)], v[H], v[j]], E = [...(i = (r = p.autoPlacement) == null ? void 0 : r.overflows) != null ? i : [], {\n        placement: b,\n        overflows: _\n      }], B = g[x + 1];\n      if (B)\n        return {\n          data: {\n            index: x + 1,\n            overflows: E\n          },\n          reset: {\n            placement: B\n          }\n        };\n      const S = E.slice().sort((P, W) => P.overflows[0] - W.overflows[0]), $ = (c = S.find((P) => {\n        let {\n          overflows: W\n        } = P;\n        return W.every((yt) => yt <= 0);\n      })) == null ? void 0 : c.placement, D = $ != null ? $ : S[0].placement;\n      return D !== f ? {\n        data: {\n          index: x + 1,\n          overflows: E\n        },\n        reset: {\n          placement: D\n        }\n      } : {};\n    }\n  };\n};\nfunction Nt(t) {\n  const e = z(t);\n  return [G(t), e, G(e)];\n}\nconst Ft = function(t) {\n  return t === void 0 && (t = {}), {\n    name: \"flip\",\n    options: t,\n    async fn(e) {\n      var n;\n      const {\n        placement: o,\n        middlewareData: i,\n        rects: r,\n        initialPlacement: c,\n        platform: s,\n        elements: l\n      } = e, {\n        mainAxis: a = !0,\n        crossAxis: p = !0,\n        fallbackPlacements: f,\n        fallbackStrategy: u = \"bestFit\",\n        flipAlignment: h = !0,\n        ...m\n      } = t, d = V(o), y = f || (d === c || !h ? [z(c)] : Nt(c)), g = [c, ...y], v = await Q(e, m), x = [];\n      let b = ((n = i.flip) == null ? void 0 : n.overflows) || [];\n      if (a && x.push(v[d]), p) {\n        const {\n          main: E,\n          cross: B\n        } = ft(o, r, await (s.isRTL == null ? void 0 : s.isRTL(l.floating)));\n        x.push(v[E], v[B]);\n      }\n      if (b = [...b, {\n        placement: o,\n        overflows: x\n      }], !x.every((E) => E <= 0)) {\n        var H, j;\n        const E = ((H = (j = i.flip) == null ? void 0 : j.index) != null ? H : 0) + 1, B = g[E];\n        if (B)\n          return {\n            data: {\n              index: E,\n              overflows: b\n            },\n            reset: {\n              placement: B\n            }\n          };\n        let S = \"bottom\";\n        switch (u) {\n          case \"bestFit\": {\n            var _;\n            const $ = (_ = b.map((D) => [D, D.overflows.filter((P) => P > 0).reduce((P, W) => P + W, 0)]).sort((D, P) => D[1] - P[1])[0]) == null ? void 0 : _[0].placement;\n            $ && (S = $);\n            break;\n          }\n          case \"initialPlacement\":\n            S = c;\n            break;\n        }\n        if (o !== S)\n          return {\n            reset: {\n              placement: S\n            }\n          };\n      }\n      return {};\n    }\n  };\n};\nasync function $t(t, e) {\n  const {\n    placement: n,\n    platform: o,\n    elements: i\n  } = t, r = await (o.isRTL == null ? void 0 : o.isRTL(i.floating)), c = V(n), s = N(n), l = K(n) === \"x\", a = [\"left\", \"top\"].includes(c) ? -1 : 1, p = r && l ? -1 : 1, f = typeof e == \"function\" ? e(t) : e;\n  let {\n    mainAxis: u,\n    crossAxis: h,\n    alignmentAxis: m\n  } = typeof f == \"number\" ? {\n    mainAxis: f,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...f\n  };\n  return s && typeof m == \"number\" && (h = s === \"end\" ? m * -1 : m), l ? {\n    x: h * p,\n    y: u * a\n  } : {\n    x: u * a,\n    y: h * p\n  };\n}\nconst nt = function(t) {\n  return t === void 0 && (t = 0), {\n    name: \"offset\",\n    options: t,\n    async fn(e) {\n      const {\n        x: n,\n        y: o\n      } = e, i = await $t(e, t);\n      return {\n        x: n + i.x,\n        y: o + i.y,\n        data: i\n      };\n    }\n  };\n};\nfunction Wt(t) {\n  return t === \"x\" ? \"y\" : \"x\";\n}\nconst it = function(t) {\n  return t === void 0 && (t = {}), {\n    name: \"shift\",\n    options: t,\n    async fn(e) {\n      const {\n        x: n,\n        y: o,\n        placement: i\n      } = e, {\n        mainAxis: r = !0,\n        crossAxis: c = !1,\n        limiter: s = {\n          fn: (w) => {\n            let {\n              x: y,\n              y: g\n            } = w;\n            return {\n              x: y,\n              y: g\n            };\n          }\n        },\n        ...l\n      } = t, a = {\n        x: n,\n        y: o\n      }, p = await Q(e, l), f = K(V(i)), u = Wt(f);\n      let h = a[f], m = a[u];\n      if (r) {\n        const w = f === \"y\" ? \"top\" : \"left\", y = f === \"y\" ? \"bottom\" : \"right\", g = h + p[w], v = h - p[y];\n        h = et(g, h, v);\n      }\n      if (c) {\n        const w = u === \"y\" ? \"top\" : \"left\", y = u === \"y\" ? \"bottom\" : \"right\", g = m + p[w], v = m - p[y];\n        m = et(g, m, v);\n      }\n      const d = s.fn({\n        ...e,\n        [f]: h,\n        [u]: m\n      });\n      return {\n        ...d,\n        data: {\n          x: d.x - n,\n          y: d.y - o\n        }\n      };\n    }\n  };\n};\nfunction ut(t) {\n  return t && t.document && t.location && t.alert && t.setInterval;\n}\nfunction R(t) {\n  if (t == null)\n    return window;\n  if (!ut(t)) {\n    const e = t.ownerDocument;\n    return e && e.defaultView || window;\n  }\n  return t;\n}\nfunction C(t) {\n  return R(t).getComputedStyle(t);\n}\nfunction O(t) {\n  return ut(t) ? \"\" : t ? (t.nodeName || \"\").toLowerCase() : \"\";\n}\nfunction pt() {\n  const t = navigator.userAgentData;\n  return t != null && t.brands ? t.brands.map((e) => e.brand + \"/\" + e.version).join(\" \") : navigator.userAgent;\n}\nfunction A(t) {\n  return t instanceof R(t).HTMLElement;\n}\nfunction k(t) {\n  return t instanceof R(t).Element;\n}\nfunction Mt(t) {\n  return t instanceof R(t).Node;\n}\nfunction F(t) {\n  if (typeof ShadowRoot > \"u\")\n    return !1;\n  const e = R(t).ShadowRoot;\n  return t instanceof e || t instanceof ShadowRoot;\n}\nfunction U(t) {\n  const {\n    overflow: e,\n    overflowX: n,\n    overflowY: o\n  } = C(t);\n  return /auto|scroll|overlay|hidden/.test(e + o + n);\n}\nfunction Ht(t) {\n  return [\"table\", \"td\", \"th\"].includes(O(t));\n}\nfunction dt(t) {\n  const e = /firefox/i.test(pt()), n = C(t);\n  return n.transform !== \"none\" || n.perspective !== \"none\" || n.contain === \"paint\" || [\"transform\", \"perspective\"].includes(n.willChange) || e && n.willChange === \"filter\" || e && (n.filter ? n.filter !== \"none\" : !1);\n}\nfunction ht() {\n  return !/^((?!chrome|android).)*safari/i.test(pt());\n}\nconst ot = Math.min, M = Math.max, X = Math.round;\nfunction L(t, e, n) {\n  var o, i, r, c;\n  e === void 0 && (e = !1), n === void 0 && (n = !1);\n  const s = t.getBoundingClientRect();\n  let l = 1, a = 1;\n  e && A(t) && (l = t.offsetWidth > 0 && X(s.width) / t.offsetWidth || 1, a = t.offsetHeight > 0 && X(s.height) / t.offsetHeight || 1);\n  const p = k(t) ? R(t) : window, f = !ht() && n, u = (s.left + (f && (o = (i = p.visualViewport) == null ? void 0 : i.offsetLeft) != null ? o : 0)) / l, h = (s.top + (f && (r = (c = p.visualViewport) == null ? void 0 : c.offsetTop) != null ? r : 0)) / a, m = s.width / l, d = s.height / a;\n  return {\n    width: m,\n    height: d,\n    top: h,\n    right: u + m,\n    bottom: h + d,\n    left: u,\n    x: u,\n    y: h\n  };\n}\nfunction T(t) {\n  return ((Mt(t) ? t.ownerDocument : t.document) || window.document).documentElement;\n}\nfunction q(t) {\n  return k(t) ? {\n    scrollLeft: t.scrollLeft,\n    scrollTop: t.scrollTop\n  } : {\n    scrollLeft: t.pageXOffset,\n    scrollTop: t.pageYOffset\n  };\n}\nfunction mt(t) {\n  return L(T(t)).left + q(t).scrollLeft;\n}\nfunction jt(t) {\n  const e = L(t);\n  return X(e.width) !== t.offsetWidth || X(e.height) !== t.offsetHeight;\n}\nfunction _t(t, e, n) {\n  const o = A(e), i = T(e), r = L(\n    t,\n    o && jt(e),\n    n === \"fixed\"\n  );\n  let c = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const s = {\n    x: 0,\n    y: 0\n  };\n  if (o || !o && n !== \"fixed\")\n    if ((O(e) !== \"body\" || U(i)) && (c = q(e)), A(e)) {\n      const l = L(e, !0);\n      s.x = l.x + e.clientLeft, s.y = l.y + e.clientTop;\n    } else\n      i && (s.x = mt(i));\n  return {\n    x: r.left + c.scrollLeft - s.x,\n    y: r.top + c.scrollTop - s.y,\n    width: r.width,\n    height: r.height\n  };\n}\nfunction gt(t) {\n  return O(t) === \"html\" ? t : t.assignedSlot || t.parentNode || (F(t) ? t.host : null) || T(t);\n}\nfunction st(t) {\n  return !A(t) || C(t).position === \"fixed\" ? null : It(t);\n}\nfunction It(t) {\n  let {\n    offsetParent: e\n  } = t, n = t, o = !1;\n  for (; n && n !== e; ) {\n    const {\n      assignedSlot: i\n    } = n;\n    if (i) {\n      let r = i.offsetParent;\n      if (C(i).display === \"contents\") {\n        const c = i.hasAttribute(\"style\"), s = i.style.display;\n        i.style.display = C(n).display, r = i.offsetParent, i.style.display = s, c || i.removeAttribute(\"style\");\n      }\n      n = i, e !== r && (e = r, o = !0);\n    } else if (F(n) && n.host && o)\n      break;\n    n = F(n) && n.host || n.parentNode;\n  }\n  return e;\n}\nfunction zt(t) {\n  let e = gt(t);\n  for (F(e) && (e = e.host); A(e) && ![\"html\", \"body\"].includes(O(e)); ) {\n    if (dt(e))\n      return e;\n    {\n      const n = e.parentNode;\n      e = F(n) ? n.host : n;\n    }\n  }\n  return null;\n}\nfunction J(t) {\n  const e = R(t);\n  let n = st(t);\n  for (; n && Ht(n) && C(n).position === \"static\"; )\n    n = st(n);\n  return n && (O(n) === \"html\" || O(n) === \"body\" && C(n).position === \"static\" && !dt(n)) ? e : n || zt(t) || e;\n}\nfunction rt(t) {\n  if (A(t))\n    return {\n      width: t.offsetWidth,\n      height: t.offsetHeight\n    };\n  const e = L(t);\n  return {\n    width: e.width,\n    height: e.height\n  };\n}\nfunction Xt(t) {\n  let {\n    rect: e,\n    offsetParent: n,\n    strategy: o\n  } = t;\n  const i = A(n), r = T(n);\n  if (n === r)\n    return e;\n  let c = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const s = {\n    x: 0,\n    y: 0\n  };\n  if ((i || !i && o !== \"fixed\") && ((O(n) !== \"body\" || U(r)) && (c = q(n)), A(n))) {\n    const l = L(n, !0);\n    s.x = l.x + n.clientLeft, s.y = l.y + n.clientTop;\n  }\n  return {\n    ...e,\n    x: e.x - c.scrollLeft + s.x,\n    y: e.y - c.scrollTop + s.y\n  };\n}\nfunction Yt(t, e) {\n  const n = R(t), o = T(t), i = n.visualViewport;\n  let r = o.clientWidth, c = o.clientHeight, s = 0, l = 0;\n  if (i) {\n    r = i.width, c = i.height;\n    const a = ht();\n    (a || !a && e === \"fixed\") && (s = i.offsetLeft, l = i.offsetTop);\n  }\n  return {\n    width: r,\n    height: c,\n    x: s,\n    y: l\n  };\n}\nfunction Kt(t) {\n  var e;\n  const n = T(t), o = q(t), i = (e = t.ownerDocument) == null ? void 0 : e.body, r = M(n.scrollWidth, n.clientWidth, i ? i.scrollWidth : 0, i ? i.clientWidth : 0), c = M(n.scrollHeight, n.clientHeight, i ? i.scrollHeight : 0, i ? i.clientHeight : 0);\n  let s = -o.scrollLeft + mt(t);\n  const l = -o.scrollTop;\n  return C(i || n).direction === \"rtl\" && (s += M(n.clientWidth, i ? i.clientWidth : 0) - r), {\n    width: r,\n    height: c,\n    x: s,\n    y: l\n  };\n}\nfunction wt(t) {\n  const e = gt(t);\n  return [\"html\", \"body\", \"#document\"].includes(O(e)) ? t.ownerDocument.body : A(e) && U(e) ? e : wt(e);\n}\nfunction Y(t, e) {\n  var n;\n  e === void 0 && (e = []);\n  const o = wt(t), i = o === ((n = t.ownerDocument) == null ? void 0 : n.body), r = R(o), c = i ? [r].concat(r.visualViewport || [], U(o) ? o : []) : o, s = e.concat(c);\n  return i ? s : s.concat(Y(c));\n}\nfunction Ut(t, e) {\n  const n = e.getRootNode == null ? void 0 : e.getRootNode();\n  if (t.contains(e))\n    return !0;\n  if (n && F(n)) {\n    let o = e;\n    do {\n      if (o && t === o)\n        return !0;\n      o = o.parentNode || o.host;\n    } while (o);\n  }\n  return !1;\n}\nfunction qt(t, e) {\n  const n = L(t, !1, e === \"fixed\"), o = n.top + t.clientTop, i = n.left + t.clientLeft;\n  return {\n    top: o,\n    left: i,\n    x: i,\n    y: o,\n    right: i + t.clientWidth,\n    bottom: o + t.clientHeight,\n    width: t.clientWidth,\n    height: t.clientHeight\n  };\n}\nfunction ct(t, e, n) {\n  return e === \"viewport\" ? I(Yt(t, n)) : k(e) ? qt(e, n) : I(Kt(T(t)));\n}\nfunction Gt(t) {\n  const e = Y(t), o = [\"absolute\", \"fixed\"].includes(C(t).position) && A(t) ? J(t) : t;\n  return k(o) ? e.filter((i) => k(i) && Ut(i, o) && O(i) !== \"body\") : [];\n}\nfunction Jt(t) {\n  let {\n    element: e,\n    boundary: n,\n    rootBoundary: o,\n    strategy: i\n  } = t;\n  const c = [...n === \"clippingAncestors\" ? Gt(e) : [].concat(n), o], s = c[0], l = c.reduce((a, p) => {\n    const f = ct(e, p, i);\n    return a.top = M(f.top, a.top), a.right = ot(f.right, a.right), a.bottom = ot(f.bottom, a.bottom), a.left = M(f.left, a.left), a;\n  }, ct(e, s, i));\n  return {\n    width: l.right - l.left,\n    height: l.bottom - l.top,\n    x: l.left,\n    y: l.top\n  };\n}\nconst Qt = {\n  getClippingRect: Jt,\n  convertOffsetParentRelativeRectToViewportRelativeRect: Xt,\n  isElement: k,\n  getDimensions: rt,\n  getOffsetParent: J,\n  getDocumentElement: T,\n  getElementRects: (t) => {\n    let {\n      reference: e,\n      floating: n,\n      strategy: o\n    } = t;\n    return {\n      reference: _t(e, J(n), o),\n      floating: {\n        ...rt(n),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: (t) => Array.from(t.getClientRects()),\n  isRTL: (t) => C(t).direction === \"rtl\"\n};\nfunction Zt(t, e, n, o) {\n  o === void 0 && (o = {});\n  const {\n    ancestorScroll: i = !0,\n    ancestorResize: r = !0,\n    elementResize: c = !0,\n    animationFrame: s = !1\n  } = o, l = i && !s, a = r && !s, p = l || a ? [...k(t) ? Y(t) : [], ...Y(e)] : [];\n  p.forEach((d) => {\n    l && d.addEventListener(\"scroll\", n, {\n      passive: !0\n    }), a && d.addEventListener(\"resize\", n);\n  });\n  let f = null;\n  if (c) {\n    let d = !0;\n    f = new ResizeObserver(() => {\n      d || n(), d = !1;\n    }), k(t) && !s && f.observe(t), f.observe(e);\n  }\n  let u, h = s ? L(t) : null;\n  s && m();\n  function m() {\n    const d = L(t);\n    h && (d.x !== h.x || d.y !== h.y || d.width !== h.width || d.height !== h.height) && n(), h = d, u = requestAnimationFrame(m);\n  }\n  return n(), () => {\n    var d;\n    p.forEach((w) => {\n      l && w.removeEventListener(\"scroll\", n), a && w.removeEventListener(\"resize\", n);\n    }), (d = f) == null || d.disconnect(), f = null, s && cancelAnimationFrame(u);\n  };\n}\nconst te = (t, e, n) => At(t, e, {\n  platform: Qt,\n  ...n\n});\nasync function ee(t, e, n) {\n  if (!n)\n    throw new Error(\"Must provide a positioning option\");\n  return await (typeof n == \"string\" ? ne(t, e, n) : ie(t, n));\n}\nasync function ne(t, e, n) {\n  if (!e)\n    throw new Error(\"Reference element is required for relative positioning\");\n  let o;\n  return n === \"auto\" ? o = {\n    middleware: [\n      Vt(),\n      it(),\n      nt({ mainAxis: 5, crossAxis: 12 })\n    ]\n  } : o = {\n    placement: n,\n    middleware: [\n      Ft(),\n      it(),\n      nt(5)\n    ]\n  }, Zt(e, t, async () => {\n    const { x: i, y: r } = await te(e, t, o);\n    Object.assign(t.style, {\n      position: \"absolute\",\n      left: `${i}px`,\n      top: `${r}px`\n    });\n  });\n}\nfunction ie(t, e) {\n  return t.style.position = \"fixed\", Object.entries(e).forEach(([n, o]) => {\n    t.style[n] = o;\n  }), () => {\n  };\n}\nconst oe = {\n  hideOnClickOutside: !0,\n  hideOnEmojiSelect: !0,\n  hideOnEscape: !0,\n  position: \"auto\",\n  showCloseButton: !0\n};\nfunction se(t = {}) {\n  return {\n    ...oe,\n    rootElement: document.body,\n    ...t\n  };\n}\nconst re = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\"/></svg>', lt = {\n  popupContainer: \"popupContainer\",\n  closeButton: \"closeButton\"\n};\nclass ce {\n  constructor(e, n) {\n    this.isOpen = !1, this.externalEvents = new picmo__WEBPACK_IMPORTED_MODULE_0__.Events(), this.options = { ...se(n), ...(0,picmo__WEBPACK_IMPORTED_MODULE_0__.getOptions)(e) }, this.popupEl = document.createElement(\"div\"), this.popupEl.classList.add(lt.popupContainer), this.popupEl.classList.add(this.options.theme), n.className && this.popupEl.classList.add(n.className), this.options.showCloseButton && (this.closeButton = document.createElement(\"button\"), this.closeButton.type = \"button\", this.closeButton.classList.add(lt.closeButton), this.closeButton.innerHTML = re, this.popupEl.appendChild(this.closeButton));\n    const o = document.createElement(\"div\");\n    this.popupEl.appendChild(o), this.picker = (0,picmo__WEBPACK_IMPORTED_MODULE_0__.createPicker)({ ...this.options, rootElement: o }), this.focusTrap = new picmo__WEBPACK_IMPORTED_MODULE_0__.FocusTrap(), this.picker.addEventListener(\"data:ready\", () => {\n      this.focusTrap.activate(this.picker.el), this.picker.setInitialFocus();\n    }), this.options.hideOnEmojiSelect && this.picker.addEventListener(\"emoji:select\", () => {\n      var i;\n      this.close(), (i = this.triggerElement) == null || i.focus();\n    }), this.options.hideOnClickOutside && (this.onDocumentClick = this.onDocumentClick.bind(this), document.addEventListener(\"click\", this.onDocumentClick)), this.options.hideOnEscape && (this.handleKeydown = this.handleKeydown.bind(this), this.popupEl.addEventListener(\"keydown\", this.handleKeydown)), this.referenceElement = this.options.referenceElement, this.triggerElement = this.options.triggerElement;\n  }\n  addEventListener(e, n) {\n    this.externalEvents.on(e, n), this.picker.addEventListener(e, n);\n  }\n  removeEventListener(e, n) {\n    this.externalEvents.off(e, n), this.picker.removeEventListener(e, n);\n  }\n  handleKeydown(e) {\n    var n;\n    e.key === \"Escape\" && (this.close(), (n = this.triggerElement) == null || n.focus());\n  }\n  async destroy() {\n    this.isOpen && await this.close(), document.removeEventListener(\"click\", this.onDocumentClick), this.picker.destroy(), this.externalEvents.removeAll();\n  }\n  toggle(e) {\n    return this.isOpen ? this.close() : this.open(e);\n  }\n  async open({ triggerElement: e, referenceElement: n } = {}) {\n    this.isOpen || (e && (this.triggerElement = e), n && (this.referenceElement = n), await this.initiateOpenStateChange(!0), this.popupEl.style.opacity = \"0\", this.options.rootElement.appendChild(this.popupEl), await this.setPosition(), this.picker.reset(!1), await this.animatePopup(!0), await this.animateCloseButton(!0), this.picker.setInitialFocus(), this.externalEvents.emit(\"picker:open\"));\n  }\n  async close() {\n    var e;\n    !this.isOpen || (await this.initiateOpenStateChange(!1), await this.animateCloseButton(!1), await this.animatePopup(!1), this.popupEl.remove(), this.picker.reset(), (e = this.positionCleanup) == null || e.call(this), this.focusTrap.deactivate(), this.externalEvents.emit(\"picker:close\"));\n  }\n  getRunningAnimations() {\n    return this.picker.el.getAnimations().filter((e) => e.playState === \"running\");\n  }\n  async setPosition() {\n    var e;\n    (e = this.positionCleanup) == null || e.call(this), this.positionCleanup = await ee(\n      this.popupEl,\n      this.referenceElement,\n      this.options.position\n    );\n  }\n  awaitPendingAnimations() {\n    return Promise.all(this.getRunningAnimations().map((e) => e.finished));\n  }\n  onDocumentClick(e) {\n    var i;\n    const n = e.target, o = (i = this.triggerElement) == null ? void 0 : i.contains(n);\n    this.isOpen && !this.picker.isPickerClick(e) && !o && this.close();\n  }\n  animatePopup(e) {\n    return (0,picmo__WEBPACK_IMPORTED_MODULE_0__.animate)(\n      this.popupEl,\n      {\n        opacity: [0, 1],\n        transform: [\"scale(0.9)\", \"scale(1)\"]\n      },\n      {\n        duration: 150,\n        id: e ? \"show-picker\" : \"hide-picker\",\n        easing: \"ease-in-out\",\n        direction: e ? \"normal\" : \"reverse\",\n        fill: \"both\"\n      },\n      this.options\n    );\n  }\n  animateCloseButton(e) {\n    if (this.closeButton)\n      return (0,picmo__WEBPACK_IMPORTED_MODULE_0__.animate)(\n        this.closeButton,\n        {\n          opacity: [0, 1]\n        },\n        {\n          duration: 25,\n          id: e ? \"show-close\" : \"hide-close\",\n          easing: \"ease-in-out\",\n          direction: e ? \"normal\" : \"reverse\",\n          fill: \"both\"\n        },\n        this.options\n      );\n  }\n  async initiateOpenStateChange(e) {\n    this.isOpen = e, await this.awaitPendingAnimations();\n  }\n}\nconst le = `.popupContainer{display:flex;flex-direction:column;position:absolute}.popupContainer .closeButton{position:absolute;opacity:0;background:transparent;border:none;z-index:1;right:0;top:0;cursor:pointer;padding:4px;align-self:flex-end;transform:translate(50%,-50%);background:#999999;width:1.5rem;height:1.5rem;display:flex;align-items:center;justify-content:center;border-radius:50%}.popupContainer .closeButton:hover{background:var(--accent-color)}.popupContainer .closeButton svg{fill:#fff;width:1.25rem;height:1.25rem}\n`, ae = (0,picmo__WEBPACK_IMPORTED_MODULE_0__.createStyleInjector)();\nfunction ue(t, e) {\n  return ae(le), new ce({\n    autoFocus: \"auto\",\n    ...t\n  }, e);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@picmo/popup-picker/dist/index.js\n");

/***/ }),

/***/ "./node_modules/picmo/dist/index.js":
/*!******************************************!*\
  !*** ./node_modules/picmo/dist/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EmojiPicker\": () => (/* binding */ gs),\n/* harmony export */   \"Events\": () => (/* binding */ ae),\n/* harmony export */   \"FocusTrap\": () => (/* binding */ Ue),\n/* harmony export */   \"InMemoryStoreFactory\": () => (/* binding */ xs),\n/* harmony export */   \"IndexedDbStoreFactory\": () => (/* binding */ xe),\n/* harmony export */   \"LocalStorageProvider\": () => (/* binding */ Ct),\n/* harmony export */   \"NativeRenderer\": () => (/* binding */ pt),\n/* harmony export */   \"RecentsProvider\": () => (/* binding */ bt),\n/* harmony export */   \"Renderer\": () => (/* binding */ ut),\n/* harmony export */   \"SessionStorageProvider\": () => (/* binding */ Fs),\n/* harmony export */   \"animate\": () => (/* binding */ I),\n/* harmony export */   \"autoTheme\": () => (/* binding */ $s),\n/* harmony export */   \"caseInsensitiveIncludes\": () => (/* binding */ he),\n/* harmony export */   \"computeHash\": () => (/* binding */ Ve),\n/* harmony export */   \"createDatabase\": () => (/* binding */ As),\n/* harmony export */   \"createPicker\": () => (/* binding */ Ls),\n/* harmony export */   \"createStyleInjector\": () => (/* binding */ vs),\n/* harmony export */   \"darkTheme\": () => (/* binding */ zs),\n/* harmony export */   \"debounce\": () => (/* binding */ Re),\n/* harmony export */   \"deleteDatabase\": () => (/* binding */ Ps),\n/* harmony export */   \"en\": () => (/* binding */ yt),\n/* harmony export */   \"getEmojiForEvent\": () => (/* binding */ U),\n/* harmony export */   \"getOptions\": () => (/* binding */ kt),\n/* harmony export */   \"getPrefixedClasses\": () => (/* binding */ g),\n/* harmony export */   \"globalConfig\": () => (/* binding */ xt),\n/* harmony export */   \"lightTheme\": () => (/* binding */ Ke),\n/* harmony export */   \"prefixClassName\": () => (/* binding */ ie),\n/* harmony export */   \"shouldAnimate\": () => (/* binding */ be),\n/* harmony export */   \"throttle\": () => (/* binding */ Te),\n/* harmony export */   \"toElement\": () => (/* binding */ J)\n/* harmony export */ });\nvar O = (s, e, t) => {\n  if (!e.has(s))\n    throw TypeError(\"Cannot \" + t);\n};\nvar y = (s, e, t) => (O(s, e, \"read from private field\"), t ? t.call(s) : e.get(s)), f = (s, e, t) => {\n  if (e.has(s))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  e instanceof WeakSet ? e.add(s) : e.set(s, t);\n}, A = (s, e, t, o) => (O(s, e, \"write to private field\"), o ? o.call(s, t) : e.set(s, t), t);\nvar p = (s, e, t) => (O(s, e, \"access private method\"), t);\nconst $e = \"14.0\";\nfunction Le(s, e, t) {\n  let o = `https://cdn.jsdelivr.net/npm/emojibase-data@${e}/${s}`;\n  return typeof t == \"function\" ? o = t(s, e) : typeof t == \"string\" && (o = `${t}/${s}`), o;\n}\nasync function oe(s, e = {}) {\n  const {\n    local: t = !1,\n    version: o = \"latest\",\n    cdnUrl: i,\n    ...r\n  } = e, a = Le(s, o, i), n = t ? localStorage : sessionStorage, l = `emojibase/${o}/${s}`, m = n.getItem(l);\n  if (m)\n    return Promise.resolve(JSON.parse(m));\n  const d = await fetch(a, {\n    credentials: \"omit\",\n    mode: \"cors\",\n    redirect: \"error\",\n    ...r\n  });\n  if (!d.ok)\n    throw new Error(\"Failed to load Emojibase dataset.\");\n  const h = await d.json();\n  try {\n    n.setItem(l, JSON.stringify(h));\n  } catch {\n  }\n  return h;\n}\nconst Fe = {\n  discord: \"joypixels\",\n  slack: \"iamcal\"\n};\nasync function le(s, e, t) {\n  var o;\n  return oe(`${s}/shortcodes/${(o = Fe[e]) !== null && o !== void 0 ? o : e}.json`, t);\n}\nfunction k(s, e) {\n  if (e.length === 0)\n    return s;\n  const t = new Set(s.shortcodes);\n  return e.forEach((o) => {\n    const i = o[s.hexcode];\n    Array.isArray(i) ? i.forEach((r) => t.add(r)) : i && t.add(i);\n  }), s.shortcodes = [...t], s.skins && s.skins.forEach((o) => {\n    k(o, e);\n  }), s;\n}\nfunction Ae(s, e = []) {\n  const t = [];\n  return s.forEach((o) => {\n    if (o.skins) {\n      const {\n        skins: i,\n        ...r\n      } = o;\n      t.push(k(r, e)), i.forEach((a) => {\n        const n = {\n          ...a\n        };\n        r.tags && (n.tags = [...r.tags]), t.push(k(n, e));\n      });\n    } else\n      t.push(k(o, e));\n  }), t;\n}\nfunction Ie(s, e) {\n  return e.length === 0 || s.forEach((t) => {\n    k(t, e);\n  }), s;\n}\nasync function ve(s, e = {}) {\n  const {\n    compact: t = !1,\n    flat: o = !1,\n    shortcodes: i = [],\n    ...r\n  } = e, a = await oe(`${s}/${t ? \"compact\" : \"data\"}.json`, r);\n  let n = [];\n  return i.length > 0 && (n = await Promise.all(i.map((l) => {\n    let m;\n    if (l.includes(\"/\")) {\n      const [d, h] = l.split(\"/\");\n      m = le(d, h, r);\n    } else\n      m = le(s, l, r);\n    return m.catch(() => ({}));\n  }))), o ? Ae(a, n) : Ie(a, n);\n}\nasync function we(s, e) {\n  return oe(`${s}/messages.json`, e);\n}\nfunction U(s, e) {\n  const o = s.target.closest(\"[data-emoji]\");\n  if (o) {\n    const i = e.find((r) => r.emoji === o.dataset.emoji);\n    if (i)\n      return i;\n  }\n  return null;\n}\nfunction be(s) {\n  var t;\n  const e = (t = window.matchMedia) == null ? void 0 : t.call(window, \"(prefers-reduced-motion: reduce)\");\n  return s.animate && !(e != null && e.matches);\n}\nfunction he(s, e) {\n  return s.toLowerCase().includes(e.toLowerCase());\n}\nfunction Te(s, e) {\n  let t = null;\n  return () => {\n    t || (t = window.setTimeout(() => {\n      s(), t = null;\n    }, e));\n  };\n}\nfunction Re(s, e) {\n  let t = null;\n  return (...o) => {\n    t && window.clearTimeout(t), t = window.setTimeout(() => {\n      s(...o), t = null;\n    }, e);\n  };\n}\nfunction I(s, e, t, o) {\n  if (be(o) && s.animate)\n    return s.animate(e, t).finished;\n  const i = t.direction === \"normal\" ? 1 : 0, r = Object.entries(e).reduce((a, [n, l]) => ({\n    ...a,\n    [n]: l[i]\n  }), {});\n  return Object.assign(s.style, r), Promise.resolve();\n}\nfunction J(s) {\n  var t;\n  const e = document.createElement(\"template\");\n  return e.innerHTML = s, (t = e.content) == null ? void 0 : t.firstElementChild;\n}\nasync function Ve(s) {\n  const e = new TextEncoder().encode(s), t = await crypto.subtle.digest(\"SHA-256\", e);\n  return Array.from(new Uint8Array(t)).map((i) => i.toString(16).padStart(2, \"0\")).join(\"\");\n}\nfunction g(...s) {\n  return s.reduce((e, t) => ({\n    ...e,\n    [t]: ie(t)\n  }), {});\n}\nfunction ie(s) {\n  return `${s}`;\n}\nfunction Be(s, e) {\n  const t = `https://cdn.jsdelivr.net/npm/emojibase-data@${s}/${e}`;\n  return {\n    emojisUrl: `${t}/data.json`,\n    messagesUrl: `${t}/messages.json`\n  };\n}\nasync function de(s) {\n  try {\n    return (await fetch(s, { method: \"HEAD\" })).headers.get(\"etag\");\n  } catch {\n    return null;\n  }\n}\nfunction Me(s) {\n  const { emojisUrl: e, messagesUrl: t } = Be(\"latest\", s);\n  try {\n    return Promise.all([\n      de(e),\n      de(t)\n    ]);\n  } catch {\n    return Promise.all([null, null]);\n  }\n}\nasync function De(s, e, t) {\n  let o;\n  try {\n    o = await s.getEtags();\n  } catch {\n    o = {};\n  }\n  const { storedEmojisEtag: i, storedMessagesEtag: r } = o;\n  if (t !== r || e !== i) {\n    const [a, n] = await Promise.all([we(s.locale), ve(s.locale)]);\n    await s.populate({\n      groups: a.groups,\n      emojis: n,\n      emojisEtag: e,\n      messagesEtag: t\n    });\n  }\n}\nasync function He(s, e) {\n  const t = await s.getHash();\n  return e !== t;\n}\nasync function Ce(s, e, t) {\n  const o = t || e(s);\n  return await o.open(), o;\n}\nasync function Ne(s, e, t) {\n  const o = await Ce(s, e, t), [i, r] = await Me(s);\n  if (await o.isPopulated())\n    i && r && await De(o, i, r);\n  else {\n    const [a, n] = await Promise.all([we(s), ve(s)]);\n    await o.populate({ groups: a.groups, emojis: n, emojisEtag: i, messagesEtag: r });\n  }\n  return o;\n}\nasync function Oe(s, e, t, o, i) {\n  const r = await Ce(s, e, i), a = await Ve(o);\n  return (!await r.isPopulated() || await He(r, a)) && await r.populate({ groups: t.groups, emojis: o, hash: a }), r;\n}\nasync function re(s, e, t, o, i) {\n  return t && o ? Oe(s, e, t, o, i) : Ne(s, e, i);\n}\nfunction Ps(s, e) {\n  s.deleteDatabase(e);\n}\nclass Ue {\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n  activate(e) {\n    this.rootElement = e, this.rootElement.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  deactivate() {\n    var e;\n    (e = this.rootElement) == null || e.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  get focusableElements() {\n    return this.rootElement.querySelectorAll('input, [tabindex=\"0\"]');\n  }\n  get lastFocusableElement() {\n    return this.focusableElements[this.focusableElements.length - 1];\n  }\n  get firstFocusableElement() {\n    return this.focusableElements[0];\n  }\n  checkFocus(e, t, o) {\n    e.target === t && (o.focus(), e.preventDefault());\n  }\n  handleKeyDown(e) {\n    e.key === \"Tab\" && this.checkFocus(\n      e,\n      e.shiftKey ? this.firstFocusableElement : this.lastFocusableElement,\n      e.shiftKey ? this.lastFocusableElement : this.firstFocusableElement\n    );\n  }\n}\nconst {\n  light: Ke,\n  dark: zs,\n  auto: $s\n} = g(\"light\", \"dark\", \"auto\");\nclass c {\n  constructor({ template: e, classes: t, parent: o }) {\n    this.isDestroyed = !1, this.appEvents = {}, this.uiEvents = [], this.uiElements = {}, this.ui = {}, this.template = e, this.classes = t, this.parent = o, this.keyBindingHandler = this.keyBindingHandler.bind(this);\n  }\n  initialize() {\n    this.bindAppEvents();\n  }\n  setCustomEmojis(e) {\n    this.customEmojis = e;\n  }\n  setEvents(e) {\n    this.events = e;\n  }\n  setPickerId(e) {\n    this.pickerId = e;\n  }\n  emit(e, ...t) {\n    this.events.emit(e, ...t);\n  }\n  setI18n(e) {\n    this.i18n = e;\n  }\n  setRenderer(e) {\n    this.renderer = e;\n  }\n  setEmojiData(e) {\n    this.emojiDataPromise = e, e.then((t) => {\n      this.emojiData = t;\n    });\n  }\n  updateEmojiData(e) {\n    this.emojiData = e, this.emojiDataPromise = Promise.resolve(e);\n  }\n  setOptions(e) {\n    this.options = e;\n  }\n  renderSync(e = {}) {\n    return this.el = this.template.renderSync({\n      classes: this.classes,\n      i18n: this.i18n,\n      pickerId: this.pickerId,\n      ...e\n    }), this.postRender(), this.el;\n  }\n  async render(e = {}) {\n    return await this.emojiDataPromise, this.el = await this.template.renderAsync({\n      classes: this.classes,\n      i18n: this.i18n,\n      pickerId: this.pickerId,\n      ...e\n    }), this.postRender(), this.el;\n  }\n  postRender() {\n    this.bindUIElements(), this.bindKeyBindings(), this.bindUIEvents(), this.scheduleShowAnimation();\n  }\n  bindAppEvents() {\n    Object.keys(this.appEvents).forEach((e) => {\n      this.events.on(e, this.appEvents[e], this);\n    }), this.events.on(\"data:ready\", this.updateEmojiData, this);\n  }\n  unbindAppEvents() {\n    Object.keys(this.appEvents).forEach((e) => {\n      this.events.off(e, this.appEvents[e]);\n    }), this.events.off(\"data:ready\", this.updateEmojiData);\n  }\n  keyBindingHandler(e) {\n    const t = this.keyBindings[e.key];\n    t && t.call(this, e);\n  }\n  bindKeyBindings() {\n    this.keyBindings && this.el.addEventListener(\"keydown\", this.keyBindingHandler);\n  }\n  unbindKeyBindings() {\n    this.keyBindings && this.el.removeEventListener(\"keydown\", this.keyBindingHandler);\n  }\n  bindUIElements() {\n    this.ui = Object.keys(this.uiElements).reduce((e, t) => ({\n      ...e,\n      [t]: this.el.querySelector(this.uiElements[t])\n    }), {});\n  }\n  bindUIEvents() {\n    this.uiEvents.forEach((e) => {\n      e.handler = e.handler.bind(this), (e.target ? this.ui[e.target] : this.el).addEventListener(e.event, e.handler, e.options);\n    });\n  }\n  unbindUIEvents() {\n    this.uiEvents.forEach((e) => {\n      (e.target ? this.ui[e.target] : this.el).removeEventListener(e.event, e.handler);\n    });\n  }\n  destroy() {\n    this.unbindAppEvents(), this.unbindUIEvents(), this.unbindKeyBindings(), this.el.remove(), this.isDestroyed = !0;\n  }\n  scheduleShowAnimation() {\n    if (this.parent) {\n      const e = new MutationObserver((t) => {\n        const [o] = t;\n        o.type === \"childList\" && o.addedNodes[0] === this.el && (be(this.options) && this.animateShow && this.animateShow(), e.disconnect);\n      });\n      e.observe(this.parent, { childList: !0 });\n    }\n  }\n  static childEvent(e, t, o, i = {}) {\n    return { target: e, event: t, handler: o, options: i };\n  }\n  static uiEvent(e, t, o = {}) {\n    return { event: e, handler: t, options: o };\n  }\n  static byClass(e) {\n    return `.${e}`;\n  }\n}\nconst qe = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512zM232 256C232 264 236 271.5 242.7 275.1L338.7 339.1C349.7 347.3 364.6 344.3 371.1 333.3C379.3 322.3 376.3 307.4 365.3 300L280 243.2V120C280 106.7 269.3 96 255.1 96C242.7 96 231.1 106.7 231.1 120L232 256z\"/></svg>', Ge = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M64 496C64 504.8 56.75 512 48 512h-32C7.25 512 0 504.8 0 496V32c0-17.75 14.25-32 32-32s32 14.25 32 32V496zM476.3 0c-6.365 0-13.01 1.35-19.34 4.233c-45.69 20.86-79.56 27.94-107.8 27.94c-59.96 0-94.81-31.86-163.9-31.87C160.9 .3055 131.6 4.867 96 15.75v350.5c32-9.984 59.87-14.1 84.85-14.1c73.63 0 124.9 31.78 198.6 31.78c31.91 0 68.02-5.971 111.1-23.09C504.1 355.9 512 344.4 512 332.1V30.73C512 11.1 495.3 0 476.3 0z\"/></svg>', We = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM176.4 240C194 240 208.4 225.7 208.4 208C208.4 190.3 194 176 176.4 176C158.7 176 144.4 190.3 144.4 208C144.4 225.7 158.7 240 176.4 240zM336.4 176C318.7 176 304.4 190.3 304.4 208C304.4 225.7 318.7 240 336.4 240C354 240 368.4 225.7 368.4 208C368.4 190.3 354 176 336.4 176zM259.9 369.4C288.8 369.4 316.2 375.2 340.6 385.5C352.9 390.7 366.7 381.3 361.4 369.1C344.8 330.9 305.6 303.1 259.9 303.1C214.3 303.1 175.1 330.8 158.4 369.1C153.1 381.3 166.1 390.6 179.3 385.4C203.7 375.1 231 369.4 259.9 369.4L259.9 369.4z\"/></svg>', _e = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M448 64H192C85.96 64 0 149.1 0 256s85.96 192 192 192h256c106 0 192-85.96 192-192S554 64 448 64zM247.1 280h-32v32c0 13.2-10.78 24-23.98 24c-13.2 0-24.02-10.8-24.02-24v-32L136 279.1C122.8 279.1 111.1 269.2 111.1 256c0-13.2 10.85-24.01 24.05-24.01L167.1 232v-32c0-13.2 10.82-24 24.02-24c13.2 0 23.98 10.8 23.98 24v32h32c13.2 0 24.02 10.8 24.02 24C271.1 269.2 261.2 280 247.1 280zM431.1 344c-22.12 0-39.1-17.87-39.1-39.1s17.87-40 39.1-40s39.1 17.88 39.1 40S454.1 344 431.1 344zM495.1 248c-22.12 0-39.1-17.87-39.1-39.1s17.87-40 39.1-40c22.12 0 39.1 17.88 39.1 40S518.1 248 495.1 248z\"/></svg>', Je = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M112.1 454.3c0 6.297 1.816 12.44 5.284 17.69l17.14 25.69c5.25 7.875 17.17 14.28 26.64 14.28h61.67c9.438 0 21.36-6.401 26.61-14.28l17.08-25.68c2.938-4.438 5.348-12.37 5.348-17.7L272 415.1h-160L112.1 454.3zM191.4 .0132C89.44 .3257 16 82.97 16 175.1c0 44.38 16.44 84.84 43.56 115.8c16.53 18.84 42.34 58.23 52.22 91.45c.0313 .25 .0938 .5166 .125 .7823h160.2c.0313-.2656 .0938-.5166 .125-.7823c9.875-33.22 35.69-72.61 52.22-91.45C351.6 260.8 368 220.4 368 175.1C368 78.61 288.9-.2837 191.4 .0132zM192 96.01c-44.13 0-80 35.89-80 79.1C112 184.8 104.8 192 96 192S80 184.8 80 176c0-61.76 50.25-111.1 112-111.1c8.844 0 16 7.159 16 16S200.8 96.01 192 96.01z\"/></svg>', Ye = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M512 32H120c-13.25 0-24 10.75-24 24L96.01 288c0 53 43 96 96 96h192C437 384 480 341 480 288h32c70.63 0 128-57.38 128-128S582.6 32 512 32zM512 224h-32V96h32c35.25 0 64 28.75 64 64S547.3 224 512 224zM560 416h-544C7.164 416 0 423.2 0 432C0 458.5 21.49 480 48 480h480c26.51 0 48-21.49 48-48C576 423.2 568.8 416 560 416z\"/></svg>', Qe = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M482.3 192C516.5 192 576 221 576 256C576 292 516.5 320 482.3 320H365.7L265.2 495.9C259.5 505.8 248.9 512 237.4 512H181.2C170.6 512 162.9 501.8 165.8 491.6L214.9 320H112L68.8 377.6C65.78 381.6 61.04 384 56 384H14.03C6.284 384 0 377.7 0 369.1C0 368.7 .1818 367.4 .5398 366.1L32 256L.5398 145.9C.1818 144.6 0 143.3 0 142C0 134.3 6.284 128 14.03 128H56C61.04 128 65.78 130.4 68.8 134.4L112 192H214.9L165.8 20.4C162.9 10.17 170.6 0 181.2 0H237.4C248.9 0 259.5 6.153 265.2 16.12L365.7 192H482.3z\"/></svg>', Xe = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M9.375 233.4C3.375 239.4 0 247.5 0 256v128c0 8.5 3.375 16.62 9.375 22.62S23.5 416 32 416h32V224H32C23.5 224 15.38 227.4 9.375 233.4zM464 96H352V32c0-17.62-14.38-32-32-32S288 14.38 288 32v64H176C131.8 96 96 131.8 96 176V448c0 35.38 28.62 64 64 64h320c35.38 0 64-28.62 64-64V176C544 131.8 508.3 96 464 96zM256 416H192v-32h64V416zM224 296C201.9 296 184 278.1 184 256S201.9 216 224 216S264 233.9 264 256S246.1 296 224 296zM352 416H288v-32h64V416zM448 416h-64v-32h64V416zM416 296c-22.12 0-40-17.88-40-40S393.9 216 416 216S456 233.9 456 256S438.1 296 416 296zM630.6 233.4C624.6 227.4 616.5 224 608 224h-32v192h32c8.5 0 16.62-3.375 22.62-9.375S640 392.5 640 384V256C640 247.5 636.6 239.4 630.6 233.4z\"/></svg>', Ze = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n  <defs>\n    <radialGradient gradientUnits=\"userSpaceOnUse\" cy=\"10%\" id=\"gradient-0\">\n      <stop offset=\"0\" stop-color=\"hsl(50, 100%, 50%)\" />\n      <stop offset=\"1\" stop-color=\"hsl(50, 100%, 60%)\" />\n    </radialGradient>\n  </defs>\n  <!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. -->\n  <ellipse stroke=\"#000\" fill=\"rgba(0, 0, 0, 0.6)\" cx=\"172.586\" cy=\"207.006\" rx=\"39.974\" ry=\"39.974\"/>\n  <ellipse stroke=\"#000\" fill=\"rgba(0, 0, 0, 0.6)\" cx=\"334.523\" cy=\"207.481\" rx=\"39.974\" ry=\"39.974\"/>\n  <ellipse stroke=\"#000\" fill=\"rgba(0, 0, 0, 0.6)\" cx=\"313.325\" cy=\"356.208\" rx=\"91.497\" ry=\"59.893\"/>\n  <path fill=\"#55a7ff\" d=\"M 159.427 274.06 L 102.158 363.286 L 124.366 417.011 L 160.476 423.338 L 196.937 414.736 L 218.502 375.214\"></path>\n  <path fill=\"url(#gradient-0)\" d=\"M256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0zM256 352C290.9 352 323.2 367.8 348.3 394.9C354.3 401.4 364.4 401.7 370.9 395.7C377.4 389.7 377.7 379.6 371.7 373.1C341.6 340.5 301 320 256 320C247.2 320 240 327.2 240 336C240 344.8 247.2 352 256 352H256zM208 369C208 349 179.6 308.6 166.4 291.3C163.2 286.9 156.8 286.9 153.6 291.3C140.6 308.6 112 349 112 369C112 395 133.5 416 160 416C186.5 416 208 395 208 369H208zM303.6 208C303.6 225.7 317.1 240 335.6 240C353.3 240 367.6 225.7 367.6 208C367.6 190.3 353.3 176 335.6 176C317.1 176 303.6 190.3 303.6 208zM207.6 208C207.6 190.3 193.3 176 175.6 176C157.1 176 143.6 190.3 143.6 208C143.6 225.7 157.1 240 175.6 240C193.3 240 207.6 225.7 207.6 208z\" />\n</svg>`, et = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M500.3 443.7l-119.7-119.7c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723C99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9c53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0C515.9 484.7 515.9 459.3 500.3 443.7zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128c0 70.58-57.42 128-128 128S79.1 278.6 79.1 208z\"/></svg>', tt = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256.3 331.8C208.9 331.8 164.1 324.9 124.5 312.8C112.2 309 100.2 319.7 105.2 331.5C130.1 390.6 188.4 432 256.3 432C324.2 432 382.4 390.6 407.4 331.5C412.4 319.7 400.4 309 388.1 312.8C348.4 324.9 303.7 331.8 256.3 331.8H256.3zM176.4 176C158.7 176 144.4 190.3 144.4 208C144.4 225.7 158.7 240 176.4 240C194 240 208.4 225.7 208.4 208C208.4 190.3 194 176 176.4 176zM336.4 240C354 240 368.4 225.7 368.4 208C368.4 190.3 354 176 336.4 176C318.7 176 304.4 190.3 304.4 208C304.4 225.7 318.7 240 336.4 240z\"/></svg>', st = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M500.3 7.251C507.7 13.33 512 22.41 512 31.1V175.1C512 202.5 483.3 223.1 447.1 223.1C412.7 223.1 383.1 202.5 383.1 175.1C383.1 149.5 412.7 127.1 447.1 127.1V71.03L351.1 90.23V207.1C351.1 234.5 323.3 255.1 287.1 255.1C252.7 255.1 223.1 234.5 223.1 207.1C223.1 181.5 252.7 159.1 287.1 159.1V63.1C287.1 48.74 298.8 35.61 313.7 32.62L473.7 .6198C483.1-1.261 492.9 1.173 500.3 7.251H500.3zM74.66 303.1L86.5 286.2C92.43 277.3 102.4 271.1 113.1 271.1H174.9C185.6 271.1 195.6 277.3 201.5 286.2L213.3 303.1H239.1C266.5 303.1 287.1 325.5 287.1 351.1V463.1C287.1 490.5 266.5 511.1 239.1 511.1H47.1C21.49 511.1-.0019 490.5-.0019 463.1V351.1C-.0019 325.5 21.49 303.1 47.1 303.1H74.66zM143.1 359.1C117.5 359.1 95.1 381.5 95.1 407.1C95.1 434.5 117.5 455.1 143.1 455.1C170.5 455.1 191.1 434.5 191.1 407.1C191.1 381.5 170.5 359.1 143.1 359.1zM440.3 367.1H496C502.7 367.1 508.6 372.1 510.1 378.4C513.3 384.6 511.6 391.7 506.5 396L378.5 508C372.9 512.1 364.6 513.3 358.6 508.9C352.6 504.6 350.3 496.6 353.3 489.7L391.7 399.1H336C329.3 399.1 323.4 395.9 321 389.6C318.7 383.4 320.4 376.3 325.5 371.1L453.5 259.1C459.1 255 467.4 254.7 473.4 259.1C479.4 263.4 481.6 271.4 478.7 278.3L440.3 367.1zM116.7 219.1L19.85 119.2C-8.112 90.26-6.614 42.31 24.85 15.34C51.82-8.137 93.26-3.642 118.2 21.83L128.2 32.32L137.7 21.83C162.7-3.642 203.6-8.137 231.6 15.34C262.6 42.31 264.1 90.26 236.1 119.2L139.7 219.1C133.2 225.6 122.7 225.6 116.7 219.1H116.7z\"/></svg>', ot = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M413.8 447.1L256 448l0 31.99C256 497.7 241.8 512 224.1 512c-17.67 0-32.1-14.32-32.1-31.99l0-31.99l-158.9-.0099c-28.5 0-43.69-34.49-24.69-56.4l68.98-79.59H62.22c-25.41 0-39.15-29.8-22.67-49.13l60.41-70.85H89.21c-21.28 0-32.87-22.5-19.28-37.31l134.8-146.5c10.4-11.3 28.22-11.3 38.62-.0033l134.9 146.5c13.62 14.81 2.001 37.31-19.28 37.31h-10.77l60.35 70.86c16.46 19.34 2.716 49.12-22.68 49.12h-15.2l68.98 79.59C458.7 413.7 443.1 447.1 413.8 447.1z\"/></svg>', it = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3c-95.73 0-173.3 77.6-173.3 173.3C0 496.5 15.52 512 34.66 512H413.3C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM479.1 320h-73.85C451.2 357.7 480 414.1 480 477.3C480 490.1 476.2 501.9 470 512h138C625.7 512 640 497.6 640 479.1C640 391.6 568.4 320 479.1 320zM432 256C493.9 256 544 205.9 544 144S493.9 32 432 32c-25.11 0-48.04 8.555-66.72 22.51C376.8 76.63 384 101.4 384 128c0 35.52-11.93 68.14-31.59 94.71C372.7 243.2 400.8 256 432 256z\"/></svg>', rt = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n  <defs>\n    <radialGradient id=\"radial\" cy=\"85%\">\n      <stop offset=\"20%\" stop-color=\"var(--color-secondary)\" />\n      <stop offset=\"100%\" stop-color=\"var(--color-primary)\" />\n    </radialGradient>\n  </defs>\n  <!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. -->\n  <path fill=\"url('#radial')\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\" />\n</svg>`, at = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\"/></svg>';\nfunction nt(s, e) {\n  const t = J(e);\n  return t.dataset.icon = s, t.classList.add(ie(\"icon\")), t;\n}\nconst me = {\n  clock: qe,\n  flag: Ge,\n  frown: We,\n  gamepad: _e,\n  lightbulb: Je,\n  mug: Ye,\n  plane: Qe,\n  robot: Xe,\n  sad: Ze,\n  search: et,\n  smiley: tt,\n  symbols: st,\n  tree: ot,\n  users: it,\n  warning: rt,\n  xmark: at\n}, D = {\n  recents: \"clock\",\n  \"smileys-emotion\": \"smiley\",\n  \"people-body\": \"users\",\n  \"animals-nature\": \"tree\",\n  \"food-drink\": \"mug\",\n  activities: \"gamepad\",\n  \"travel-places\": \"plane\",\n  objects: \"lightbulb\",\n  symbols: \"symbols\",\n  flags: \"flag\",\n  custom: \"robot\"\n};\nfunction je(s, e) {\n  if (!(s in me))\n    return console.warn(`Unknown icon: \"${s}\"`), document.createElement(\"div\");\n  const t = nt(s, me[s]);\n  return e && t.classList.add(ie(`icon-${e}`)), t;\n}\nconst ct = {\n  mode: \"sync\"\n};\nvar w, E, S, Y, P, Q, z, X;\nclass u {\n  constructor(e, t = {}) {\n    f(this, S);\n    f(this, P);\n    f(this, z);\n    f(this, w, void 0);\n    f(this, E, void 0);\n    A(this, w, e), A(this, E, t.mode || ct.mode);\n  }\n  renderSync(e = {}) {\n    const t = J(y(this, w).call(this, e));\n    return p(this, z, X).call(this, t, e), p(this, P, Q).call(this, t), p(this, S, Y).call(this, t, e), t;\n  }\n  async renderAsync(e = {}) {\n    const t = J(y(this, w).call(this, e));\n    return p(this, z, X).call(this, t, e), p(this, P, Q).call(this, t), await p(this, S, Y).call(this, t, e), t;\n  }\n  render(e) {\n    return y(this, E) === \"sync\" ? this.renderSync(e) : this.renderAsync(e);\n  }\n}\nw = new WeakMap(), E = new WeakMap(), S = new WeakSet(), Y = async function(e, t) {\n  const o = e.querySelectorAll(\"[data-view]\"), i = [];\n  for (const r of o) {\n    const a = t[r.dataset.view];\n    a ? r.dataset.render !== \"sync\" ? i.push(a.render().then((n) => (r.replaceWith(n), n))) : r.replaceWith(a.renderSync()) : r.remove();\n  }\n  return Promise.all(i);\n}, P = new WeakSet(), Q = function(e) {\n  e.querySelectorAll(\"i[data-icon]\").forEach((o) => {\n    const { icon: i, size: r } = o.dataset;\n    o.replaceWith(je(i, r));\n  });\n}, z = new WeakSet(), X = function(e, t) {\n  return e.querySelectorAll(\"[data-placeholder]\").forEach((i) => {\n    const r = i.dataset.placeholder;\n    if (r && t[r]) {\n      const a = t[r];\n      i.replaceWith(...[a].flat());\n    } else\n      console.warn(`Missing placeholder element for key \"${r}\"`);\n  }), e;\n};\nconst lt = g(\n  \"imagePlaceholder\",\n  \"placeholder\"\n), ht = new u(({ classes: s }) => `\n  <div class=\"${s.placeholder} ${s.imagePlaceholder}\"></div>\n`);\nclass dt extends c {\n  constructor({ classNames: e } = {}) {\n    super({ template: ht, classes: lt }), this.classNames = e;\n  }\n  load(e) {\n    const t = document.createElement(\"img\");\n    this.classNames && (t.className = this.classNames), t.addEventListener(\"load\", () => {\n      this.el.replaceWith(t);\n    }, { once: !0 }), Promise.resolve(e).then((o) => t.src = o);\n  }\n  renderSync() {\n    return super.renderSync(), this.classNames && this.classNames.split(\" \").forEach((t) => this.el.classList.add(t)), this.el;\n  }\n}\nconst mt = g(\"customEmoji\");\nclass ut {\n  renderElement(e) {\n    return { content: e };\n  }\n  renderImage(e = \"\", t) {\n    const o = new dt({ classNames: e });\n    return o.renderSync(), { content: o, resolver: () => (o.load(t()), o.el) };\n  }\n  doRender(e, t, o) {\n    if (e.custom)\n      return this.renderCustom(e, t, o);\n    const { content: i, resolver: r } = this.render(e, o), a = i instanceof Element ? i : i.el;\n    return r && r(), a;\n  }\n  doEmit(e) {\n    return e.custom ? this.emitCustom(e) : this.emit(e);\n  }\n  emitCustom({ url: e, label: t, emoji: o, data: i }) {\n    return { url: e, label: t, emoji: o, data: i };\n  }\n  renderCustom(e, t, o = \"\") {\n    const i = [mt.customEmoji, o].join(\" \").trim(), { content: r, resolver: a } = this.renderImage(i, () => e.url), n = r instanceof Element ? r : r.el;\n    return a && a(), n;\n  }\n}\nconst gt = new u(({ emoji: s }) => `<span>${s}</span>`);\nclass pt extends ut {\n  render(e) {\n    return this.renderElement(gt.renderSync({ emoji: e.emoji }));\n  }\n  emit({ emoji: e, hexcode: t, label: o }) {\n    return { emoji: e, hexcode: t, label: o };\n  }\n}\nconst yt = {\n  \"categories.activities\": \"Activities\",\n  \"categories.animals-nature\": \"Animals & Nature\",\n  \"categories.custom\": \"Custom\",\n  \"categories.flags\": \"Flags\",\n  \"categories.food-drink\": \"Food & Drink\",\n  \"categories.objects\": \"Objects\",\n  \"categories.people-body\": \"People & Body\",\n  \"categories.recents\": \"Recently Used\",\n  \"categories.smileys-emotion\": \"Smileys & Emotion\",\n  \"categories.symbols\": \"Symbols\",\n  \"categories.travel-places\": \"Travel & Places\",\n  \"error.load\": \"Failed to load emojis\",\n  \"recents.clear\": \"Clear recent emojis\",\n  \"recents.none\": \"You haven't selected any emojis yet.\",\n  retry: \"Try again\",\n  \"search.clear\": \"Clear search\",\n  \"search.error\": \"Failed to search emojis\",\n  \"search.notFound\": \"No results found\",\n  search: \"Search emojis...\"\n}, ft = [\n  (s, e) => (s.hexcode === \"1F91D\" && e < 14 && (s.skins = []), s),\n  (s, e) => (s.skins && (s.skins = s.skins.filter((t) => !t.version || t.version <= e)), s)\n];\nfunction vt(s, e) {\n  return ft.some((t) => t(s, e) === null) ? null : s;\n}\nfunction B(s, e) {\n  return s.filter((t) => vt(t, e) !== null);\n}\nfunction x(s) {\n  var e;\n  return {\n    emoji: s.emoji,\n    label: s.label,\n    tags: s.tags,\n    skins: (e = s.skins) == null ? void 0 : e.map((t) => x(t)),\n    order: s.order,\n    custom: !1,\n    hexcode: s.hexcode,\n    version: s.version\n  };\n}\nfunction M(s, e, t) {\n  var o;\n  return t && !t.some((i) => i.order === s.group) ? !1 : he(s.label, e) || ((o = s.tags) == null ? void 0 : o.some((i) => he(i, e)));\n}\nclass ke {\n  constructor(e = \"en\") {\n    this.locale = e;\n  }\n}\nconst Z = \"PicMo\";\nfunction xe(s) {\n  return new wt(s);\n}\nxe.deleteDatabase = (s) => new Promise((e, t) => {\n  const o = indexedDB.deleteDatabase(`${Z}-${s}`);\n  o.addEventListener(\"success\", e), o.addEventListener(\"error\", t);\n});\nclass wt extends ke {\n  async open() {\n    const e = indexedDB.open(`${Z}-${this.locale}`);\n    return new Promise((t, o) => {\n      e.addEventListener(\"success\", (i) => {\n        var r;\n        this.db = (r = i.target) == null ? void 0 : r.result, t();\n      }), e.addEventListener(\"error\", o), e.addEventListener(\"upgradeneeded\", async (i) => {\n        var a;\n        this.db = (a = i.target) == null ? void 0 : a.result, this.db.createObjectStore(\"category\", { keyPath: \"order\" });\n        const r = this.db.createObjectStore(\"emoji\", { keyPath: \"emoji\" });\n        r.createIndex(\"category\", \"group\"), r.createIndex(\"version\", \"version\"), this.db.createObjectStore(\"meta\");\n      });\n    });\n  }\n  async delete() {\n    this.close();\n    const e = indexedDB.deleteDatabase(`${Z}-${this.locale}`);\n    await this.waitForRequest(e);\n  }\n  close() {\n    this.db.close();\n  }\n  async getEmojiCount() {\n    const t = this.db.transaction(\"emoji\", \"readonly\").objectStore(\"emoji\");\n    return (await this.waitForRequest(t.count())).target.result;\n  }\n  async getEtags() {\n    const t = this.db.transaction(\"meta\", \"readonly\").objectStore(\"meta\"), [o, i] = await Promise.all([\n      this.waitForRequest(t.get(\"emojisEtag\")),\n      this.waitForRequest(t.get(\"messagesEtag\"))\n    ]);\n    return {\n      storedEmojisEtag: o.target.result,\n      storedMessagesEtag: i.target.result\n    };\n  }\n  async setMeta(e) {\n    const t = this.db.transaction(\"meta\", \"readwrite\"), o = t.objectStore(\"meta\");\n    return new Promise((i) => {\n      t.oncomplete = i, Object.keys(e).filter(Boolean).forEach((a) => {\n        o.put(e[a], a);\n      });\n    });\n  }\n  async getHash() {\n    const t = this.db.transaction(\"meta\", \"readonly\").objectStore(\"meta\");\n    return (await this.waitForRequest(t.get(\"hash\"))).target.result;\n  }\n  async isPopulated() {\n    const t = this.db.transaction(\"category\", \"readonly\").objectStore(\"category\");\n    return (await this.waitForRequest(t.count())).target.result > 0;\n  }\n  async populate({\n    groups: e,\n    emojis: t,\n    emojisEtag: o,\n    messagesEtag: i,\n    hash: r\n  }) {\n    await this.removeAllObjects(\"category\", \"emoji\");\n    const a = [\n      this.addObjects(\"category\", e),\n      this.addObjects(\"emoji\", t),\n      this.setMeta({ emojisEtag: o, messagesEtag: i, hash: r })\n    ];\n    await Promise.all(a);\n  }\n  async getCategories(e) {\n    var a;\n    const o = this.db.transaction(\"category\", \"readonly\").objectStore(\"category\");\n    let r = (await this.waitForRequest(o.getAll())).target.result.filter((n) => n.key !== \"component\");\n    if (e.showRecents && r.unshift({ key: \"recents\", order: -1 }), (a = e.custom) != null && a.length && r.push({ key: \"custom\", order: 10 }), e.categories) {\n      const n = e.categories;\n      r = r.filter((l) => n.includes(l.key)), r.sort((l, m) => n.indexOf(l.key) - n.indexOf(m.key));\n    } else\n      r.sort((n, l) => n.order - l.order);\n    return r;\n  }\n  async getEmojis(e, t) {\n    const r = this.db.transaction(\"emoji\", \"readonly\").objectStore(\"emoji\").index(\"category\"), l = (await this.waitForRequest(r.getAll(e.order))).target.result.filter((m) => m.version <= t).sort((m, d) => m.order != null && d.order != null ? m.order - d.order : 0).map(x);\n    return B(l, t);\n  }\n  async searchEmojis(e, t, o, i) {\n    const r = [];\n    return new Promise((a, n) => {\n      const d = this.db.transaction(\"emoji\", \"readonly\").objectStore(\"emoji\").openCursor();\n      d.addEventListener(\"success\", (h) => {\n        var ce;\n        const H = (ce = h.target) == null ? void 0 : ce.result;\n        if (!H)\n          return a([\n            ...B(r, o),\n            ...t.filter((ze) => M(ze, e))\n          ]);\n        const N = H.value;\n        M(N, e, i) && N.version <= o && r.push(x(N)), H.continue();\n      }), d.addEventListener(\"error\", (h) => {\n        n(h);\n      });\n    });\n  }\n  async waitForRequest(e) {\n    return new Promise((t, o) => {\n      e.onsuccess = t, e.onerror = o;\n    });\n  }\n  withTransaction(e, t = \"readwrite\", o) {\n    return new Promise((i, r) => {\n      const a = this.db.transaction(e, t);\n      a.oncomplete = i, a.onerror = r, o(a);\n    });\n  }\n  async removeAllObjects(...e) {\n    const t = this.db.transaction(e, \"readwrite\"), o = e.map((i) => t.objectStore(i));\n    await Promise.all(o.map((i) => this.waitForRequest(i.clear())));\n  }\n  async addObjects(e, t) {\n    return this.withTransaction(e, \"readwrite\", (o) => {\n      const i = o.objectStore(e);\n      t.forEach((r) => {\n        i.add(r);\n      });\n    });\n  }\n}\nclass bt {\n}\nconst K = \"PicMo:recents\";\nclass Ee extends bt {\n  constructor(e) {\n    super(), this.storage = e;\n  }\n  clear() {\n    this.storage.removeItem(K);\n  }\n  getRecents(e) {\n    var t;\n    try {\n      return JSON.parse((t = this.storage.getItem(K)) != null ? t : \"[]\").slice(0, e);\n    } catch {\n      return [];\n    }\n  }\n  addOrUpdateRecent(e, t) {\n    const o = [\n      e,\n      ...this.getRecents(t).filter((i) => i.hexcode !== e.hexcode)\n    ].slice(0, t);\n    try {\n      this.storage.setItem(K, JSON.stringify(o));\n    } catch {\n      console.warn(\"storage is not available, recent emojis will not be saved\");\n    }\n  }\n}\nclass Ct extends Ee {\n  constructor() {\n    super(localStorage);\n  }\n}\nconst jt = {\n  dataStore: xe,\n  theme: Ke,\n  animate: !0,\n  showCategoryTabs: !0,\n  showPreview: !0,\n  showRecents: !0,\n  showSearch: !0,\n  showVariants: !0,\n  emojisPerRow: 8,\n  visibleRows: 6,\n  emojiVersion: \"auto\",\n  i18n: yt,\n  locale: \"en\",\n  maxRecents: 50,\n  custom: []\n};\nfunction kt(s = {}) {\n  return {\n    ...jt,\n    ...s,\n    renderer: s.renderer || new pt(),\n    recentsProvider: s.recentsProvider || new Ct()\n  };\n}\nvar v, b, V, $, ee;\nclass ae {\n  constructor() {\n    f(this, b);\n    f(this, $);\n    f(this, v, /* @__PURE__ */ new Map());\n  }\n  on(e, t, o) {\n    p(this, $, ee).call(this, e, t, o);\n  }\n  once(e, t, o) {\n    p(this, $, ee).call(this, e, t, o, !0);\n  }\n  off(e, t) {\n    const o = p(this, b, V).call(this, e);\n    y(this, v).set(e, o.filter((i) => i.handler !== t));\n  }\n  emit(e, ...t) {\n    p(this, b, V).call(this, e).forEach((i) => {\n      i.handler.apply(i.context, t), i.once && this.off(e, i.handler);\n    });\n  }\n  removeAll() {\n    y(this, v).clear();\n  }\n}\nv = new WeakMap(), b = new WeakSet(), V = function(e) {\n  return y(this, v).has(e) || y(this, v).set(e, []), y(this, v).get(e);\n}, $ = new WeakSet(), ee = function(e, t, o, i = !1) {\n  p(this, b, V).call(this, e).push({ context: o, handler: t, once: i });\n};\nconst xt = {\n  injectStyles: !0\n};\nclass Et extends ae {\n}\nclass St extends ae {\n}\nconst te = g(\n  \"emojiCategory\",\n  \"categoryName\",\n  \"noRecents\",\n  \"recentEmojis\"\n);\nclass ne extends c {\n  constructor({ template: e, category: t, showVariants: o, lazyLoader: i }) {\n    super({ template: e, classes: te }), this.baseUIElements = {\n      categoryName: c.byClass(te.categoryName)\n    }, this.category = t, this.showVariants = o, this.lazyLoader = i;\n  }\n  setActive(e, t, o) {\n    this.emojiContainer.setActive(e, t, o);\n  }\n}\nconst Pt = new u(({ classes: s, emoji: e }) => `\n  <button\n    type=\"button\"\n    class=\"${s.emojiButton}\"\n    title=\"${e.label}\"\n    data-emoji=\"${e.emoji}\"\n    tabindex=\"-1\">\n    <div data-placeholder=\"emojiContent\"></div>\n  </button>\n`), zt = g(\"emojiButton\");\nclass Se extends c {\n  constructor({ emoji: e, lazyLoader: t, category: o }) {\n    super({ template: Pt, classes: zt }), this.emoji = e, this.lazyLoader = t, this.category = o;\n  }\n  initialize() {\n    this.uiEvents = [\n      c.uiEvent(\"focus\", this.handleFocus)\n    ], super.initialize();\n  }\n  handleFocus() {\n    this.category && this.events.emit(\"focus:change\", this.category);\n  }\n  activateFocus(e) {\n    this.el.tabIndex = 0, e && this.el.focus();\n  }\n  deactivateFocus() {\n    this.el.tabIndex = -1;\n  }\n  renderSync() {\n    return super.renderSync({\n      emoji: this.emoji,\n      emojiContent: this.renderer.doRender(this.emoji, this.lazyLoader)\n    });\n  }\n}\nclass $t {\n  constructor(e, t, o = 0, i = 0, r = !1) {\n    this.events = new ae(), this.keyHandlers = {\n      ArrowLeft: this.focusPrevious.bind(this),\n      ArrowRight: this.focusNext.bind(this),\n      ArrowUp: this.focusUp.bind(this),\n      ArrowDown: this.focusDown.bind(this)\n    }, this.rowCount = Math.ceil(t / e), this.columnCount = e, this.focusedRow = o, this.focusedColumn = i, this.emojiCount = t, this.wrap = r, this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n  destroy() {\n    this.events.removeAll();\n  }\n  on(e, t) {\n    this.events.on(e, t);\n  }\n  handleKeyDown(e) {\n    e.key in this.keyHandlers && (e.preventDefault(), this.keyHandlers[e.key]());\n  }\n  setCell(e, t, o = !0) {\n    const i = this.getIndex();\n    this.focusedRow = e, t !== void 0 && (this.focusedColumn = Math.min(this.columnCount, t)), (this.focusedRow >= this.rowCount || this.getIndex() >= this.emojiCount) && (this.focusedRow = this.rowCount - 1, this.focusedColumn = this.emojiCount % this.columnCount - 1), this.events.emit(\"focus:change\", { from: i, to: this.getIndex(), performFocus: o });\n  }\n  setFocusedIndex(e, t = !0) {\n    const o = Math.floor(e / this.columnCount), i = e % this.columnCount;\n    this.setCell(o, i, t);\n  }\n  focusNext() {\n    this.focusedColumn < this.columnCount - 1 && this.getIndex() < this.emojiCount - 1 ? this.setCell(this.focusedRow, this.focusedColumn + 1) : this.focusedRow < this.rowCount - 1 ? this.setCell(this.focusedRow + 1, 0) : this.wrap ? this.setCell(0, 0) : this.events.emit(\"focus:overflow\", 0);\n  }\n  focusPrevious() {\n    this.focusedColumn > 0 ? this.setCell(this.focusedRow, this.focusedColumn - 1) : this.focusedRow > 0 ? this.setCell(this.focusedRow - 1, this.columnCount - 1) : this.wrap ? this.setCell(this.rowCount - 1, this.columnCount - 1) : this.events.emit(\"focus:underflow\", this.columnCount - 1);\n  }\n  focusUp() {\n    this.focusedRow > 0 ? this.setCell(this.focusedRow - 1, this.focusedColumn) : this.events.emit(\"focus:underflow\", this.focusedColumn);\n  }\n  focusDown() {\n    this.focusedRow < this.rowCount - 1 ? this.setCell(this.focusedRow + 1, this.focusedColumn) : this.events.emit(\"focus:overflow\", this.focusedColumn);\n  }\n  focusToIndex(e) {\n    this.setCell(Math.floor(e / this.columnCount), e % this.columnCount);\n  }\n  getIndex() {\n    return this.focusedRow * this.columnCount + this.focusedColumn;\n  }\n  getCell() {\n    return { row: this.focusedRow, column: this.focusedColumn };\n  }\n  getRowCount() {\n    return this.rowCount;\n  }\n}\nconst Lt = new u(({ classes: s }) => `\n  <div class=\"${s.emojiContainer}\">\n    <div data-placeholder=\"emojis\"></div>\n  </div>\n`), Ft = g(\"emojiContainer\");\nclass F extends c {\n  constructor({ emojis: e, showVariants: t, preview: o = !0, lazyLoader: i, category: r, fullHeight: a = !1 }) {\n    super({ template: Lt, classes: Ft }), this.fullHeight = !1, this.showVariants = t, this.lazyLoader = i, this.preview = o, this.emojis = e, this.category = r, this.fullHeight = a, this.setFocus = this.setFocus.bind(this), this.triggerNextCategory = this.triggerNextCategory.bind(this), this.triggerPreviousCategory = this.triggerPreviousCategory.bind(this);\n  }\n  initialize() {\n    this.grid = new $t(this.options.emojisPerRow, this.emojiCount, 0, 0, !this.category), this.grid.on(\"focus:change\", this.setFocus), this.grid.on(\"focus:overflow\", this.triggerNextCategory), this.grid.on(\"focus:underflow\", this.triggerPreviousCategory), this.uiEvents = [\n      c.uiEvent(\"click\", this.selectEmoji),\n      c.uiEvent(\"keydown\", this.grid.handleKeyDown)\n    ], this.preview && this.uiEvents.push(\n      c.uiEvent(\"mouseover\", this.showPreview),\n      c.uiEvent(\"mouseout\", this.hidePreview),\n      c.uiEvent(\"focus\", this.showPreview, { capture: !0 }),\n      c.uiEvent(\"blur\", this.hidePreview, { capture: !0 })\n    ), super.initialize();\n  }\n  setFocusedView(e, t) {\n    if (!!e)\n      if (typeof e == \"string\") {\n        const o = this.emojis.findIndex((i) => i.emoji === e);\n        this.grid.setFocusedIndex(o, !1), setTimeout(() => {\n          var n, l, m, d;\n          const i = this.emojiViews[o].el;\n          i.scrollIntoView();\n          const r = (n = i.parentElement) == null ? void 0 : n.previousElementSibling, a = (m = (l = i.parentElement) == null ? void 0 : l.parentElement) == null ? void 0 : m.parentElement;\n          a.scrollTop -= (d = r == null ? void 0 : r.offsetHeight) != null ? d : 0;\n        });\n      } else\n        e.row === \"first\" || e.row === 0 ? this.grid.setCell(0, e.offset, t) : e.row === \"last\" && this.grid.setCell(this.grid.getRowCount() - 1, e.offset, t);\n  }\n  setActive(e, t, o) {\n    var i;\n    e ? this.setFocusedView(t, o) : (i = this.emojiViews[this.grid.getIndex()]) == null || i.deactivateFocus();\n  }\n  renderSync() {\n    return this.emojiViews = this.emojis.map(\n      (e) => this.viewFactory.create(Se, {\n        emoji: e,\n        category: this.category,\n        lazyLoader: this.lazyLoader,\n        renderer: this.renderer\n      })\n    ), this.emojiElements = this.emojiViews.map((e) => e.renderSync()), super.renderSync({\n      emojis: this.emojiElements,\n      i18n: this.i18n\n    });\n  }\n  destroy() {\n    super.destroy(), this.emojiViews.forEach((e) => e.destroy()), this.grid.destroy();\n  }\n  triggerPreviousCategory(e) {\n    this.events.emit(\"category:previous\", e);\n  }\n  triggerNextCategory(e) {\n    this.category && this.events.emit(\"category:next\", e);\n  }\n  setFocus({ from: e, to: t, performFocus: o }) {\n    var i, r;\n    (i = this.emojiViews[e]) == null || i.deactivateFocus(), (r = this.emojiViews[t]) == null || r.activateFocus(o);\n  }\n  selectEmoji(e) {\n    e.stopPropagation();\n    const t = U(e, this.emojis);\n    t && this.events.emit(\"emoji:select\", {\n      emoji: t,\n      showVariants: this.showVariants\n    });\n  }\n  showPreview(e) {\n    const o = e.target.closest(\"button\"), i = o == null ? void 0 : o.firstElementChild, r = U(e, this.emojis);\n    r && this.events.emit(\"preview:show\", r, i == null ? void 0 : i.cloneNode(!0));\n  }\n  hidePreview(e) {\n    U(e, this.emojis) && this.events.emit(\"preview:hide\");\n  }\n  get emojiCount() {\n    return this.emojis.length;\n  }\n}\nconst At = new u(({ classes: s, category: e, pickerId: t, icon: o, i18n: i }) => `\n  <section class=\"${s.emojiCategory}\" role=\"tabpanel\" aria-labelledby=\"${t}-category-${e.key}\">\n    <h3 data-category=\"${e.key}\" class=\"${s.categoryName}\">\n      <i data-icon=\"${o}\"></i>\n      ${i.get(`categories.${e.key}`, e.message || e.key)}\n    </h3>\n    <div data-view=\"emojis\" data-render=\"sync\"></div>\n  </section>\n`);\nclass It extends ne {\n  constructor({ category: e, showVariants: t, lazyLoader: o, emojiVersion: i }) {\n    super({ category: e, showVariants: t, lazyLoader: o, template: At }), this.showVariants = t, this.lazyLoader = o, this.emojiVersion = i;\n  }\n  initialize() {\n    this.uiElements = { ...this.baseUIElements }, super.initialize();\n  }\n  async render() {\n    await this.emojiDataPromise;\n    const e = await this.emojiData.getEmojis(this.category, this.emojiVersion);\n    return this.emojiContainer = this.viewFactory.create(F, {\n      emojis: e,\n      showVariants: this.showVariants,\n      lazyLoader: this.lazyLoader,\n      category: this.category.key\n    }), super.render({\n      category: this.category,\n      emojis: this.emojiContainer,\n      emojiCount: e.length,\n      icon: D[this.category.key]\n    });\n  }\n}\nclass Tt extends F {\n  constructor({ category: e, emojis: t, preview: o = !0, lazyLoader: i }) {\n    super({ category: e, emojis: t, showVariants: !1, preview: o, lazyLoader: i });\n  }\n  async addOrUpdate(e) {\n    const t = this.el.querySelector(`[data-emoji=\"${e.emoji}\"]`);\n    t && (this.el.removeChild(t), this.emojis = this.emojis.filter((i) => i !== e));\n    const o = this.viewFactory.create(Se, { emoji: e });\n    if (this.el.insertBefore(o.renderSync(), this.el.firstChild), this.emojis = [\n      e,\n      ...this.emojis.filter((i) => i !== e)\n    ], this.emojis.length > this.options.maxRecents) {\n      this.emojis = this.emojis.slice(0, this.options.maxRecents);\n      const i = this.el.childElementCount - this.options.maxRecents;\n      for (let r = 0; r < i; r++)\n        this.el.lastElementChild && this.el.removeChild(this.el.lastElementChild);\n    }\n  }\n}\nconst Rt = new u(({ emojiCount: s, classes: e, category: t, pickerId: o, icon: i, i18n: r }) => `\n  <section class=\"${e.emojiCategory}\" role=\"tabpanel\" aria-labelledby=\"${o}-category-${t.key}\">\n    <h3 data-category=\"${t.key}\" class=\"${e.categoryName}\">\n      <i data-icon=\"${i}\"></i>\n      ${r.get(`categories.${t.key}`, t.message || t.key)}\n    </h3>\n    <div data-empty=\"${s === 0}\" class=\"${e.recentEmojis}\">\n      <div data-view=\"emojis\" data-render=\"sync\"></div>\n    </div>\n    <div class=\"${e.noRecents}\">\n      ${r.get(\"recents.none\")}\n    </div>\n  </section>\n`, { mode: \"async\" });\nclass Vt extends ne {\n  constructor({ category: e, lazyLoader: t, provider: o }) {\n    super({ category: e, showVariants: !1, lazyLoader: t, template: Rt }), this.provider = o;\n  }\n  initialize() {\n    this.uiElements = {\n      ...this.baseUIElements,\n      recents: c.byClass(te.recentEmojis)\n    }, this.appEvents = {\n      \"recent:add\": this.addRecent\n    }, super.initialize();\n  }\n  async addRecent(e) {\n    await this.emojiContainer.addOrUpdate(e), this.ui.recents.dataset.empty = \"false\";\n  }\n  async render() {\n    var t;\n    const e = (t = this.provider) == null ? void 0 : t.getRecents(this.options.maxRecents);\n    return this.emojiContainer = this.viewFactory.create(Tt, {\n      emojis: e,\n      showVariants: !1,\n      lazyLoader: this.lazyLoader,\n      category: this.category.key\n    }), await super.render({\n      category: this.category,\n      emojis: this.emojiContainer,\n      emojiCount: e.length,\n      icon: D[this.category.key]\n    }), this.el;\n  }\n}\nconst Bt = new u(({ classes: s, category: e, pickerId: t, icon: o, i18n: i }) => `\n  <section class=\"${s.emojiCategory}\" role=\"tabpanel\" aria-labelledby=\"${t}-category-${e.key}\">\n    <h3 data-category=\"${e.key}\" class=\"${s.categoryName}\">\n      <i data-icon=\"${o}\"></i>\n      ${i.get(`categories.${e.key}`, e.message || e.key)}\n    </h3>\n    <div data-view=\"emojis\" data-render=\"sync\"></div>\n  </section>\n`);\nclass Mt extends ne {\n  constructor({ category: e, lazyLoader: t }) {\n    super({ template: Bt, showVariants: !1, lazyLoader: t, category: e });\n  }\n  initialize() {\n    this.uiElements = { ...this.baseUIElements }, super.initialize();\n  }\n  async render() {\n    return this.emojiContainer = this.viewFactory.create(F, {\n      emojis: this.customEmojis,\n      showVariants: this.showVariants,\n      lazyLoader: this.lazyLoader,\n      category: this.category.key\n    }), super.render({\n      category: this.category,\n      emojis: this.emojiContainer,\n      emojiCount: this.customEmojis.length,\n      icon: D[this.category.key]\n    });\n  }\n}\nclass Pe {\n  constructor() {\n    this.elements = /* @__PURE__ */ new Map();\n  }\n  lazyLoad(e, t) {\n    return this.elements.set(e, t), e;\n  }\n  observe(e) {\n    if (window.IntersectionObserver) {\n      const t = new IntersectionObserver(\n        (o) => {\n          o.filter((i) => i.intersectionRatio > 0).map((i) => i.target).forEach((i) => {\n            const r = this.elements.get(i);\n            r == null || r(), t.unobserve(i);\n          });\n        },\n        {\n          root: e\n        }\n      );\n      this.elements.forEach((o, i) => {\n        t.observe(i);\n      });\n    } else\n      this.elements.forEach((t) => {\n        t();\n      });\n  }\n}\nconst ue = g(\"emojiArea\"), Dt = new u(({ classes: s }) => `\n  <div class=\"${s.emojiArea}\">\n    <div data-placeholder=\"emojis\"></div>\n  </div>\n`, { mode: \"async\" }), Ht = {\n  recents: Vt,\n  custom: Mt\n};\nfunction Nt(s) {\n  return Ht[s.key] || It;\n}\nfunction Ot(s) {\n  return !s || s === \"button\" ? {\n    row: \"first\",\n    offset: 0\n  } : s;\n}\nclass Ut extends c {\n  constructor({ categoryTabs: e, categories: t, emojiVersion: o }) {\n    super({ template: Dt, classes: ue }), this.selectedCategory = 0, this.scrollListenerState = \"active\", this.lazyLoader = new Pe(), this.categoryTabs = e, this.categories = t, this.emojiVersion = o, this.handleScroll = Te(this.handleScroll.bind(this), 100);\n  }\n  initialize() {\n    this.appEvents = {\n      \"category:select\": this.handleCategorySelect,\n      \"category:previous\": this.focusPreviousCategory,\n      \"category:next\": this.focusNextCategory,\n      \"focus:change\": this.updateFocusedCategory\n    }, this.uiElements = { emojis: c.byClass(ue.emojiArea) }, this.uiEvents = [c.uiEvent(\"scroll\", this.handleScroll)], super.initialize();\n  }\n  get focusableEmoji() {\n    return this.el.querySelector('[tabindex=\"0\"]');\n  }\n  async render() {\n    this.emojiCategories = this.categories.map(this.createCategory, this);\n    const e = {};\n    return this.categories.forEach((t, o) => {\n      e[`emojis-${t.key}`] = this.emojiCategories[o];\n    }), await super.render({\n      emojis: await Promise.all(this.emojiCategories.map((t) => t.render()))\n    }), this.lazyLoader.observe(this.el), window.ResizeObserver && (this.observer = new ResizeObserver(() => {\n      const t = this.el.scrollHeight - this.scrollHeight;\n      this.el.scrollTop - this.scrollTop === 0 && t > 0 && (this.el.scrollTop += t), this.scrollHeight = this.el.scrollHeight, this.scrollTop = this.el.scrollTop;\n    }), this.emojiCategories.forEach((t) => {\n      this.observer.observe(t.el);\n    })), this.el;\n  }\n  destroy() {\n    super.destroy(), this.emojiCategories.forEach((e) => {\n      var t;\n      (t = this.observer) == null || t.unobserve(e.el), e.destroy();\n    });\n  }\n  handleCategorySelect(e, t) {\n    this.selectCategory(e, t);\n  }\n  createCategory(e) {\n    const t = Nt(e);\n    return this.viewFactory.create(t, {\n      category: e,\n      showVariants: !0,\n      lazyLoader: this.lazyLoader,\n      emojiVersion: this.emojiVersion,\n      provider: this.options.recentsProvider\n    });\n  }\n  determineInitialCategory() {\n    var e;\n    return this.options.initialCategory && this.categories.find((t) => t.key === this.options.initialCategory) ? this.options.initialCategory : (e = this.categories.find((t) => t.key !== \"recents\")) == null ? void 0 : e.key;\n  }\n  determineFocusTarget(e) {\n    const t = this.emojiCategories.find((o) => o.category.key === e);\n    return this.options.initialEmoji && (t == null ? void 0 : t.el.querySelector(`[data-emoji=\"${this.options.initialEmoji}\"]`)) ? this.options.initialEmoji : \"button\";\n  }\n  reset(e = !0) {\n    this.events.emit(\"preview:hide\");\n    const t = this.determineInitialCategory();\n    t && (this.selectCategory(t, {\n      focus: this.determineFocusTarget(t),\n      performFocus: e,\n      scroll: \"jump\"\n    }), this.selectedCategory = this.getCategoryIndex(t));\n  }\n  getCategoryIndex(e) {\n    return this.categories.findIndex((t) => t.key === e);\n  }\n  focusPreviousCategory(e) {\n    this.selectedCategory > 0 && this.focusCategory(this.selectedCategory - 1, { row: \"last\", offset: e != null ? e : this.options.emojisPerRow });\n  }\n  focusNextCategory(e) {\n    this.selectedCategory < this.categories.length - 1 && this.focusCategory(this.selectedCategory + 1, { row: \"first\", offset: e != null ? e : 0 });\n  }\n  focusCategory(e, t) {\n    this.selectCategory(e, {\n      focus: t,\n      performFocus: !0\n    });\n  }\n  async selectCategory(e, t = {}) {\n    var l;\n    this.scrollListenerState = \"suspend\";\n    const { focus: o, performFocus: i, scroll: r } = {\n      performFocus: !1,\n      ...t\n    };\n    this.emojiCategories[this.selectedCategory].setActive(!1);\n    const a = this.selectedCategory = typeof e == \"number\" ? e : this.getCategoryIndex(e);\n    (l = this.categoryTabs) == null || l.setActiveTab(this.selectedCategory, {\n      performFocus: i,\n      scroll: o === \"button\"\n    });\n    const n = this.emojiCategories[a].el.offsetTop;\n    this.emojiCategories[a].setActive(!0, Ot(o), o !== \"button\" && i), r && (this.el.scrollTop = n), this.scrollListenerState = \"resume\";\n  }\n  updateFocusedCategory(e) {\n    var t;\n    this.categories[this.selectedCategory].key !== e && (this.scrollListenerState = \"suspend\", this.selectedCategory = this.getCategoryIndex(e), (t = this.categoryTabs) == null || t.setActiveTab(this.selectedCategory, {\n      changeFocusable: !1,\n      performFocus: !1\n    }), this.scrollListenerState = \"resume\");\n  }\n  handleScroll() {\n    if (this.scrollListenerState === \"suspend\" || !this.categoryTabs)\n      return;\n    if (this.scrollListenerState === \"resume\") {\n      this.scrollListenerState = \"active\";\n      return;\n    }\n    const e = this.el.scrollTop, t = this.el.scrollHeight - this.el.offsetHeight, o = this.emojiCategories.findIndex((r, a) => {\n      var n;\n      return e < ((n = this.emojiCategories[a + 1]) == null ? void 0 : n.el.offsetTop);\n    }), i = {\n      changeFocusable: !1,\n      performFocus: !1,\n      scroll: !1\n    };\n    e === 0 ? this.categoryTabs.setActiveTab(0, i) : Math.floor(e) === Math.floor(t) || o < 0 ? this.categoryTabs.setActiveTab(this.categories.length - 1, i) : this.categoryTabs.setActiveTab(o, i);\n  }\n}\nconst Kt = new u(({ classList: s, classes: e, icon: t, message: o }) => `\n<div class=\"${s}\" role=\"alert\">\n  <div class=\"${e.iconContainer}\"><i data-size=\"10x\" data-icon=\"${t}\"></i></div>\n  <h3 class=\"${e.title}\">${o}</h3>\n</div>\n`), ge = g(\"error\", \"iconContainer\", \"title\");\nclass se extends c {\n  constructor({ message: e, icon: t = \"warning\", template: o = Kt, className: i }) {\n    super({ template: o, classes: ge }), this.message = e, this.icon = t, this.className = i;\n  }\n  renderSync() {\n    const e = [ge.error, this.className].join(\" \").trim();\n    return super.renderSync({ message: this.message, icon: this.icon, classList: e });\n  }\n}\nconst qt = new u(({ classList: s, classes: e, icon: t, i18n: o, message: i }) => `\n  <div class=\"${s}\" role=\"alert\">\n    <div class=\"${e.icon}\"><i data-size=\"10x\" data-icon=\"${t}\"></i></div>\n    <h3 class=\"${e.title}\">${i}</h3>\n    <button type=\"button\">${o.get(\"retry\")}</button>\n  </div>\n`), Gt = g(\"dataError\");\nclass Wt extends se {\n  constructor({ message: e }) {\n    super({ message: e, template: qt, className: Gt.dataError });\n  }\n  initialize() {\n    this.uiElements = { retryButton: \"button\" }, this.uiEvents = [c.childEvent(\"retryButton\", \"click\", this.onRetry)], super.initialize();\n  }\n  async onRetry() {\n    this.emojiData ? await this.emojiData.delete() : await this.options.dataStore.deleteDatabase(this.options.locale), this.events.emit(\"reinitialize\");\n    const e = await re(this.options.locale, this.options.dataStore, this.options.messages, this.options.emojiData, this.emojiData);\n    this.viewFactory.setEmojiData(e), this.events.emit(\"data:ready\", e);\n  }\n}\nconst C = g(\n  \"preview\",\n  \"previewEmoji\",\n  \"previewName\",\n  \"tagList\",\n  \"tag\"\n), _t = new u(({ classes: s, tag: e }) => `\n  <li class=\"${s.tag}\">${e}</li>\n`), Jt = new u(({ classes: s }) => `\n  <div class=\"${s.preview}\">\n    <div class=\"${s.previewEmoji}\"></div>\n    <div class=\"${s.previewName}\"></div>\n    <ul class=\"${s.tagList}\"></ul>\n  </div>\n`);\nclass Yt extends c {\n  constructor() {\n    super({ template: Jt, classes: C });\n  }\n  initialize() {\n    this.uiElements = {\n      emoji: c.byClass(C.previewEmoji),\n      name: c.byClass(C.previewName),\n      tagList: c.byClass(C.tagList)\n    }, this.appEvents = {\n      \"preview:show\": this.showPreview,\n      \"preview:hide\": this.hidePreview\n    }, super.initialize();\n  }\n  showPreview(e, t) {\n    if (this.ui.emoji.replaceChildren(t), this.ui.name.textContent = e.label, e.tags) {\n      this.ui.tagList.style.display = \"flex\";\n      const o = e.tags.map((i) => _t.renderSync({ tag: i, classes: C }));\n      this.ui.tagList.replaceChildren(...o);\n    }\n  }\n  hidePreview() {\n    this.ui.emoji.replaceChildren(), this.ui.name.textContent = \"\", this.ui.tagList.replaceChildren();\n  }\n}\nconst Qt = new u(({ classes: s, i18n: e }) => `\n  <button title=\"${e.get(\"search.clear\")}\" class=\"${s.clearSearchButton}\">\n    <i data-icon=\"xmark\"></i>\n  </button>\n`), Xt = new u(({ classes: s, i18n: e }) => `\n<div class=\"${s.searchContainer}\">\n  <input class=\"${s.searchField}\" placeholder=\"${e.get(\"search\")}\">\n  <span class=\"${s.searchAccessory}\"></span>\n</div>\n`, { mode: \"async\" }), j = g(\n  \"searchContainer\",\n  \"searchField\",\n  \"clearButton\",\n  \"searchAccessory\",\n  \"clearSearchButton\",\n  \"notFound\"\n);\nclass Zt extends c {\n  constructor({ categories: e, emojiVersion: t }) {\n    super({ template: Xt, classes: j }), this.categories = e.filter((o) => o.key !== \"recents\"), this.emojiVersion = t, this.search = Re(this.search.bind(this), 100);\n  }\n  initialize() {\n    this.uiElements = {\n      searchField: c.byClass(j.searchField),\n      searchAccessory: c.byClass(j.searchAccessory)\n    }, this.uiEvents = [\n      c.childEvent(\"searchField\", \"keydown\", this.onKeyDown),\n      c.childEvent(\"searchField\", \"input\", this.onSearchInput)\n    ], super.initialize();\n  }\n  async render() {\n    return await super.render(), this.searchIcon = je(\"search\"), this.notFoundMessage = this.viewFactory.create(se, {\n      message: this.i18n.get(\"search.notFound\"),\n      className: j.notFound,\n      icon: \"sad\"\n    }), this.notFoundMessage.renderSync(), this.errorMessage = this.viewFactory.create(se, { message: this.i18n.get(\"search.error\") }), this.errorMessage.renderSync(), this.clearSearchButton = Qt.render({\n      classes: j,\n      i18n: this.i18n\n    }), this.clearSearchButton.addEventListener(\"click\", (e) => this.onClearSearch(e)), this.searchField = this.ui.searchField, this.showSearchIcon(), this.el;\n  }\n  showSearchIcon() {\n    this.showSearchAccessory(this.searchIcon);\n  }\n  showClearSearchButton() {\n    this.showSearchAccessory(this.clearSearchButton);\n  }\n  showSearchAccessory(e) {\n    this.ui.searchAccessory.replaceChildren(e);\n  }\n  clear() {\n    this.searchField.value = \"\", this.showSearchIcon();\n  }\n  focus() {\n    this.searchField.focus();\n  }\n  onClearSearch(e) {\n    var t;\n    e.stopPropagation(), this.searchField.value = \"\", (t = this.resultsContainer) == null || t.destroy(), this.resultsContainer = null, this.showSearchIcon(), this.events.emit(\"content:show\"), this.searchField.focus();\n  }\n  handleResultsKeydown(e) {\n    this.resultsContainer && e.key === \"Escape\" && this.onClearSearch(e);\n  }\n  onKeyDown(e) {\n    var t;\n    e.key === \"Escape\" && this.searchField.value ? this.onClearSearch(e) : (e.key === \"Enter\" || e.key === \"ArrowDown\") && this.resultsContainer && (e.preventDefault(), (t = this.resultsContainer.el.querySelector('[tabindex=\"0\"]')) == null || t.focus());\n  }\n  onSearchInput(e) {\n    this.searchField.value ? (this.showClearSearchButton(), this.search()) : this.onClearSearch(e);\n  }\n  async search() {\n    var e;\n    if (!!this.searchField.value)\n      try {\n        const t = await this.emojiData.searchEmojis(\n          this.searchField.value,\n          this.customEmojis,\n          this.emojiVersion,\n          this.categories\n        );\n        if (this.events.emit(\"preview:hide\"), t.length) {\n          const o = new Pe();\n          this.resultsContainer = this.viewFactory.create(F, {\n            emojis: t,\n            fullHeight: !0,\n            showVariants: !0,\n            lazyLoader: o\n          }), this.resultsContainer.renderSync(), (e = this.resultsContainer) != null && e.el && (o.observe(this.resultsContainer.el), this.resultsContainer.setActive(!0, { row: 0, offset: 0 }, !1), this.resultsContainer.el.addEventListener(\"keydown\", (i) => this.handleResultsKeydown(i)), this.events.emit(\"content:show\", this.resultsContainer));\n        } else\n          this.events.emit(\"content:show\", this.notFoundMessage);\n      } catch {\n        this.events.emit(\"content:show\", this.errorMessage);\n      }\n  }\n}\nconst es = new u(({ classes: s }) => `\n  <div class=\"${s.variantOverlay}\">\n    <div class=\"${s.variantPopup}\">\n      <div data-view=\"emojis\" data-render=\"sync\"></div>\n    </div>\n  </div>\n`), pe = g(\n  \"variantOverlay\",\n  \"variantPopup\"\n), q = {\n  easing: \"ease-in-out\",\n  duration: 250,\n  fill: \"both\"\n}, ye = {\n  opacity: [0, 1]\n}, fe = {\n  opacity: [0, 1],\n  transform: [\"scale3d(0.8, 0.8, 0.8)\", \"scale3d(1, 1, 1)\"]\n};\nclass ts extends c {\n  constructor({ emoji: e, parent: t }) {\n    super({ template: es, classes: pe, parent: t }), this.focusedEmojiIndex = 0, this.focusTrap = new Ue(), this.animateShow = () => Promise.all([\n      I(this.el, ye, q, this.options),\n      I(this.ui.popup, fe, q, this.options)\n    ]), this.emoji = e;\n  }\n  initialize() {\n    this.uiElements = {\n      popup: c.byClass(pe.variantPopup)\n    }, this.uiEvents = [\n      c.uiEvent(\"click\", this.handleClick),\n      c.uiEvent(\"keydown\", this.handleKeydown)\n    ], super.initialize();\n  }\n  animateHide() {\n    const e = { ...q, direction: \"reverse\" };\n    return Promise.all([\n      I(this.el, ye, e, this.options),\n      I(this.ui.popup, fe, e, this.options)\n    ]);\n  }\n  async hide() {\n    await this.animateHide(), this.events.emit(\"variantPopup:hide\");\n  }\n  handleKeydown(e) {\n    e.key === \"Escape\" && (this.hide(), e.stopPropagation());\n  }\n  handleClick(e) {\n    this.ui.popup.contains(e.target) || this.hide();\n  }\n  getEmoji(e) {\n    return this.renderedEmojis[e];\n  }\n  setFocusedEmoji(e) {\n    const t = this.getEmoji(this.focusedEmojiIndex);\n    t.tabIndex = -1, this.focusedEmojiIndex = e;\n    const o = this.getEmoji(this.focusedEmojiIndex);\n    o.tabIndex = 0, o.focus();\n  }\n  destroy() {\n    this.emojiContainer.destroy(), this.focusTrap.deactivate(), super.destroy();\n  }\n  renderSync() {\n    const e = {\n      ...this.emoji,\n      skins: null\n    }, t = (this.emoji.skins || []).map((i) => ({\n      ...i,\n      label: this.emoji.label,\n      tags: this.emoji.tags\n    })), o = [e, ...t];\n    return this.emojiContainer = this.viewFactory.create(F, {\n      emojis: o,\n      preview: !1\n    }), super.renderSync({ emojis: this.emojiContainer }), o.length < this.options.emojisPerRow && this.el.style.setProperty(\"--emojis-per-row\", o.length.toString()), this.el;\n  }\n  activate() {\n    this.emojiContainer.setActive(!0, { row: 0, offset: 0 }, !0), this.focusTrap.activate(this.el);\n  }\n}\nconst ss = new u(({ classes: s, i18n: e, category: t, pickerId: o, icon: i }) => `\n<li class=\"${s.categoryTab}\">\n  <button\n    aria-selected=\"false\"\n    role=\"tab\"\n    class=\"${s.categoryButton}\"\n    tabindex=\"-1\"\n    title=\"${e.get(`categories.${t.key}`, t.message || t.key)}\"\n    type=\"button\"\n    data-category=\"${t.key}\"\n    id=\"${o}-category-${t.key}\"\n  >\n    <i data-icon=\"${i}\"></i>\n</li>\n`), G = g(\n  \"categoryTab\",\n  \"categoryTabActive\",\n  \"categoryButton\"\n);\nclass os extends c {\n  constructor({ category: e, icon: t }) {\n    super({ template: ss, classes: G }), this.isActive = !1, this.category = e, this.icon = t;\n  }\n  initialize() {\n    this.uiElements = {\n      button: c.byClass(G.categoryButton)\n    }, this.uiEvents = [\n      c.childEvent(\"button\", \"click\", this.selectCategory),\n      c.childEvent(\"button\", \"focus\", this.selectCategory)\n    ], super.initialize();\n  }\n  renderSync() {\n    return super.renderSync({\n      category: this.category,\n      icon: this.icon\n    }), this.ui.button.ariaSelected = \"false\", this.el;\n  }\n  setActive(e, t = {}) {\n    const { changeFocusable: o, performFocus: i, scroll: r } = {\n      changeFocusable: !0,\n      performFocus: !0,\n      scroll: !0,\n      ...t\n    };\n    this.el.classList.toggle(G.categoryTabActive, e), o && (this.ui.button.tabIndex = e ? 0 : -1, this.ui.button.ariaSelected = e.toString()), e && i && (this.ui.button.focus(), r && this.events.emit(\"category:select\", this.category.key, { scroll: \"animate\", focus: \"button\", performFocus: !1 })), this.isActive = e;\n  }\n  selectCategory() {\n    this.isActive || this.events.emit(\"category:select\", this.category.key, { scroll: \"animate\", focus: \"button\", performFocus: !0 });\n  }\n}\nconst is = new u(({ classes: s }) => `\n  <div class=\"${s.categoryButtonsContainer}\">\n    <ul role=\"tablist\" class=\"${s.categoryButtons}\">\n      <div data-placeholder=\"tabs\"></div>\n    </ul>\n  </div>\n`), rs = g(\"categoryButtons\", \"categoryButtonsContainer\");\nclass as extends c {\n  constructor({ categories: e }) {\n    super({ template: is, classes: rs }), this.activeCategoryIndex = 0, this.categories = e;\n  }\n  initialize() {\n    this.keyBindings = {\n      ArrowLeft: this.stepSelectedTab(-1),\n      ArrowRight: this.stepSelectedTab(1)\n    }, this.uiEvents = [\n      c.uiEvent(\"scroll\", this.checkOverflow)\n    ], super.initialize();\n  }\n  checkOverflow() {\n    const e = Math.abs(this.el.scrollLeft - (this.el.scrollWidth - this.el.offsetWidth)) > 1, t = this.el.scrollLeft > 0;\n    this.el.className = \"categoryButtonsContainer\", t && e ? this.el.classList.add(\"has-overflow-both\") : t ? this.el.classList.add(\"has-overflow-left\") : e && this.el.classList.add(\"has-overflow-right\");\n  }\n  renderSync() {\n    return this.tabViews = this.categories.map((e) => this.viewFactory.create(os, { category: e, icon: D[e.key] })), super.renderSync({\n      tabs: this.tabViews.map((e) => e.renderSync())\n    }), this.el;\n  }\n  get currentCategory() {\n    return this.categories[this.activeCategoryIndex];\n  }\n  get currentTabView() {\n    return this.tabViews[this.activeCategoryIndex];\n  }\n  setActiveTab(e, t = {}) {\n    this.checkOverflow();\n    const o = this.currentTabView, i = this.tabViews[e];\n    o.setActive(!1, t), i.setActive(!0, t), this.activeCategoryIndex = e;\n  }\n  getTargetCategory(e) {\n    return e < 0 ? this.categories.length - 1 : e >= this.categories.length ? 0 : e;\n  }\n  stepSelectedTab(e) {\n    return () => {\n      const t = this.activeCategoryIndex + e;\n      this.setActiveTab(this.getTargetCategory(t), {\n        changeFocusable: !0,\n        performFocus: !0\n      });\n    };\n  }\n}\nconst ns = [\n  { version: 15, emoji: String.fromCodePoint(129768) },\n  { version: 14, emoji: String.fromCodePoint(128733) },\n  { version: 13, emoji: String.fromCodePoint(129729) },\n  { version: 12, emoji: String.fromCodePoint(129449) },\n  { version: 11, emoji: String.fromCodePoint(129463) },\n  { version: 5, emoji: String.fromCodePoint(129322) },\n  { version: 4, emoji: String.fromCodePoint(9877) },\n  { version: 3, emoji: String.fromCodePoint(129314) },\n  { version: 2, emoji: String.fromCodePoint(128488) },\n  { version: 1, emoji: String.fromCodePoint(128512) }\n];\nfunction cs() {\n  var e;\n  const s = ns.find((t) => ls(t.emoji));\n  return (e = s == null ? void 0 : s.version) != null ? e : 1;\n}\nfunction ls(s) {\n  const e = document.createElement(\"canvas\").getContext(\"2d\");\n  if (e)\n    return e.textBaseline = \"top\", e.font = \"32px Arial\", e.fillText(s, 0, 0), e.getImageData(16, 16, 1, 1).data[0] !== 0;\n}\nfunction W(s, e) {\n  return Array.from({ length: s }, () => e).join(\"\");\n}\nfunction hs({ showHeader: s, classes: e }) {\n  return s ? `\n    <header class=\"${e.header}\">\n      <div data-view=\"search\"></div>\n      <div data-view=\"categoryTabs\" data-render=\"sync\"></div>\n    </header>\n  ` : \"\";\n}\nfunction ds(s) {\n  const { classes: e, theme: t, className: o = \"\" } = s;\n  return `\n    <div class=\"picmo-picker ${e.picker} ${t} ${o}\">\n      ${hs(s)}\n      <div class=\"${e.content}\">\n        <div data-view=\"emojiArea\"></div>\n      </div>\n      <div data-view=\"preview\"></div>\n    </div>\n  `;\n}\nfunction ms(s) {\n  const { emojiCount: e, classes: t, theme: o, className: i, categoryCount: r } = s, a = ({ showSearch: d, classes: h }) => d ? `\n    <div class=\"${h.searchSkeleton}\">\n      <div class=\"${h.searchInput} ${h.placeholder}\"></div>\n    </div>\n  ` : \"\", n = ({ showCategoryTabs: d, classes: h }) => d ? `\n    <div class=\"${h.categoryTabsSkeleton}\">\n      ${W(r, `<div class=\"${h.placeholder} ${h.categoryTab}\"></div>`)}\n    </div>\n  ` : \"\", l = ({ showHeader: d, classes: h }) => d ? `\n    <header class=\"${h.headerSkeleton}\">\n      ${a(s)}\n      ${n(s)}\n    </header>\n  ` : \"\", m = ({ showPreview: d, classes: h }) => d ? `\n    <div class=\"${h.previewSkeleton}\">\n      <div class=\"${h.placeholder} ${h.previewEmoji}\"></div>\n      <div class=\"${h.placeholder} ${h.previewName}\"></div>\n      <ul class=\"${h.tagList}\">\n        ${W(3, `<li class=\"${h.placeholder} ${h.tag}\"></li>`)}\n      </ul>\n    </div>\n  ` : \"\";\n  return `\n    <div class=\"picmo-picker ${t.skeleton} ${t.picker} ${o} ${i}\">\n      ${l(s)}\n      <div class=\"${t.contentSkeleton}\">\n        <div class=\"${t.placeholder} ${t.categoryName}\"></div>\n        <div class=\"${t.emojiGrid}\">\n          ${W(e, `<div class=\"${t.placeholder} ${t.emoji}\"></div>`)}\n        </div>\n      </div>\n      ${m(s)}\n    </div>\n  `;\n}\nconst us = new u((s) => s.isLoaded ? ds(s) : ms(s)), T = g(\n  \"picker\",\n  \"skeleton\",\n  \"placeholder\",\n  \"searchSkeleton\",\n  \"searchInput\",\n  \"categoryTabsSkeleton\",\n  \"headerSkeleton\",\n  \"categoryTab\",\n  \"contentSkeleton\",\n  \"categoryName\",\n  \"emojiGrid\",\n  \"emoji\",\n  \"previewSkeleton\",\n  \"previewEmoji\",\n  \"previewName\",\n  \"tagList\",\n  \"tag\",\n  \"overlay\",\n  \"content\",\n  \"fullHeight\",\n  \"pluginContainer\",\n  \"header\"\n), R = {\n  emojisPerRow: \"--emojis-per-row\",\n  visibleRows: \"--row-count\",\n  emojiSize: \"--emoji-size\"\n};\nclass gs extends c {\n  constructor() {\n    super({ template: us, classes: T }), this.pickerReady = !1, this.externalEvents = new St(), this.updaters = {\n      styleProperty: (e) => (t) => this.el.style.setProperty(R[e], t.toString()),\n      theme: (e) => {\n        this.el.classList.remove(this.options.theme), this.el.classList.add(e);\n      },\n      className: (e) => {\n        this.options.className && this.el.classList.remove(this.options.className), this.el.classList.add(e);\n      },\n      emojisPerRow: this.updateStyleProperty.bind(this, \"emojisPerRow\"),\n      emojiSize: this.updateStyleProperty.bind(this, \"emojiSize\"),\n      visibleRows: this.updateStyleProperty.bind(this, \"visibleRows\")\n    };\n  }\n  initialize() {\n    this.uiElements = {\n      pickerContent: c.byClass(T.content),\n      header: c.byClass(T.header)\n    }, this.uiEvents = [\n      c.uiEvent(\"keydown\", this.handleKeyDown)\n    ], this.appEvents = {\n      error: this.onError,\n      reinitialize: this.reinitialize,\n      \"data:ready\": this.onDataReady,\n      \"content:show\": this.showContent,\n      \"variantPopup:hide\": this.hideVariantPopup,\n      \"emoji:select\": this.selectEmoji\n    }, super.initialize(), this.options.recentsProvider;\n  }\n  destroy() {\n    var e, t;\n    super.destroy(), (e = this.search) == null || e.destroy(), this.emojiArea.destroy(), (t = this.categoryTabs) == null || t.destroy(), this.events.removeAll(), this.externalEvents.removeAll();\n  }\n  clearRecents() {\n    this.options.recentsProvider.clear();\n  }\n  addEventListener(e, t) {\n    this.externalEvents.on(e, t);\n  }\n  removeEventListener(e, t) {\n    this.externalEvents.off(e, t);\n  }\n  initializePickerView() {\n    this.pickerReady && (this.showContent(), this.emojiArea.reset(!1));\n  }\n  handleKeyDown(e) {\n    const t = e.ctrlKey || e.metaKey;\n    e.key === \"s\" && t && this.search && (e.preventDefault(), this.search.focus());\n  }\n  buildChildViews() {\n    return this.options.showPreview && (this.preview = this.viewFactory.create(Yt)), this.options.showSearch && (this.search = this.viewFactory.create(Zt, {\n      categories: this.categories,\n      emojiVersion: this.emojiVersion\n    })), this.options.showCategoryTabs && (this.categoryTabs = this.viewFactory.create(as, {\n      categories: this.categories\n    })), this.currentView = this.emojiArea = this.viewFactory.create(Ut, {\n      categoryTabs: this.categoryTabs,\n      categories: this.categories,\n      emojiVersion: this.emojiVersion\n    }), [this.preview, this.search, this.emojiArea, this.categoryTabs];\n  }\n  setStyleProperties() {\n    this.options.showSearch || this.el.style.setProperty(\"--search-height-full\", \"0px\"), this.options.showCategoryTabs || (this.el.style.setProperty(\"--category-tabs-height\", \"0px\"), this.el.style.setProperty(\"--category-tabs-offset\", \"0px\")), this.options.showPreview || this.el.style.setProperty(\"--emoji-preview-height-full\", \"0px\"), Object.keys(R).forEach((e) => {\n      this.options[e] && this.el.style.setProperty(R[e], this.options[e].toString());\n    });\n  }\n  updateStyleProperty(e, t) {\n    this.el.style.setProperty(R[e], t.toString());\n  }\n  reinitialize() {\n    this.renderSync();\n  }\n  onError(e) {\n    const t = this.viewFactory.create(Wt, { message: this.i18n.get(\"error.load\") }), o = this.el.offsetHeight || 375;\n    throw this.el.style.height = `${o}px`, this.el.replaceChildren(t.renderSync()), e;\n  }\n  async onDataReady(e) {\n    const t = this.el;\n    try {\n      e ? this.emojiData = e : await this.emojiDataPromise, this.options.emojiVersion === \"auto\" ? this.emojiVersion = cs() || parseFloat($e) : this.emojiVersion = this.options.emojiVersion, this.categories = await this.emojiData.getCategories(this.options);\n      const [o, i, r, a] = this.buildChildViews();\n      await super.render({\n        isLoaded: !0,\n        search: i,\n        categoryTabs: a,\n        emojiArea: r,\n        preview: o,\n        showHeader: Boolean(this.search || this.categoryTabs),\n        theme: this.options.theme,\n        className: this.options.className\n      }), this.el.style.setProperty(\"--category-count\", this.categories.length.toString()), this.pickerReady = !0, t.replaceWith(this.el), this.setStyleProperties(), this.initializePickerView(), this.setInitialFocus(), this.externalEvents.emit(\"data:ready\");\n    } catch (o) {\n      this.events.emit(\"error\", o);\n    }\n  }\n  renderSync() {\n    var t;\n    let e = ((t = this.options.categories) == null ? void 0 : t.length) || 10;\n    if (this.options.showRecents && (e += 1), super.renderSync({\n      isLoaded: !1,\n      theme: this.options.theme,\n      showSearch: this.options.showSearch,\n      showPreview: this.options.showPreview,\n      showCategoryTabs: this.options.showCategoryTabs,\n      showHeader: this.options.showSearch || this.options.showCategoryTabs,\n      emojiCount: this.options.emojisPerRow * this.options.visibleRows,\n      categoryCount: e\n    }), this.el.style.setProperty(\"--category-count\", e.toString()), !this.options.rootElement)\n      throw new Error(\"Picker must be given a root element via the rootElement option\");\n    return this.options.rootElement.replaceChildren(this.el), this.setStyleProperties(), this.pickerReady && this.initializePickerView(), this.el;\n  }\n  getInitialFocusTarget() {\n    if (typeof this.options.autoFocus < \"u\")\n      switch (this.options.autoFocus) {\n        case \"emojis\":\n          return this.emojiArea.focusableEmoji;\n        case \"search\":\n          return this.search;\n        case \"auto\":\n          return this.search || this.emojiArea.focusableEmoji;\n        default:\n          return null;\n      }\n    if (this.options.autoFocusSearch === !0)\n      return console.warn(\"options.autoFocusSearch is deprecated, please use options.focusTarget instead\"), this.search;\n  }\n  setInitialFocus() {\n    var e;\n    !this.pickerReady || (e = this.getInitialFocusTarget()) == null || e.focus();\n  }\n  reset(e = !0) {\n    var t;\n    this.pickerReady && (this.emojiArea.reset(e), this.showContent(this.emojiArea)), (t = this.search) == null || t.clear(), this.hideVariantPopup();\n  }\n  showContent(e = this.emojiArea) {\n    var t, o;\n    e !== this.currentView && (this.currentView !== this.emojiArea && ((t = this.currentView) == null || t.destroy()), this.ui.pickerContent.classList.toggle(T.fullHeight, e !== this.emojiArea), this.ui.pickerContent.replaceChildren(e.el), this.currentView = e, e === this.emojiArea ? (this.emojiArea.reset(), this.categoryTabs && this.ui.header.appendChild(this.categoryTabs.el)) : (o = this.categoryTabs) == null || o.el.remove());\n  }\n  hideVariantPopup() {\n    var e;\n    (e = this.variantPopup) == null || e.destroy();\n  }\n  isPickerClick(e) {\n    var r, a;\n    const t = e.target, o = this.el.contains(t), i = (a = (r = this.variantPopup) == null ? void 0 : r.el) == null ? void 0 : a.contains(t);\n    return o || i;\n  }\n  async selectEmoji({ emoji: e }) {\n    var t, o;\n    ((t = e.skins) == null ? void 0 : t.length) && this.options.showVariants && !this.isVariantPopupOpen ? this.showVariantPopup(e) : (await ((o = this.variantPopup) == null ? void 0 : o.animateHide()), this.events.emit(\"variantPopup:hide\"), await this.emitEmoji(e));\n  }\n  get isVariantPopupOpen() {\n    return this.variantPopup && !this.variantPopup.isDestroyed;\n  }\n  async showVariantPopup(e) {\n    const t = document.activeElement;\n    this.events.once(\"variantPopup:hide\", () => {\n      t == null || t.focus();\n    }), this.variantPopup = this.viewFactory.create(ts, { emoji: e, parent: this.el }), this.el.appendChild(this.variantPopup.renderSync()), this.variantPopup.activate();\n  }\n  async emitEmoji(e) {\n    this.externalEvents.emit(\"emoji:select\", await this.renderer.doEmit(e)), this.options.recentsProvider.addOrUpdateRecent(e, this.options.maxRecents), this.events.emit(\"recent:add\", e);\n  }\n  updateOptions(e) {\n    Object.keys(e).forEach((t) => {\n      this.updaters[t](e[t]);\n    }), Object.assign(this.options, e);\n  }\n}\nclass ps {\n  constructor({ events: e, i18n: t, renderer: o, emojiData: i, options: r, customEmojis: a = [], pickerId: n }) {\n    this.events = e, this.i18n = t, this.renderer = o, this.emojiData = i, this.options = r, this.customEmojis = a, this.pickerId = n;\n  }\n  setEmojiData(e) {\n    this.emojiData = Promise.resolve(e);\n  }\n  create(e, ...t) {\n    const o = new e(...t);\n    return o.setPickerId(this.pickerId), o.setEvents(this.events), o.setI18n(this.i18n), o.setRenderer(this.renderer), o.setEmojiData(this.emojiData), o.setOptions(this.options), o.setCustomEmojis(this.customEmojis), o.viewFactory = this, o.initialize(), o;\n  }\n}\nvar L;\nclass ys {\n  constructor(e = {}) {\n    f(this, L, void 0);\n    A(this, L, new Map(Object.entries(e)));\n  }\n  get(e, t = e) {\n    return y(this, L).get(e) || t;\n  }\n}\nL = new WeakMap();\nfunction fs(s, e) {\n  e === void 0 && (e = {});\n  var t = e.insertAt;\n  if (!(!s || typeof document > \"u\")) {\n    var o = document.head || document.getElementsByTagName(\"head\")[0], i = document.createElement(\"style\");\n    i.type = \"text/css\", t === \"top\" && o.firstChild ? o.insertBefore(i, o.firstChild) : o.appendChild(i), i.styleSheet ? i.styleSheet.cssText = s : i.appendChild(document.createTextNode(s));\n  }\n}\nfunction vs() {\n  let s = !1;\n  return function(t) {\n    xt.injectStyles && !s && (fs(t), s = !0);\n  };\n}\nconst ws = `.picmo-picker .icon{width:1.25em;height:1em;fill:currentColor}.icon-small{font-size:.8em}.icon-medium{font-size:1em}.icon-large{font-size:1.25em}.icon-2x{font-size:2em}.icon-3x{font-size:3em}.icon-4x{font-size:4em}.icon-5x{font-size:5em}.icon-8x{font-size:8em}.icon-10x{font-size:10em}.light,.auto{color-scheme:light;--accent-color: #4f46e5;--background-color: #f9fafb;--border-color: #cccccc;--category-name-background-color: #f9fafb;--category-name-button-color: #999999;--category-name-text-color: hsl(214, 30%, 50%);--category-tab-active-background-color: rgba(255, 255, 255, .6);--category-tab-active-color: var(--accent-color);--category-tab-color: #666;--category-tab-highlight-background-color: rgba(0, 0, 0, .15);--error-color-dark: hsl(0, 100%, 45%);--error-color: hsl(0, 100%, 40%);--focus-indicator-background-color: hsl(198, 65%, 85%);--focus-indicator-color: #333333;--hover-background-color: #c7d2fe;--placeholder-background-color: #cccccc;--preview-background-color: var(--secondary-background-color);--scrollbar-background-color: var(--background-color);--scrollbar-color: #aaa;--search-background-color: #f9fafb;--search-focus-background-color: #ffffff;--search-icon-color: #999999;--search-placeholder-color: #71717a;--secondary-background-color: #e2e8f0;--secondary-text-color: #666666;--tag-background-color: rgba(162, 190, 245, .3);--text-color: #000000;--variant-popup-background-color: #ffffff}.dark{color-scheme:dark;--accent-color: #A580F9;--background-color: #333333;--border-color: #666666;--category-name-background-color: #333333;--category-name-button-color: #eeeeee;--category-name-text-color: #ffffff;--category-tab-active-background-color: #000000;--category-tab-active-color: var(--accent-color);--category-tab-color: #cccccc;--category-tab-highlight-background-color: #4A4A4A;--error-color-dark: hsl(0, 7%, 3%);--error-color: hsl(0, 30%, 60%);--focus-indicator-background-color: hsl(0, 0%, 50%);--focus-indicator-color: #999999;--hover-background-color: hsla(0, 0%, 40%, .85);--image-placeholder-color: #ffffff;--placeholder-background-color: #666666;--search-background-color: #71717a;--search-focus-background-color: #52525b;--search-icon-color: #cccccc;--search-placeholder-color: #d4d4d8;--secondary-background-color: #000000 ;--secondary-text-color: #999999;--tag-background-color: rgba(162, 190, 245, .3);--text-color: #ffffff;--variant-popup-background-color: #333333}@media (prefers-color-scheme: dark){.auto{color-scheme:dark;--accent-color: #A580F9;--background-color: #333333;--border-color: #666666;--category-name-background-color: #333333;--category-name-button-color: #eeeeee;--category-name-text-color: #ffffff;--category-tab-active-background-color: #000000;--category-tab-active-color: var(--accent-color);--category-tab-color: #cccccc;--category-tab-highlight-background-color: #4A4A4A;--error-color-dark: hsl(0, 7%, 3%);--error-color: hsl(0, 30%, 60%);--focus-indicator-background-color: hsl(0, 0%, 50%);--focus-indicator-color: #999999;--hover-background-color: hsla(0, 0%, 40%, .85);--image-placeholder-color: #ffffff;--placeholder-background-color: #666666;--search-background-color: #71717a;--search-focus-background-color: #52525b;--search-icon-color: #cccccc;--search-placeholder-color: #d4d4d8;--secondary-background-color: #000000 ;--secondary-text-color: #999999;--tag-background-color: rgba(162, 190, 245, .3);--text-color: #ffffff;--variant-popup-background-color: #333333}}.picmo-picker .categoryButtonsContainer{overflow:auto;padding:2px 0;scrollbar-width:thin}.picmo-picker .categoryButtonsContainer.has-overflow-right{mask-image:linear-gradient(270deg,rgba(255,255,255,0) 0%,rgba(255,255,255,1) 10%);-webkit-mask-image:linear-gradient(270deg,rgba(255,255,255,0) 0%,rgba(255,255,255,1) 10%)}.picmo-picker .categoryButtonsContainer.has-overflow-left{mask-image:linear-gradient(90deg,rgba(255,255,255,0) 0%,rgba(255,255,255,1) 10%);-webkit-mask-image:linear-gradient(90deg,rgba(255,255,255,0) 0%,rgba(255,255,255,1) 10%)}.picmo-picker .categoryButtonsContainer.has-overflow-both{mask-image:linear-gradient(90deg,rgba(255,255,255,0) 0%,rgba(255,255,255,1) 10%,rgba(255,255,255,1) 90%,rgba(255,255,255,0) 100%);-webkit-mask-image:linear-gradient(90deg,rgba(255,255,255,0) 0%,rgba(255,255,255,1) 10%,rgba(255,255,255,1) 90%,rgba(255,255,255,0) 100%)}.picmo-picker .categoryButtonsContainer::-webkit-scrollbar{width:8px;height:8px}.picmo-picker .categoryButtonsContainer::-webkit-scrollbar-thumb{background:var(--scrollbar-color);border-radius:1em}.picmo-picker .categoryButtons{display:flex;flex-direction:row;gap:var(--tab-gap);margin:0;padding:0 .5em;align-items:center;height:var(--category-tabs-height);box-sizing:border-box;width:100%;justify-content:space-between;position:relative;list-style-type:none;justify-self:center;max-width:min(23.55rem,calc(var(--category-count, 1) * 2.5rem))}.picmo-picker .categoryButtons .categoryTab{display:flex;align-items:center;transition:all .1s;width:2em}.picmo-picker .categoryButtons .categoryTab.categoryTabActive .categoryButton{color:var(--category-tab-active-color);background:linear-gradient(rgba(255,255,255,.75) 0%,rgba(255,255,255,.75) 100%),linear-gradient(var(--category-tab-active-color) 0%,var(--category-tab-active-color) 100%);border:2px solid var(--category-tab-active-color)}.picmo-picker .categoryButtons .categoryTab.categoryTabActive .categoryButton:hover{background-color:var(--category-tab-active-background-color)}.picmo-picker .categoryButtons .categoryTab button.categoryButton{border-radius:5px;background:transparent;border:2px solid transparent;color:var(--category-tab-color);cursor:pointer;padding:2px;vertical-align:middle;display:flex;align-items:center;justify-content:center;font-size:1.2rem;width:1.6em;height:1.6em;transition:all .1s}.picmo-picker .categoryButtons .categoryTab button.categoryButton:is(img){width:var(--category-tab-size);height:var(--category-tab-size)}.picmo-picker .categoryButtons .categoryTab button.categoryButton:hover{background:var(--category-tab-highlight-background-color)}.dataError [data-icon]{opacity:.8}@keyframes appear{0%{opacity:0}to{opacity:.8}}@keyframes appear-grow{0%{opacity:0;transform:scale(.8)}to{opacity:.8;transform:scale(1)}}.picmo-picker .error{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;color:var(--secondary-text-color)}.picmo-picker .error .iconContainer{opacity:.8;animation:appear-grow .25s cubic-bezier(.175,.885,.32,1.275);--color-primary: var(--error-color);--color-secondary: var(--error-color-dark)}.picmo-picker .error .title{animation:appear .25s;animation-delay:50ms;animation-fill-mode:both}.picmo-picker .error button{padding:8px 16px;cursor:pointer;background:var(--background-color);border:1px solid var(--text-color);border-radius:5px;color:var(--text-color)}.picmo-picker .error button:hover{background:var(--text-color);color:var(--background-color)}.emojiButton{background:transparent;border:none;border-radius:15px;cursor:pointer;display:flex;font-family:var(--emoji-font);font-size:var(--emoji-size);height:100%;justify-content:center;align-items:center;margin:0;overflow:hidden;padding:0;width:100%}.emojiButton:hover{background:var(--hover-background-color)}.emojiButton:focus{border-radius:0;background:var(--focus-indicator-background-color);outline:1px solid var(--focus-indicator-color)}.picmo-picker .emojiArea{height:var(--emoji-area-height);overflow-y:auto;position:relative;scrollbar-color:var(--scrollbar-color) var(--scrollbar-background-color);scrollbar-width:thin}.picmo-picker .emojiArea::-webkit-scrollbar{background:var(--scrollbar-background-color);width:1.1em}.picmo-picker .emojiArea::-webkit-scrollbar-thumb{background:var(--scrollbar-color);border-left:4px solid transparent;border-right:4px solid transparent;background-clip:padding-box;height:1em;border-radius:1em}.picmo-picker .emojiCategory{position:relative}.picmo-picker .emojiCategory .categoryName{font-size:.9em;padding:.5rem;margin:0;background:var(--category-name-background-color);color:var(--category-name-text-color);top:0;z-index:1;display:grid;gap:4px;grid-template-columns:auto 1fr auto;align-items:center;line-height:1;box-sizing:border-box;height:var(--category-name-height);justify-content:flex-start;text-transform:uppercase}.picmo-picker .emojiCategory .categoryName button{background:transparent;border:none;display:flex;align-items:center;cursor:pointer;color:var(--category-name-button-color)}.picmo-picker .emojiCategory .categoryName button:hover{opacity:1}.picmo-picker .emojiCategory .noRecents{color:var(--secondary-text-color);grid-column:1 / span var(--emojis-per-row);font-size:.9em;text-align:center;display:flex;align-items:center;justify-content:center;min-height:calc(var(--emoji-size) * var(--emoji-size-multiplier))}.picmo-picker .emojiCategory .recentEmojis[data-empty=true]{display:none}:is(.picmo-picker .emojiCategory) .recentEmojis[data-empty=false]+div{display:none}.picmo-picker .emojiContainer{display:grid;justify-content:space-between;gap:1px;padding:0 .5em;grid-template-columns:repeat(var(--emojis-per-row),calc(var(--emoji-size) * var(--emoji-size-multiplier)));grid-auto-rows:calc(var(--emoji-size) * var(--emoji-size-multiplier));align-items:center;justify-items:center}.picmo-picker.picker{--border-radius: 5px;--emoji-area-height: calc( (var(--row-count) * var(--emoji-size) * var(--emoji-size-multiplier)) + var(--category-name-height) );--content-height: var(--emoji-area-height);--emojis-per-row: 8;--row-count: 6;--emoji-preview-margin: 4px;--emoji-preview-height: calc(var(--emoji-preview-size) + 1em + 1px);--emoji-preview-height-full: calc(var(--emoji-preview-height) + var(--emoji-preview-margin));--emoji-preview-size: 2.75em;--emoji-size: 2rem;--emoji-size-multiplier: 1.3;--content-margin: 8px;--category-tabs-height:calc(1.5em + 9px);--category-tabs-offset: 8px;--category-tab-size: 1.2rem;--category-name-height: 2rem;--category-name-padding-y: 6px;--search-height: 2em;--search-margin: .5em;--search-margin-bottom: 4px;--search-height-full: calc(var(--search-height) + var(--search-margin) + var(--search-margin-bottom));--overlay-background-color: rgba(0, 0, 0, .8);--emoji-font: \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Segoe UI\", \"Apple Color Emoji\", \"Twemoji Mozilla\", \"Noto Color Emoji\", \"EmojiOne Color\", \"Android Emoji\";--ui-font: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", sans-serif;--ui-font-size: 16px;--picker-width: calc(var(--emojis-per-row) * var(--emoji-size) * var(--emoji-size-multiplier) + 2.75rem);background:var(--background-color);border-radius:var(--border-radius);border:1px solid var(--border-color);font-family:var(--ui-font);font-size:var(--ui-font-size);overflow:hidden;position:relative;width:var(--picker-width);display:grid;gap:8px}.picmo-picker.picker>*{font-family:var(--ui-font)}.picmo-picker.skeleton{background:var(--background-color);border-radius:var(--border-radius);border:1px solid var(--border-color);font-family:var(--ui-font);width:var(--picker-width);color:var(--secondary-text-color)}.picmo-picker.skeleton *{box-sizing:border-box}.picmo-picker.skeleton .placeholder{background:var(--placeholder-background-color);position:relative;overflow:hidden}.picmo-picker.skeleton .placeholder:after{position:absolute;top:0;right:0;bottom:0;left:0;transform:translate(-100%);background-image:linear-gradient(90deg,rgba(255,255,255,0) 0,rgba(255,255,255,.2) 20%,rgba(255,255,255,.5) 60%,rgba(255,255,255,0) 100%);animation:shine 2s infinite;content:\"\"}.picmo-picker.skeleton .headerSkeleton{background-color:var(--secondary-background-color);padding-top:8px;padding-bottom:8px;display:flex;flex-direction:column;overflow:hidden;gap:8px;border-bottom:1px solid var(--border-color);width:var(--picker-width)}.picmo-picker.skeleton .searchSkeleton{padding:0 8px;height:var(--search-height)}.picmo-picker.skeleton .searchSkeleton .searchInput{width:100%;height:28px;border-radius:3px}.picmo-picker.skeleton .categoryTabsSkeleton{height:var(--category-tabs-height);display:flex;flex-direction:row;align-items:center;justify-self:center;width:calc(2rem * var(--category-count, 1))}.picmo-picker.skeleton .categoryTabsSkeleton .categoryTab{width:25px;height:25px;padding:2px;border-radius:5px;margin:.25em}.picmo-picker.skeleton .contentSkeleton{height:var(--content-height);padding-right:8px;opacity:.7}.picmo-picker.skeleton .contentSkeleton .categoryName{width:50%;height:1rem;margin:.5rem;box-sizing:border-box}.picmo-picker.skeleton .contentSkeleton .emojiGrid{display:grid;justify-content:space-between;gap:1px;padding:0 .5em;grid-template-columns:repeat(var(--emojis-per-row),calc(var(--emoji-size) * var(--emoji-size-multiplier)));grid-auto-rows:calc(var(--emoji-size) * var(--emoji-size-multiplier));align-items:center;justify-items:center;width:var(--picker-width)}.picmo-picker.skeleton .contentSkeleton .emojiGrid .emoji{width:var(--emoji-size);height:var(--emoji-size);border-radius:50%}.picmo-picker.skeleton .previewSkeleton{height:var(--emoji-preview-height);border-top:1px solid var(--border-color);display:grid;align-items:center;padding:.5em;gap:6px;grid-template-columns:auto 1fr;grid-template-rows:auto 1fr;grid-template-areas:\"emoji name\" \"emoji tags\"}.picmo-picker.skeleton .previewSkeleton .previewEmoji{grid-area:emoji;border-radius:50%;width:var(--emoji-preview-size);height:var(--emoji-preview-size)}.picmo-picker.skeleton .previewSkeleton .previewName{grid-area:name;height:.8em;width:80%}.picmo-picker.skeleton .previewSkeleton .tagList{grid-area:tags;list-style-type:none;display:flex;flex-direction:row;padding:0;margin:0}.picmo-picker.skeleton .previewSkeleton .tagList .tag{border-radius:3px;padding:2px 8px;margin-right:.25em;height:1em;width:20%}.overlay{background:rgba(0,0,0,.75);height:100%;left:0;position:fixed;top:0;width:100%;z-index:1000}.content{position:relative;overflow:hidden;height:var(--content-height)}.content.fullHeight{height:calc(var(--content-height) + var(--category-tabs-height) + var(--category-tabs-offset));overflow-y:auto;scrollbar-color:var(--scrollbar-color) var(--scrollbar-background-color);scrollbar-width:thin}.content.fullHeight::-webkit-scrollbar{background:var(--scrollbar-background-color);width:1.1em}.content.fullHeight::-webkit-scrollbar-thumb{background:var(--scrollbar-color);background-clip:padding-box;height:1em;border-radius:.5em}.pluginContainer{margin:.5em;display:flex;flex-direction:row}.header{background-color:var(--secondary-background-color);padding-top:8px;padding-bottom:8px;display:grid;gap:8px;border-bottom:1px solid var(--border-color)}@media (prefers-reduced-motion: reduce){.placeholder{background:var(--placeholder-background-color);position:relative;overflow:hidden}.placeholder:after{display:none}}.picmo-picker .preview{border-top:1px solid var(--border-color);display:grid;align-items:center;gap:6px;grid-template-columns:auto 1fr;grid-template-rows:auto 1fr;grid-template-areas:\"emoji name\" \"emoji tags\";height:var(--emoji-preview-height);box-sizing:border-box;padding:.5em;position:relative;background:var(--preview-background-color)}.picmo-picker .preview .previewEmoji{grid-area:emoji;font-size:var(--emoji-preview-size);font-family:var(--emoji-font);width:1.25em;display:flex;align-items:center;justify-content:center}.picmo-picker .preview .previewName{grid-area:name;color:var(--text-color);font-size:.8em;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:500}.picmo-picker .preview .tagList{grid-area:tags;list-style-type:none;display:flex;flex-direction:row;padding:0;margin:0;font-size:.75em;overflow:hidden}.picmo-picker .preview .tag{border-radius:3px;background:var(--tag-background-color);color:var(--text-color);padding:2px 8px;margin-right:.25em;white-space:nowrap}.picmo-picker .preview .tag:last-child{margin-right:0}.picmo-picker .searchContainer{display:flex;height:var(--search-height);box-sizing:border-box;padding:0 8px;position:relative}.picmo-picker .searchContainer .searchField{background:var(--search-background-color);border-radius:3px;border:none;box-sizing:border-box;color:var(--text-color);font-size:.9em;outline:none;padding:.5em 2.25em .5em .5em;width:100%}.picmo-picker .searchContainer .searchField:focus{background:var(--search-focus-background-color)}.picmo-picker .searchContainer .searchField::placeholder{color:var(--search-placeholder-color)}.picmo-picker .searchContainer .searchAccessory{color:var(--search-icon-color);height:100%;position:absolute;right:1em;top:0;width:1.25rem;display:flex;align-items:center}.picmo-picker .searchContainer .searchAccessory svg{fill:var(--search-icon-color)}.picmo-picker .searchContainer .clearButton{border:0;color:var(--search-icon-color);background:transparent;cursor:pointer}.picmo-picker .searchContainer .clearSearchButton{cursor:pointer;border:none;background:transparent;color:var(--search-icon-color);font-size:1em;width:100%;height:100%;display:flex;align-items:center;padding:0}.picmo-picker .searchContainer .notFound [data-icon]{fill:#f3e265}.picmo-picker .variantOverlay{background:var(--overlay-background-color);border-radius:5px;display:flex;flex-direction:column;height:100%;justify-content:center;left:0;position:absolute;top:0;width:100%;z-index:1}.picmo-picker .variantOverlay .variantPopup{background:var(--variant-popup-background-color);border-radius:5px;margin:.5em;padding:.5em;text-align:center;user-select:none;display:flex;align-items:center;justify-content:center}.customEmoji{width:1em;height:1em}@keyframes shine{to{transform:translate(100%)}}.picmo-picker .imagePlaceholder{width:2rem;height:2rem;border-radius:50%}.placeholder{background:#DDDBDD;position:relative}.placeholder:after{position:absolute;top:0;right:0;bottom:0;left:0;transform:translate(-100%);background-image:linear-gradient(90deg,rgba(255,255,255,0) 0,rgba(255,255,255,.2) 20%,rgba(255,255,255,.5) 60%,rgba(255,255,255,0) 100%);animation:shine 2s infinite;content:\"\"}\n`;\nfunction bs(s) {\n  return re(s.locale, s.dataStore, s.messages, s.emojiData);\n}\nlet Cs = 0;\nfunction js() {\n  return `picmo-${Date.now()}-${Cs++}`;\n}\nconst ks = vs();\nfunction Ls(s) {\n  ks(ws);\n  const e = kt(s), t = ((e == null ? void 0 : e.custom) || []).map((l) => ({\n    ...l,\n    custom: !0,\n    tags: [\"custom\", ...l.tags || []]\n  })), o = new Et(), i = bs(e), r = new ys(e.i18n);\n  i.then((l) => {\n    o.emit(\"data:ready\", l);\n  }).catch((l) => {\n    o.emit(\"error\", l);\n  });\n  const n = new ps({\n    events: o,\n    i18n: r,\n    customEmojis: t,\n    renderer: e.renderer,\n    options: e,\n    emojiData: i,\n    pickerId: js()\n  }).create(gs);\n  return n.renderSync(), n;\n}\nconst _ = {};\nfunction xs(s) {\n  return _[s] || (_[s] = new Es(s)), _[s];\n}\nxs.deleteDatabase = (s) => {\n};\nclass Es extends ke {\n  open() {\n    return Promise.resolve();\n  }\n  delete() {\n    return Promise.resolve();\n  }\n  close() {\n  }\n  isPopulated() {\n    return Promise.resolve(!1);\n  }\n  getEmojiCount() {\n    return Promise.resolve(this.emojis.length);\n  }\n  getEtags() {\n    return Promise.resolve({ foo: \"bar\" });\n  }\n  getHash() {\n    return Promise.resolve(\"\");\n  }\n  populate(e) {\n    return this.categories = e.groups, this.emojis = e.emojis, Promise.resolve();\n  }\n  getCategories(e) {\n    var o;\n    let t = this.categories.filter((i) => i.key !== \"component\");\n    if (e.showRecents && t.unshift({ key: \"recents\", order: -1 }), (o = e.custom) != null && o.length && t.push({ key: \"custom\", order: 10 }), e.categories) {\n      const i = e.categories;\n      t = t.filter((r) => i.includes(r.key)), t.sort((r, a) => i.indexOf(r.key) - i.indexOf(a.key));\n    } else\n      t.sort((i, r) => i.order - r.order);\n    return Promise.resolve(t);\n  }\n  getEmojis(e, t) {\n    const o = this.emojis.filter((i) => i.group === e.order).filter((i) => i.version <= t).sort((i, r) => i.order != null && r.order != null ? i.order - r.order : 0).map(x);\n    return Promise.resolve(B(o, t));\n  }\n  searchEmojis(e, t, o, i) {\n    const r = this.emojis.filter((l) => M(l, e, i)).map(x), a = t.filter((l) => M(l, e, i)), n = [\n      ...B(r, o),\n      ...a\n    ];\n    return Promise.resolve(n);\n  }\n  setMeta(e) {\n    this.meta = e;\n  }\n}\nclass Fs extends Ee {\n  constructor() {\n    super(sessionStorage);\n  }\n}\nasync function As(s, e, t, o) {\n  (await re(s, e, t, o)).close();\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/picmo/dist/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/chat.js");
/******/ 	
/******/ })()
;