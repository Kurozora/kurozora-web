{
  "openapi": "3.0.0",
  "info":{
    "description":"This is the documentation for Kurozora API.",
    "version":"1",
    "title":"Kurozora API",
    "termsOfService":"http://swagger.io/terms/",
    "contact":{
      "email":"apiteam@swagger.io"
    },
    "license":{
      "name":"Apache 2.0",
      "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://kurozora.app/api/v1",
      "description": "Kurozora LIVE"
    },
    {
      "url": "http://localhost/kurozora-web/public/api/v1",
      "description": "Kurozora LOCAL"
    }
  ],
  "tags":[
    {
      "name":"users",
      "description":"Everything user related"
    },
    {
      "name":"sessions",
      "description":"Everything session related"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register a new user",
        "description": "This endpoint will create a new user based on the given details.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The new user's username",
                    "example": "Kurozora"
                  },
                  "password": {
                    "type": "string",
                    "description": "The new user's password"
                  },
                  "email": {
                    "type": "string",
                    "description": "The new user's email"
                  },
                  "profileImage": {
                    "type": "file",
                    "description": "The new user's avatar image"
                  }
                },
                "required": [
                  "username", "password", "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Request a password reset for a user",
        "description": "This endpoint will send an email to the user to reset their password.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The new user's email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/sessions": {
      "get": {
        "security": [
          {
            "kurozoraBearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Get a list of the user's sessions",
        "description": "This endpoint will retrieve a list of sessions for the user.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/library": {
      "get": {
        "security": [
          {
            "kurozoraBearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Get an overview of the user's Anime library",
        "description": "This endpoint will retrieve the list of Anime in a user's library.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["watching", "dropped", "planning", "completed", "on-hold"]
            },
            "required": true,
            "description": "The status to retrieve the library items for."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Create a new session (login)",
        "description": "This endpoint will create a new session for a user.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The user's username"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  },
                  "device": {
                    "type": "string",
                    "description": "The device name that was used to create the session",
                    "example": "Swagger API tester"
                  }
                },
                "required": [
                  "username", "password", "device"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions/{sessionID}": {
      "get": {
        "security": [
          {
            "kurozoraBearer": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "summary": "Gets the details of a session",
        "description": "This endpoint will retrieve the details of a session.",
        "parameters": [
          {
            "in": "path",
            "name": "sessionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the session to be retrieved."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions/{sessionID}/validate": {
      "post": {
        "security": [
          {"kurozoraBearer": []}
        ],
        "tags": [
          "sessions"
        ],
        "summary": "Checks if the session is valid",
        "description": "This endpoint will check if the given session details are valid.",
        "parameters": [
          {
            "in": "path",
            "name": "sessionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the session to be deleted."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions/{sessionID}/delete": {
      "post": {
        "security": [
          {
            "kurozoraBearer": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "summary": "Deletes a session",
        "description": "This endpoint will delete a session.",
        "parameters": [
          {
            "in": "path",
            "name": "sessionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the session to be deleted."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "kurozoraBearer": {
        "type": "apiKey",
        "scheme": "bearer",
        "in": "header",
        "name": "kuro-auth"
      }
    },
    "responses": {
      "JSONSuccess": {
        "description": "Successful Kurozora JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "success": true,
                "query_count": 1
              }
            }
          }
        }
      },
      "JSONError": {
        "description": "Error Kurozora JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "success": false,
                "error_message": "Lorem ipsum dolor sit amet",
                "query_count": 1
              }
            }
          }
        }
      }
    }
  },
  "externalDocs":{
    "description":"More information on the Kurozora API will follow soon...",
    "url":"#"
  }
}