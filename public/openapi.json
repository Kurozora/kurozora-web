{
  "openapi": "3.0.0",
  "info": {
    "description": "This is the documentation for Kurozora API.",
    "version": "1.0.8",
    "title": "Kurozora API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "kurozoraapp@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://kurozora.app/api/v1",
      "description": "Kurozora LIVE"
    },
    {
      "url": "http://kurozora-web.test/api/v1",
      "description": "Kurozora LOCAL"
    }
  ],
  "tags": [
    {
      "name": "explore",
      "description": "Everything explore page related"
    },
    {
      "name": "users",
      "description": "Everything user related"
    },
    {
      "name": "notifications",
      "description": "Everything user notification related"
    },
    {
      "name": "anime",
      "description": "Everything anime related"
    },
    {
      "name": "anime-seasons",
      "description": "Everything anime seasons related"
    },
    {
      "name": "anime-episodes",
      "description": "Everything anime episodes related"
    },
    {
      "name": "actors",
      "description": "Everything actor related"
    },
    {
      "name": "characters",
      "description": "Everything character related"
    },
    {
      "name": "genres",
      "description": "Everything genre related"
    },
    {
      "name": "forum-sections",
      "description": "Everything forum sections related"
    },
    {
      "name": "forum-threads",
      "description": "Everything forum threads related"
    },
    {
      "name": "forum-replies",
      "description": "Everything forum replies related"
    },
    {
      "name": "sessions",
      "description": "Everything session related"
    },
    {
      "name": "studios",
      "description": "Everything studio related"
    },
    {
      "name": "themes",
      "description": "Everything theme related"
    },
    {
      "name": "misc",
      "description": "All other endpoints"
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "tags": [
          "misc"
        ],
        "operationId": "getInfo",
        "summary": "API info.",
        "description": "Plain API JSON response.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/explore": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "explore"
        ],
        "operationId": "getExplore",
        "summary": "(optional authentication) Explore page.",
        "description": "This endpoint will retrieve the details to for the explore page.",
        "parameters": [
          {
            "in": "query",
            "name": "genre_id",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "ID of the genre to filter on."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "postUsers",
        "summary": "Register a new user",
        "description": "This endpoint will create a new user based on the given details.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The new user's username",
                    "example": "Kurozora"
                  },
                  "password": {
                    "type": "string",
                    "description": "The new user's password"
                  },
                  "email": {
                    "type": "string",
                    "description": "The new user's email"
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "binary",
                    "description": "The new user's avatar image"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/register-siwa": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "postRegisterSiwA",
        "summary": "Register a new user (sign in with Apple)",
        "description": "This endpoint will create a new user using Sign in with Apple.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The new user's email"
                  },
                  "siwa_id": {
                    "type": "string",
                    "description": "The new user's SIWA ID"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform that was used to create the session",
                    "example": "iOS"
                  },
                  "platform_version": {
                    "type": "string",
                    "description": "The platform version that was used to create the session",
                    "example": "13.4"
                  },
                  "device_vendor": {
                    "type": "string",
                    "description": "The device vendor that was used to create the session",
                    "example": "Apple"
                  },
                  "device_model": {
                    "type": "string",
                    "description": "The device model that was used to create the session",
                    "example": "iPhone 11 Pro Max"
                  }
                },
                "required": [
                  "email",
                  "siwa_id",
                  "platform",
                  "platform_version",
                  "device_vendor",
                  "device_model"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/login-siwa": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "postLoginSiwA",
        "summary": "Log a user in via SIWA (sign in with Apple)",
        "description": "This endpoint will log a user in using Sign in with Apple.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity_token": {
                    "type": "string",
                    "description": "The identity token (JWT) as provided by Apple"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform that was used to create the session",
                    "example": "iOS"
                  },
                  "platform_version": {
                    "type": "string",
                    "description": "The platform version that was used to create the session",
                    "example": "13.4"
                  },
                  "device_vendor": {
                    "type": "string",
                    "description": "The device vendor that was used to create the session",
                    "example": "Apple"
                  },
                  "device_model": {
                    "type": "string",
                    "description": "The device model that was used to create the session",
                    "example": "iPhone 11 Pro Max"
                  }
                },
                "required": [
                  "identity_token",
                  "platform",
                  "platform_version",
                  "device_vendor",
                  "device_model"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "postResetPassword",
        "summary": "Request a password reset for a user",
        "description": "This endpoint will send an email to the user to reset their password.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user to request a password reset."
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/sessions": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersSessions",
        "summary": "Get a list of the user's sessions",
        "description": "This endpoint will retrieve a list of sessions for the user.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/library": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersLibrary",
        "summary": "Get an overview of the user's Anime library",
        "description": "This endpoint will retrieve the list of Anime in a user's library.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/KurozoraLibraryStatus"
            },
            "required": true,
            "description": "The status to retrieve the library items for."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Available sorting options:\n- title(asc/desc)\n- age(newest/oldest)\n- rating(worst/best)\n- my-rating(worst/best)"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      },
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "postUsersLibrary",
        "summary": "Add an Anime to the user's Anime library",
        "description": "This endpoint will add to the list of Anime in a user's library.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "anime_id": {
                    "type": "integer",
                    "description": "The ID of the Anime to add."
                  },
                  "status": {
                    "type": "string",
                    "description": "The watch status to assign to the Anime.",
                    "example": "Watching"
                  }
                },
                "required": [
                  "anime_id",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/library/delete": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "postUsersLibraryDelete",
        "summary": "Remove an Anime from the user's Anime library",
        "description": "This endpoint will remove from the list of Anime in a user's library.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "anime_id": {
                    "type": "integer",
                    "description": "The ID of the Anime to remove."
                  }
                },
                "required": [
                  "anime_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/library/mal-import": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "postUsersLibraryMALImport",
        "summary": "Import a MAL export file into the user's library",
        "description": "This endpoint will import a MAL export file into the user's library.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The MAL export file"
                  },
                  "behavior": {
                    "$ref": "#/components/schemas/MALImportBehavior",
                    "description": "The behavior to use while processing the import request."
                  }
                },
                "required": [
                  "file",
                  "behavior"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/library/search": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersLibrarySearch",
        "summary": "Searches Anime in library.",
        "description": "This endpoint will retrieve the search results of Anime in the user's library.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The search query."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/favorite-anime": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersFavoriteAnime",
        "summary": "Get an overview of the user's favorite Anime",
        "description": "This endpoint will retrieve the list of Anime in the user's favorites list.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      },
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "postUsersFavoriteAnime",
        "summary": "Add or remove an Anime to the user's Anime favorites",
        "description": "This endpoint will add or remove to the list of Anime in a user's favorites.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "anime_id": {
                    "type": "integer",
                    "description": "The ID of the Anime to add."
                  },
                  "is_favorite": {
                    "type": "integer",
                    "description": "Whether to add or remove the anime.\n- 0 = remove\n- 1 = add",
                    "enum": [
                      0,
                      1
                    ]
                  }
                },
                "required": [
                  "anime_id",
                  "is_favorite"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/profile": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersProfile",
        "summary": "(optional authentication) User profile details.",
        "description": "This endpoint will retrieve the details of a user's profile.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      },
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "postUsersProfile",
        "summary": "Updates a user's profile information",
        "description": "This endpoint will update a user's profile information.\n<h3><strong>WARNING: You should only send the request body parameters that actually need to be changed!</strong></h3>",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "biography": {
                    "type": "string",
                    "description": "The new biography to set."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "binary",
                    "description": "The new user's avatar image"
                  },
                  "bannerImage": {
                    "type": "string",
                    "format": "binary",
                    "description": "The new user's banner image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersMe",
        "summary": "User profile details.",
        "description": "This endpoint will retrieve the details of the current user's profile.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/notifications": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersNotifications",
        "summary": "User's list of notifications.",
        "description": "This endpoint will retrieve the list of a user's notifications.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersSearch",
        "summary": "(optional authentication) Searches users.",
        "description": "This endpoint will retrieve the search results for users.\n<h3><strong>TIP: You can prefix your search with \"id:\" to search for a user with a specific ID.</strong></h3>",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The search query."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/follow": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "postUsersFollow",
        "summary": "Follow or unfollow another user",
        "description": "This endpoint will follow or unfollow another user.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "follow": {
                    "type": "integer",
                    "description": "Whether to follow or unfollow the user.\n- 0 = unfollow\n- 1 = follow",
                    "enum": [
                      0,
                      1
                    ]
                  }
                },
                "required": [
                  "follow"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/followers": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersFollowers",
        "summary": "Retrieve the user's list of followers.",
        "description": "This endpoint will retrieve the user's list of followers.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string",
              "example": "1"
            },
            "required": false,
            "description": "The page to retrieve followers from. (starts at 1)"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/users/{userID}/following": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsersFollowing",
        "summary": "Retrieve the user's list of following users.",
        "description": "This endpoint will retrieve the user's list of following users.",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string",
              "example": "1"
            },
            "required": false,
            "description": "The page to retrieve followers from. (starts at 1)"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/notifications/{notificationUUID}": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "notifications"
        ],
        "operationId": "getNotifications",
        "summary": "Gets the details of a notification",
        "description": "This endpoint will retrieve the details of a notification.",
        "parameters": [
          {
            "in": "path",
            "name": "notificationUUID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the notification to be retrieved."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/notifications/{notificationUUID}/delete": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "notifications"
        ],
        "operationId": "getNotificationsDelete",
        "summary": "Deletes a notification from the database",
        "description": "This endpoint will delete a user's notification.",
        "parameters": [
          {
            "in": "path",
            "name": "notificationUUID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the notification to be deleted."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/notifications/update": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "notifications"
        ],
        "operationId": "postNotificationsUpdate",
        "summary": "Update a single, multiple or all notifications' status",
        "description": "This endpoint will update the status of a single, multiple or all notifications.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true,
                    "description": "The UUID of the notification to update. Use \"all\" to update all of the user's notifications."
                  },
                  "read": {
                    "type": "integer",
                    "description": "Mark notification(s) as read or unread.\n- 0 = unread\n- 1 = read",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "required": [
                  "notification",
                  "read"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "anime"
        ],
        "operationId": "getAnime",
        "summary": "(optional authentication) Anime details.",
        "description": "This endpoint will retrieve the details of an Anime item.",
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "required": false,
            "description": "The relations to include in the response. Available relations are:\n- actors\n- characters\n- cast\n- relations\n- seasons"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}/actors": {
      "get": {
        "tags": [
          "anime"
        ],
        "operationId": "getAnimeActors",
        "summary": "Anime actor information.",
        "description": "This endpoint will retrieve the actors of an Anime item.",
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}/characters": {
      "get": {
        "tags": [
          "anime"
        ],
        "operationId": "getAnimeCharacters",
        "summary": "Anime character information.",
        "description": "This endpoint will retrieve the characters of an Anime item.",
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}/cast": {
      "get": {
        "tags": [
          "anime"
        ],
        "operationId": "getAnimeCast",
        "summary": "Anime actor-character information.",
        "description": "This endpoint will retrieve the actor-characters of an Anime item.",
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}/relations": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "anime"
        ],
        "operationId": "getAnimeRelations",
        "summary": "Anime all relations information.",
        "description": "This endpoint will retrieve the relations of an Anime item.",
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}/seasons": {
      "get": {
        "tags": [
          "anime"
        ],
        "operationId": "getAnimeSeasons",
        "summary": "Anime all seasons information.",
        "description": "This endpoint will retrieve the seasons of an Anime item.",
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/{animeID}/rate": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "anime"
        ],
        "operationId": "postAnimeRate",
        "summary": "Rate an Anime.",
        "description": "This endpoint will allow user's to leave a rating for an Anime.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number",
                    "format": "float",
                    "description": "The rating to leave.",
                    "example": 3.5,
                    "minimum": 1,
                    "maximum": 5
                  }
                },
                "required": [
                  "rating"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "animeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the anime."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime/search": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "anime"
        ],
        "operationId": "getAnimeSearch",
        "summary": "(optional authentication) Searches Anime.",
        "description": "This endpoint will retrieve the search results for Anime.\n<h3><strong>TIP: You can prefix your search with \"id:\" to search for Anime with a specific ID.</strong></h3>",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The search query."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-sections": {
      "get": {
        "tags": [
          "forum-sections"
        ],
        "operationId": "getForumSections",
        "summary": "Forum sections list.",
        "description": "This endpoint will retrieve the forum sections.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-sections/{sectionID}": {
      "get": {
        "tags": [
          "forum-sections"
        ],
        "operationId": "getForumSectionsDetails",
        "summary": "Forum section details.",
        "description": "This endpoint will retrieve the details for a forum section.",
        "parameters": [
          {
            "in": "path",
            "name": "sectionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum section."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-sections/{sectionID}/threads": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-sections"
        ],
        "operationId": "getForumSectionsThreads",
        "summary": "(optional authentication) Forum section get threads.",
        "description": "This endpoint will retrieve the threads in a forum section.",
        "parameters": [
          {
            "in": "path",
            "name": "sectionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum section."
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "example": "recent"
            },
            "required": true,
            "description": "The method of ordering the threads."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string",
              "example": "1"
            },
            "required": false,
            "description": "The page to retrieve threads from. (starts at 1)"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      },
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-sections"
        ],
        "operationId": "postForumSectionsThreads",
        "summary": "Submit a new thread to a section.",
        "description": "This endpoint will submit a new thread.",
        "parameters": [
          {
            "in": "path",
            "name": "sectionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum section."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the thread."
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the thread."
                  }
                },
                "required": [
                  "title",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/actors": {
      "get": {
        "tags": [
          "actors"
        ],
        "operationId": "getActors",
        "summary": "Actors list.",
        "description": "This endpoint will retrieve the actors.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/actors/{actorID}": {
      "get": {
        "tags": [
          "actors"
        ],
        "operationId": "getActorsDetails",
        "summary": "Get actor details.",
        "description": "This endpoint will retrieve the details for a actor.",
        "parameters": [
          {
            "in": "path",
            "name": "actorID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the actor."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime-seasons/{seasonID}": {
      "get": {
        "tags": [
          "anime-seasons"
        ],
        "operationId": "getAnimeSeasonsDetails",
        "summary": "Get specific season details.",
        "description": "This endpoint will retrieve the details of a specific season.",
        "parameters": [
          {
            "in": "path",
            "name": "seasonID",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "ID of the season."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime-seasons/{seasonID}/episodes": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "anime-seasons"
        ],
        "operationId": "getAnimeSeasonsEpisodes",
        "summary": "Retrieve season episodes.",
        "description": "This endpoint will retrieve the episodes in a certain season.",
        "parameters": [
          {
            "in": "path",
            "name": "seasonID",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "ID of the season."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/anime-episodes/{episodeID}/watched": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "anime-episodes"
        ],
        "operationId": "postAnimeEpisodesWatched",
        "summary": "Marks an episode as \"watched\" or \"not watched\".",
        "description": "This endpoint will updated the watched status for an episode.",
        "parameters": [
          {
            "in": "path",
            "name": "episodeID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the episode."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "watched": {
                    "$ref": "#/components/schemas/EpisodeWatchStatus",
                    "description": "Mark episode watched or not.\n- -1 = not watched\n- 1 = watched"
                  }
                },
                "required": [
                  "watched"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/characters": {
      "get": {
        "tags": [
          "characters"
        ],
        "operationId": "getCharacters",
        "summary": "Characters list.",
        "description": "This endpoint will retrieve the characters.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/characters/{characterID}": {
      "get": {
        "tags": [
          "characters"
        ],
        "operationId": "getCharactersDetails",
        "summary": "Get character details.",
        "description": "This endpoint will retrieve the details of a specific character.",
        "parameters": [
          {
            "in": "path",
            "name": "characterID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the character."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/genres": {
      "get": {
        "tags": [
          "genres"
        ],
        "operationId": "getGenres",
        "summary": "Genres list.",
        "description": "This endpoint will retrieve the genres.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/genres/{genreID}": {
      "get": {
        "tags": [
          "genres"
        ],
        "operationId": "getGenreDetails",
        "summary": "Get genre details.",
        "description": "This endpoint will retrieve the details of a specific genre.",
        "parameters": [
          {
            "in": "path",
            "name": "genreID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the genre."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/JSONSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-threads/{threadID}": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-threads"
        ],
        "operationId": "getForumThreadsDetails",
        "summary": "(optional authentication) Get thread details.",
        "description": "This endpoint will retrieve the details for a forum thread.",
        "parameters": [
          {
            "in": "path",
            "name": "threadID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum thread."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetForumThreadsDetails"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-threads/{threadID}/vote": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-threads"
        ],
        "operationId": "postForumThreadsVote",
        "summary": "Leaves a vote for a thread.",
        "description": "This endpoint will leave a vote for a thread.",
        "parameters": [
          {
            "in": "path",
            "name": "threadID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum thread."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "vote": {
                    "$ref": "#/components/schemas/VoteType"
                  }
                },
                "required": [
                  "vote"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostForumThreadsVote"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-threads/{threadID}/replies": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-threads"
        ],
        "operationId": "getForumThreadsReplies",
        "summary": "(optional authentication) Gets the replies on a thread.",
        "description": "This endpoint will retrieve the replies on a thread.",
        "parameters": [
          {
            "in": "path",
            "name": "threadID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum thread."
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "$ref": "#/components/schemas/ForumSortType"
            },
            "required": true,
            "description": "The method of ordering the results."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "The page to retrieve replies from."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetForumThreadsReplies"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      },
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-threads"
        ],
        "operationId": "postForumThreadsReplies",
        "summary": "Leaves a reply on a thread.",
        "description": "This endpoint will leave a reply on a thread.",
        "parameters": [
          {
            "in": "path",
            "name": "threadID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum thread."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the reply."
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostForumThreadsReplies"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-threads/search": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-threads"
        ],
        "operationId": "getForumThreadsSearch",
        "summary": "(optional authentication) Searches forum threads.",
        "description": "This endpoint will retrieve the search results for forum threads.\n<h3><strong>TIP: You can prefix your search with \"id:\" to search for Anime with a specific ID.</strong></h3>",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The search query."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetForumThreadsSearch"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-threads/{threadID}/lock": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-threads"
        ],
        "operationId": "postForumThreadsLock",
        "summary": "[MOD+] Lock or unlock a thread.",
        "description": "<h3><strong>MOD+</strong></h3> This endpoint will lock or unlock a thread.",
        "parameters": [
          {
            "in": "path",
            "name": "threadID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum thread."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "lock": {
                    "type": "integer",
                    "description": "Lock or unlock.\n- 0 = unlock\n- 1 = lock",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "required": [
                  "lock"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostForumThreadsLockSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/forum-replies/{replyID}/vote": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "forum-replies"
        ],
        "operationId": "postForumRepliesVote",
        "summary": "Leaves a vote for a forum reply.",
        "description": "This endpoint will leave a vote for a forum reply.",
        "parameters": [
          {
            "in": "path",
            "name": "replyID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the forum reply."
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "vote": {
                    "$ref": "#/components/schemas/VoteType"
                  }
                },
                "required": [
                  "vote"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostForumRepliesVoteSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "operationId": "postSessions",
        "summary": "Create a new session (login)",
        "description": "This endpoint will create a new session for a user.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform that was used to create the session",
                    "example": "iOS"
                  },
                  "platform_version": {
                    "type": "string",
                    "description": "The platform version that was used to create the session",
                    "example": "13.4"
                  },
                  "device_vendor": {
                    "type": "string",
                    "description": "The device vendor that was used to create the session",
                    "example": "Apple"
                  },
                  "device_model": {
                    "type": "string",
                    "description": "The device model that was used to create the session",
                    "example": "iPhone 11 Pro Max"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "platform",
                  "platform_version",
                  "device_vendor",
                  "device_model"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostSessionsSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions/{sessionID}": {
      "get": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "getSessions",
        "summary": "Gets the details of a session",
        "description": "This endpoint will retrieve the details of a session.",
        "parameters": [
          {
            "in": "path",
            "name": "sessionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the session to be retrieved."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetSessionsSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions/{sessionID}/update": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "postSessionsUpdate",
        "summary": "Updates the information of a session",
        "description": "This endpoint will update the information of a sessions.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apn_device_token": {
                    "type": "string",
                    "description": "The new APN device token for the session."
                  }
                },
                "required": [
                  "apn_device_token"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "sessionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the session to be updated."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostSessionsUpdateSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/sessions/{sessionID}/delete": {
      "post": {
        "security": [
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "postSessionsDelete",
        "summary": "Deletes a session",
        "description": "This endpoint will delete a session.",
        "parameters": [
          {
            "in": "path",
            "name": "sessionID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the session to be deleted."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostSessionsDeleteSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/studios": {
      "get": {
        "tags": [
          "studios"
        ],
        "operationId": "getStudios",
        "summary": "Studios list.",
        "description": "This endpoint will retrieve the studios.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetStudiosSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/studios/{studioID}": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "studios"
        ],
        "operationId": "getStudiosDetails",
        "summary": "(Optional authentication) Get studio details.",
        "description": "This endpoint will retrieve the details of a specific studio.",
        "parameters": [
          {
            "in": "path",
            "name": "studioID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the studio."
          },
          {
            "in": "query",
            "name": "include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "required": false,
            "description": "The relations to include in the response. Available relations are: anime"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetStudiosDetailsSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/studios/{studioID}/anime": {
      "get": {
        "security": [
          {
          },
          {
            "kurozoraBearer": [
            ]
          }
        ],
        "tags": [
          "studios"
        ],
        "operationId": "getStudiosAnime",
        "summary": "(Optional authentication) Get studio anime details.",
        "description": "This endpoint will retrieve the anime details for a studio.",
        "parameters": [
          {
            "in": "path",
            "name": "studioID",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the studio."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetStudiosAnimeSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/themes": {
      "get": {
        "tags": [
          "themes"
        ],
        "operationId": "getThemes",
        "summary": "Retrieve an overview of themes.",
        "description": "This endpoint will retrieve an overview of themes.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetThemesSuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    },
    "/privacy-policy": {
      "get": {
        "tags": [
          "misc"
        ],
        "operationId": "getPrivacyPolicy",
        "summary": "Retrieve latest privacy policy.",
        "description": "This endpoint will retrieve the latest privacy policy.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetPrivacyPolicySuccess"
          },
          "400": {
            "$ref": "#/components/responses/JSONError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ForumSortType": {
        "type": "string",
        "enum": [
          "top",
          "recent"
        ],
        "default": "top",
        "description": "The set of available forum sort types.\n- top: sorted by the most liked resource at the top.\n- recent: sorted by the newly created resource at the top."
      },
      "VoteType": {
        "type": "integer",
        "enum": [
          -1,
          1
        ],
        "default": 1,
        "description": "The vote type to submit. Submitting the same vote type twice will undo the vote.\n- -1 = dislike\n- 1 = like"
      },
      "EpisodeWatchStatus": {
        "type": "integer",
        "enum": [
          -1,
          1
        ],
        "default": 1,
        "description": "The set of available watch status types.\n- -1 = not watched\n- 1 = watched"
      },
      "KurozoraLibraryStatus": {
        "type": "string",
        "enum": [
          "Watching",
          "Dropped",
          "Planning",
          "Completed",
          "OnHold"
        ],
        "default": "Watching",
        "description": "The set of available library status types."
      },
      "MALImportBehavior": {
        "type": "string",
        "enum": [
          "overwrite"
        ],
        "default": "overwrite",
        "description": "The set of available MAL import behavior types."
      }
    },
    "securitySchemes": {
      "kurozoraBearer": {
        "type": "apiKey",
        "in": "header",
        "name": "kuro-auth"
      }
    },
    "responses": {
      "JSONSuccess": {
        "description": "Successful Kurozora JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "meta": {
                  "version": "1.0.8",
                  "query_count": 0,
                  "is_user_authenticated": false,
                  "authenticated_user_id": null
                }
              }
            }
          }
        }
      },
      "JSONError": {
        "description": "Error Kurozora JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "meta": {
                  "version": "1.0.8",
                  "query_count": 0,
                  "is_user_authenticated": false,
                  "authenticated_user_id": null
                },
                "message": "Description of the error."
              }
            }
          }
        }
      },
      "GetForumThreadsDetails": {
        "description": "Successful GET Forum-Threads Details JSON response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 1,
                    "type": "threads",
                    "href": "/api/v1/forum-threads/1",
                    "attributes": {
                      "title": "Enim quia molestiae.",
                      "content": "Fuga repellendus blanditiis quaerat provident et doloremque. Ad ullam nulla at optio ipsa ipsum.",
                      "locked": false,
                      "reply_count": 13,
                      "score": 10,
                      "creation_date": "2020-07-27 12:59:34"
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 29,
                            "type": "users",
                            "href": "/api/v1/users/29/profile",
                            "attributes": {
                              "username": "reynold71",
                              "activity_status": "Offline",
                              "biography": "Et in dolor illo sit non. Veniam est et qui qui atque. Ut mollitia autem accusantium ea molestiae voluptatem a. Dicta in qui necessitatibus maiores.",
                              "avatar_url": null,
                              "banner_url": null,
                              "follower_count": 67,
                              "following_count": 67,
                              "reputation_count": 59
                            },
                            "current_user": {
                              "following": false
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "vote_action": 1
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "PostForumThreadsVote": {
        "description": "Successful GET Forum-Threads Vote JSON response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": {
                  "vote_action": 0
                }
              }
            }
          }
        }
      },
      "GetForumThreadsReplies": {
        "description": "Successful GET Forum-Threads Replies JSON response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 56,
                    "type": "replies",
                    "href": "/api/v1/forum-threads/56/replies",
                    "attributes": {
                      "content": "Ipsum aliquid quasi hic accusamus. Dolor incidunt repellendus voluptatum modi temporibus cum totam.",
                      "posted_at": "2020-07-27 12:59:35",
                      "score": 0
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 45,
                            "type": "users",
                            "href": "/api/v1/users/45/profile",
                            "attributes": {
                              "username": "mattie47",
                              "activity_status": "Offline",
                              "biography": "Alias odit quaerat odit magnam. Quia eius fuga quos temporibus cumque laborum. Tempora at itaque et sequi aperiam non accusantium. Dolorem consectetur maiores dolores id.",
                              "avatar_url": null,
                              "banner_url": null,
                              "follower_count": 0,
                              "following_count": 0,
                              "reputation_count": 0
                            },
                            "current_user": {
                              "following": false
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "like_action": 0
                    }
                  },
                  {
                    "id": 97,
                    "type": "replies",
                    "href": "/api/v1/forum-threads/97/replies",
                    "attributes": {
                      "content": "Tenetur dignissimos exercitationem qui dolores doloremque labore. Nobis non in iste qui est exercitationem.",
                      "posted_at": "2020-07-27 12:59:35",
                      "score": 233
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 14,
                            "type": "users",
                            "href": "/api/v1/users/14/profile",
                            "attributes": {
                              "username": "neal.green",
                              "activity_status": "Offline",
                              "biography": "Aspernatur sint eligendi similique qui natus. Consequatur sed incidunt consectetur laborum. Ipsum voluptates expedita aut est ut reprehenderit.",
                              "avatar_url": "https://kurozora.app/storage/14/ProfileImage.png",
                              "banner_url": "https://kurozora.app/storage/14/BannerImage.png",
                              "follower_count": 299,
                              "following_count": 128,
                              "reputation_count": 547
                            },
                            "current_user": {
                              "following": true
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "like_action": 0
                    }
                  }
                ],
                "next": "/api/v1/forum-threads/1/replies?page=2"
              }
            }
          }
        }
      },
      "PostForumThreadsReplies": {
        "description": "Successful POST Forum-Threads Replies JSON response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 210,
                    "type": "replies",
                    "href": "/api/v1/forum-threads/209/replies",
                    "attributes": {
                      "content": "New reply content.",
                      "posted_at": "2020-07-29 12:33:32",
                      "score": 0
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 2,
                            "type": "users",
                            "href": "/api/v1/users/2/profile",
                            "attributes": {
                              "username": "Kirito",
                              "activity_status": "Online",
                              "biography": "My biography.",
                              "avatar_url": "https://kurozora.app/storage/2/ProfileImage.png",
                              "banner_url": "https://kurozora.app/storage/2/BannerImage.png",
                              "follower_count": 0,
                              "following_count": 0,
                              "reputation_count": 0
                            },
                            "current_user": {
                              "following": false
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "like_action": 0
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "GetForumThreadsSearch": {
        "description": "Successful GET Forum-Threads Search JSON response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 31,
                    "type": "threads",
                    "href": "/api/v1/forum-threads/31",
                    "attributes": {
                      "title": "Saepe voluptas sunt itaque.",
                      "content": "Beatae eos quisquam voluptatem id non. Inventore quam ea voluptatem laboriosam fuga quia enim qui. Illo blanditiis hic aperiam perspiciatis et id veniam.",
                      "locked": false,
                      "reply_count": 389,
                      "score": 2361,
                      "creation_date": "2020-07-27 12:59:34"
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 36,
                            "type": "users",
                            "href": "/api/v1/users/36/profile",
                            "attributes": {
                              "username": "iliana.jacobs",
                              "activity_status": "Offline",
                              "biography": "Numquam dicta laborum ut quod distinctio rem sunt sint. Impedit est ea dicta eum. Laboriosam id minima voluptas molestiae. Dolorum tenetur blanditiis id adipisci et.",
                              "avatar_url": "https://kurozora.app/storage/36/ProfileImage.png",
                              "banner_url": null,
                              "follower_count": 7694,
                              "following_count": 5373,
                              "reputation_count": 14734
                            },
                            "current_user": {
                              "following": false
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "vote_action": 1
                    }
                  },
                  {
                    "id": 43,
                    "type": "threads",
                    "href": "/api/v1/forum-threads/43",
                    "attributes": {
                      "title": "Sunt harum quo fuga.",
                      "content": "Exercitationem alias nemo nobis omnis deserunt sit. Quidem ab accusamus non nemo. Aut rerum officiis dignissimos nulla dolorem hic fugiat.",
                      "locked": true,
                      "reply_count": 3,
                      "score": -53,
                      "creation_date": "2020-07-27 12:59:34"
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 44,
                            "type": "users",
                            "href": "/api/v1/users/44/profile",
                            "attributes": {
                              "username": "lilliana45",
                              "activity_status": "Offline",
                              "biography": "Quam repudiandae autem modi velit vitae. Animi ratione hic distinctio sint. Inventore maxime ut voluptatem id est.",
                              "avatar_url": null,
                              "banner_url": "https://kurozora.app/storage/44/BannerImage.png",
                              "follower_count": 63,
                              "following_count": 102,
                              "reputation_count": 353
                            },
                            "current_user": {
                              "following": false
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "vote_action": -1
                    }
                  },
                  {
                    "id": 47,
                    "type": "threads",
                    "href": "/api/v1/forum-threads/47",
                    "attributes": {
                      "title": "Sit possimus incidunt.",
                      "content": "Vero hic ea explicabo iure aut. Maiores voluptates reprehenderit vel perferendis.",
                      "locked": false,
                      "reply_count": 0,
                      "score": 0,
                      "creation_date": "2020-07-27 12:59:34"
                    },
                    "relationships": {
                      "user": {
                        "data": [
                          {
                            "id": 53,
                            "type": "users",
                            "href": "/api/v1/users/53/profile",
                            "attributes": {
                              "username": "maximilian.glover",
                              "activity_status": "Offline",
                              "biography": "In laborum perspiciatis odio sint laboriosam ipsam. Velit qui aut et est temporibus. Quisquam et quia eligendi est sed. Facilis ducimus sint alias iusto.",
                              "avatar_url": "https://kurozora.app/storage/53/ProfileImage.png",
                              "banner_url": "https://kurozora.app/storage/53/BannerImage.png",
                              "follower_count": 593,
                              "following_count": 2846,
                              "reputation_count": 8463
                            },
                            "current_user": {
                              "following": true
                            }
                          }
                        ]
                      }
                    },
                    "current_user": {
                      "like_action": 0
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "PostForumThreadsLockSuccess": {
        "description": "Successful POST Forum-Threads Lock JSON response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": {
                  "locked": false
                }
              }
            }
          }
        }
      },
      "PostForumRepliesVoteSuccess": {
        "description": "Successful POST Forum-Replies Vote response. There are three vote actions:\n- -1 = dislike\n- 0 = no vote\n- 1 = like",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": {
                  "vote_action": 1
                }
              }
            }
          }
        }
      },
      "PostSessionsSuccess": {
        "description": "Successful POST Sessions JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": {
                  "kuro_auth_token": "AuthenticationToken",
                  "user": {
                    "id": 2,
                    "type": "users",
                    "href": "/api/v1/users/2/profile",
                    "attributes": {
                      "username": "Kirito",
                      "activity_status": "Online",
                      "biography": "My biography.",
                      "avatar_url": "https://kurozora.app/storage/2/ProfileImage.png",
                      "banner_url": "https://kurozora.app/storage/2/BannerImage.png",
                      "follower_count": 10,
                      "following_count": 12,
                      "reputation_count": 14
                    },
                    "private": {
                      "username_change_available": false
                    }
                  },
                  "session": {
                    "id": 3,
                    "type": "sessions",
                    "href": "/api/v1/sessions/3",
                    "attributes": {
                      "ip": "127.0.0.1",
                      "last_validated_at": "2020-07-28 02:43:50",
                      "platform": {
                        "human_readable_format": "iPhone 11 Pro Max on iOS 13.4",
                        "platform": "iOS",
                        "platform_version": "13.4",
                        "device_vendor": "Apple",
                        "device_model": "iPhone 11 Pro Max"
                      },
                      "location": {
                        "city": "Amsterdam",
                        "region": "Amsterdam",
                        "country": "Netherlands",
                        "latitude": 52.35997,
                        "longitude": 4.86352
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetSessionsSuccess": {
        "description": "Successful GET Sessions JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": {
                  "id": 3,
                  "type": "sessions",
                  "href": "/api/v1/sessions/3",
                  "attributes": {
                    "ip": "127.0.0.1",
                    "last_validated_at": "2020-07-28 02:43:50",
                    "platform": {
                      "human_readable_format": "iPhone 11 Pro Max on iOS 13.4",
                      "platform": "iOS",
                      "platform_version": "13.4",
                      "device_vendor": "Apple",
                      "device_model": "iPhone 11 Pro Max"
                    },
                    "location": {
                      "city": "Amsterdam",
                      "region": "Amsterdam",
                      "country": "Netherlands",
                      "latitude": 52.35997,
                      "longitude": 4.86352
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PostSessionsUpdateSuccess": {
        "description": "Successful POST Sessions Update JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "message": "Session update successful."
              }
            }
          }
        }
      },
      "PostSessionsDeleteSuccess": {
        "description": "Successful POST Sessions Delete JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "meta": {
                  "version": "1.0.8",
                  "query_count": 0,
                  "is_user_authenticated": false,
                  "authenticated_user_id": null
                }
              }
            }
          }
        }
      },
      "GetStudiosSuccess": {
        "description": "Successful GET Studios JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 1,
                    "type": "studios",
                    "href": "/api/v1/studios/1",
                    "attributes": {
                      "name": "Considine-Tillman",
                      "logo_url": "https://lorempixel.com/640/480/?85310",
                      "about": "Eos repellat optio aut explicabo quod. Consequatur sit quasi aliquam sed modi aut. Perspiciatis et perferendis architecto voluptas eos quis iure. Corrupti ea reiciendis et quo sed itaque. Unde ipsa officia et veniam dicta ullam omnis modi. Consequuntur non possimus fugiat quaerat delectus ea. In voluptas dignissimos veniam reprehenderit a. Cum dolores aperiam et nihil. Veniam id rerum commodi quia assumenda at. Et velit iure eos aut. Et est praesentium id fugiat reprehenderit. Sunt dolorem aut ratione ipsam ipsum quo.",
                      "founded": "1983-09-30",
                      "website_url": "http://rodriguez.com/eos-ut-earum-ut-eum-voluptas-iusto.html"
                    }
                  },
                  {
                    "id": 2,
                    "type": "studios",
                    "href": "/api/v1/studios/2",
                    "attributes": {
                      "name": "Harris-Kuhn",
                      "logo_url": "https://lorempixel.com/640/480/?61391",
                      "about": "Et suscipit sed veniam libero. Praesentium odio rerum commodi aut debitis expedita. Dolore quidem repudiandae omnis nemo voluptatem. Soluta enim soluta dolor aut earum et officiis. Illum sit rerum ab dolor sit eos. Est voluptates eos cupiditate natus. Adipisci sapiente aperiam rerum. Non et voluptatem dolorem ex exercitationem exercitationem. Consequatur qui totam ut. Distinctio quae voluptas omnis quae earum. Ut est eligendi ipsa voluptatibus et deserunt. Amet illum aliquid aut non. Sapiente iusto a soluta non. Temporibus et est est voluptas quo. Et necessitatibus nihil aut expedita maxime et aut. Voluptate aut laudantium rerum autem. Voluptatibus ullam tempore accusantium illum illo quia. Debitis qui assumenda dicta neque. Ullam optio non est ad. Facere quaerat voluptatem est qui quo consequatur error. Assumenda cumque ut molestias fugiat. Ut molestias laudantium aut dolorum ab. Sed sapiente tempore fugit et aliquam. Blanditiis ut id rem quis. Assumenda velit ea rerum temporibus. Ut debitis molestiae debitis esse deleniti at. Aut quis earum eius eum omnis ut quia rerum.",
                      "founded": "1990-04-04",
                      "website_url": "http://rice.biz/dolores-minima-quisquam-at-et.html"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "GetStudiosDetailsSuccess": {
        "description": "Successful GET Studios Details JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 1,
                    "type": "studios",
                    "href": "/api/v1/studios/1",
                    "attributes": {
                      "name": "Considine-Tillman",
                      "logo_url": "https://lorempixel.com/640/480/?85310",
                      "about": "Eos repellat optio aut explicabo quod. Consequatur sit quasi aliquam sed modi aut. Perspiciatis et perferendis architecto voluptas eos quis iure. Corrupti ea reiciendis et quo sed itaque. Unde ipsa officia et veniam dicta ullam omnis modi. Consequuntur non possimus fugiat quaerat delectus ea. In voluptas dignissimos veniam reprehenderit a. Cum dolores aperiam et nihil. Veniam id rerum commodi quia assumenda at. Et velit iure eos aut. Et est praesentium id fugiat reprehenderit. Sunt dolorem aut ratione ipsam ipsum quo.",
                      "founded": "1983-09-30",
                      "website_url": "http://rodriguez.com/eos-ut-earum-ut-eum-voluptas-iusto.html"
                    },
                    "relationships": {
                      "anime": {
                        "data": [
                          {
                            "id": 1,
                            "type": "show",
                            "href": "/api/v1/anime/1",
                            "attributes": {
                              "title": "\"0\"",
                              "type": "Tv",
                              "source": "Unknown",
                              "anidb_id": 10143,
                              "anilist_id": 102416,
                              "kitsu_id": 8925,
                              "imdb_id": null,
                              "mal_id": 20707,
                              "network": null,
                              "studio": [
                                {
                                  "id": 1,
                                  "type": "studios",
                                  "href": "/api/v1/studios/1",
                                  "attributes": {
                                    "name": null,
                                    "logo_url": null,
                                    "about": null,
                                    "founded": null,
                                    "website_url": null
                                  }
                                }
                              ],
                              "status": "Continuing",
                              "episodes": 0,
                              "seasons": 0,
                              "average_rating": 0,
                              "rating_count": 0,
                              "synopsis": "Error ipsa eos et rem recusandae voluptate sunt corrupti. Qui est est autem sit pariatur laudantium. Suscipit laboriosam enim modi quae quia aperiam excepturi sunt. Temporibus est hic adipisci.",
                              "runtime": 25,
                              "watch_rating": "TV-14",
                              "tagline": "Voluptatem rerum quos quidem aut.",
                              "video_url": null,
                              "poster": null,
                              "background": null,
                              "nsfw": false,
                              "genres": [],
                              "first_aired": "1973-11-15",
                              "last_aired": "1974-02-07",
                              "air_time": "20:00:00",
                              "air_day": 3,
                              "copyright": "® 2003 Watsica-Kling"
                            }
                          },
                          {
                            "id": 2,
                            "type": "show",
                            "href": "/api/v1/anime/2",
                            "attributes": {
                              "title": "\"Aesop\" no Ohanashi yori: Ushi to Kaeru, Yokubatta Inu",
                              "type": "Tv",
                              "source": "Digital manga",
                              "anidb_id": 3689,
                              "anilist_id": null,
                              "kitsu_id": 9179,
                              "imdb_id": null,
                              "mal_id": 25627,
                              "network": null,
                              "studio": [
                                {
                                  "id": 2,
                                  "type": "studios",
                                  "href": "/api/v1/studios/2",
                                  "attributes": {
                                    "name": null,
                                    "logo_url": null,
                                    "about": null,
                                    "founded": null,
                                    "website_url": null
                                  }
                                }
                              ],
                              "status": "Ended",
                              "episodes": 0,
                              "seasons": 0,
                              "average_rating": 0,
                              "rating_count": 0,
                              "synopsis": "Totam ex non eaque rem. Suscipit eos recusandae et. Pariatur reprehenderit aliquid reprehenderit nisi quae. Fuga enim atque ratione occaecati sequi iste dignissimos.",
                              "runtime": 25,
                              "watch_rating": "TV-14",
                              "tagline": "Vel facilis dignissimos suscipit veritatis enim nemo ut.",
                              "video_url": null,
                              "poster": null,
                              "background": null,
                              "nsfw": false,
                              "genres": [],
                              "first_aired": "2014-09-28",
                              "last_aired": "2014-12-21",
                              "air_time": "19:24:00",
                              "air_day": 4,
                              "copyright": "® 1985 Fadel, Sipes and McGlynn"
                            }
                          }
                        ],
                        "href": "/api/v1/studios/1/anime"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "GetStudiosAnimeSuccess": {
        "description": "Successful GET Studios Anime JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 1,
                    "type": "show",
                    "href": "/api/v1/anime/1",
                    "attributes": {
                      "title": "\"0\"",
                      "type": "Tv",
                      "source": "Unknown",
                      "anidb_id": 10143,
                      "anilist_id": 102416,
                      "kitsu_id": 8925,
                      "imdb_id": null,
                      "mal_id": 20707,
                      "network": null,
                      "studio": [
                        {
                          "id": 1,
                          "type": "studios",
                          "href": "/api/v1/studios/1",
                          "attributes": {
                            "name": null,
                            "logo_url": null,
                            "about": null,
                            "founded": null,
                            "website_url": null
                          }
                        }
                      ],
                      "status": "Continuing",
                      "episodes": 0,
                      "seasons": 0,
                      "average_rating": 0,
                      "rating_count": 0,
                      "synopsis": "Error ipsa eos et rem recusandae voluptate sunt corrupti. Qui est est autem sit pariatur laudantium. Suscipit laboriosam enim modi quae quia aperiam excepturi sunt. Temporibus est hic adipisci.",
                      "runtime": 25,
                      "watch_rating": "TV-14",
                      "tagline": "Voluptatem rerum quos quidem aut.",
                      "video_url": null,
                      "poster": null,
                      "background": null,
                      "nsfw": false,
                      "genres": [],
                      "first_aired": "1973-11-15",
                      "last_aired": "1974-02-07",
                      "air_time": "20:00:00",
                      "air_day": 3,
                      "copyright": "® 2003 Watsica-Kling"
                    }
                  },
                  {
                    "id": 2,
                    "type": "show",
                    "href": "/api/v1/anime/2",
                    "attributes": {
                      "title": "\"Aesop\" no Ohanashi yori: Ushi to Kaeru, Yokubatta Inu",
                      "type": "Tv",
                      "source": "Digital manga",
                      "anidb_id": 3689,
                      "anilist_id": null,
                      "kitsu_id": 9179,
                      "imdb_id": null,
                      "mal_id": 25627,
                      "network": null,
                      "studio": [
                        {
                          "id": 2,
                          "type": "studios",
                          "href": "/api/v1/studios/2",
                          "attributes": {
                            "name": null,
                            "logo_url": null,
                            "about": null,
                            "founded": null,
                            "website_url": null
                          }
                        }
                      ],
                      "status": "Ended",
                      "episodes": 0,
                      "seasons": 0,
                      "average_rating": 0,
                      "rating_count": 0,
                      "synopsis": "Totam ex non eaque rem. Suscipit eos recusandae et. Pariatur reprehenderit aliquid reprehenderit nisi quae. Fuga enim atque ratione occaecati sequi iste dignissimos.",
                      "runtime": 25,
                      "watch_rating": "TV-14",
                      "tagline": "Vel facilis dignissimos suscipit veritatis enim nemo ut.",
                      "video_url": null,
                      "poster": null,
                      "background": null,
                      "nsfw": false,
                      "genres": [],
                      "first_aired": "2014-09-28",
                      "last_aired": "2014-12-21",
                      "air_time": "19:24:00",
                      "air_day": 4,
                      "copyright": "® 1985 Fadel, Sipes and McGlynn"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "GetThemesSuccess": {
        "description": "Successful GET Themes JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": [
                  {
                    "id": 1,
                    "type": "themes",
                    "attributes": {
                      "name": "Watermelon",
                      "download_link": "/api/v1/themes/1/download"
                    }
                  },
                  {
                    "id": 2,
                    "type": "themes",
                    "attributes": {
                      "name": "Blueberry",
                      "download_link": "/api/v1/themes/2/download"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "GetPrivacyPolicySuccess": {
        "description": "Successful GET Privacy Policy JSON response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "data": {
                  "privacy_policy": "The privacy policy in HTML format."
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "View KurozoraKit Documentation",
    "url": "https://developer.kurozora.app/kurozorakit/"
  }
}
