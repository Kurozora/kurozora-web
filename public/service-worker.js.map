{"version":3,"file":"/service-worker.js","mappings":"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","sources":["webpack:///./resources/js/service-worker.js"],"sourcesContent":["importScripts('https://storage.googleapis.com/workbox-cdn/releases/7.0.0/workbox-sw.js')\n\nconst CACHE_VERSION = 'v1'\nconst CACHE_NAME = 'general-cache-' + CACHE_VERSION\nconst OFFLINE_URL = 'offline.html'\n\n// Cache important files by default\nconst defaultCaches = [\n    OFFLINE_URL,\n    'css/app.css',\n    'css/chat.css',\n    'css/watch.css',\n    'js/app.js',\n    'js/vendor.js',\n    'js/db.js',\n    'js/chat.js',\n    'js/listen.js',\n    'js/theme.js',\n    'js/watch.js',\n    'images/static/icon/app_icon.webp',\n]\n\n// Don't cache these endpoints\nconst noCacheEndpoints = [\n    '/forgot-password',\n    '/merge-library',\n    '/reset-password',\n    '/sign-in',\n    '/sign-out',\n    '/sign-up',\n    '/siwa',\n    '/two-factor-authentication'\n];\n\nself.addEventListener(\"message\", (event) => {\n    if (event.data && event.data.type === \"SKIP_WAITING\") {\n        self.skipWaiting()\n    }\n})\n\n// Open a cache and add the default files during installation\nself.addEventListener('install', (event) => {\n    event.waitUntil(\n        caches.open(CACHE_NAME).then((cache) => {\n            return cache.addAll(defaultCaches)\n        })\n    )\n})\n\n// Activate the new service worker and clean up old caches\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        caches.keys().then((cacheNames) => {\n            return Promise.all(\n                cacheNames.map((name) => {\n                    if (name !== CACHE_NAME) {\n                        return caches.delete(name)\n                    }\n                })\n            )\n        })\n    )\n})\n\n// Cache pages as the user browses\nself.addEventListener('fetch', (event) => {\n    const requestUrl = new URL(event.request.url);\n\n    // Check if the request URL matches any endpoint that should not be cached\n    if (noCacheEndpoints.some(endpoint => requestUrl.pathname.includes(endpoint))) {\n        event.respondWith(fetch(event.request));\n    } else {\n        event.respondWith(\n            caches.match(event.request).then((response) => {\n                return response || fetch(event.request).then((fetchResponse) => {\n                    return caches.open(CACHE_NAME).then((cache) => {\n                        cache.put(event.request, fetchResponse.clone())\n                        return fetchResponse\n                    })\n                })\n            }).catch(() => {\n                return caches.match(OFFLINE_URL)\n            })\n        )\n    }\n})\n\n// Background Sync - periodic sync\nself.addEventListener('sync', (event) => {\n    if (event.tag === 'background-sync') {\n        event.waitUntil(doBackgroundSync())\n    }\n})\n\nasync function doBackgroundSync() {\n    console.log('Background sync is triggered!')\n}\n\n// Notifications API\nself.addEventListener('push', (event) => {\n    const data = event.data.json();\n\n    self.registration.showNotification(data.title, {\n        body: data.body,\n        icon: 'images/static/icon/app_icon.webp'\n    });\n});\n\nself.addEventListener('notificationclick', (event) => {\n    // Handle notification click event\n    const notification = event.notification\n    const action = event.action\n\n    // if (action === 'open-url') {\n    //     // Open a specific URL when the notification is clicked\n    //     clients.openWindow('https://kurozora.app')\n    // }\n\n    notification.close()\n})\n\nself.addEventListener('notificationclose', (event) => {\n    const dismissedNotification = event.notification\n    console.log('Notification closed:', dismissedNotification)\n})\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","importScripts","CACHE_NAME","OFFLINE_URL","defaultCaches","noCacheEndpoints","_doBackgroundSync","_callee","_context","console","log","arguments","apply","_next","_throw","self","addEventListener","event","data","type","skipWaiting","waitUntil","caches","open","cache","addAll","keys","cacheNames","all","map","name","requestUrl","URL","request","url","some","endpoint","pathname","includes","respondWith","fetch","match","response","fetchResponse","put","clone","tag","doBackgroundSync","json","registration","showNotification","title","body","icon","notification","action","close","dismissedNotification"],"sourceRoot":""}